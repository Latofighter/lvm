#define Version "3.01f"
#define Revision "14"
#define Date "19.02.13"
#include <a_samp>
#include <Dini>
#include <dutils>
#include <FORXDUDB>
#include <core>
#include <float>
#include <file>
#include <time>
#include <irc_edited>

//#include <YSF>

#include "lvmax_passwords.pwn" // пароли и уникальные переменные

#pragma tabsize 0 // да-да, эта хунта появилась _после_ написания скрипта

//----- IRC variables ------------
new EchoConnection1, EchoConnection2;
new Connections = 0;
new recipient2[256], user2[256], host2[256], message2[256];

new IRCconnetion;

forward IRC_UserSay(conn, recipient[], user[], host[], message[]);
forward IRC_UserCommand(conn, recipient[], user[], host[], message[]);
forward IRC_ReconnectF();
forward IRC_ConnectionCheckEchoBased();

#define CHANNEL_PREFIX '#'
#define COMMAND_PREFIX '!'

#if !defined isnull
#define isnull(%1) \
	((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
#endif

//---------------------------------

new IPcheck[MAX_PLAYERS][128];
new Text:Clock;  // define the time text draw
new Text:WEB;
new Text:BankDraw[MAX_PLAYERS];
new Text:GangDraw[MAX_PLAYERS];
new Text:LocDraw[MAX_PLAYERS];
new Text: Cizgi;
new Text: ArkaPlan0;
new Text: ArkaPlan1;
new Text: ArkaPlan2;
new Text: ArkaPlan3;
new Text: ArkaPlan4;
new Text: ArkaPlan5;
new Text: ArkaPlan6;
new Text: GostergeYazi[MAX_PLAYERS];
new Text: Hizg[MAX_PLAYERS];
new Text: Cang[MAX_PLAYERS];
new tmppass[MAX_PLAYERS][256];
new CurrReceiver[MAX_PLAYERS];
enum ChTmp {
	VehID,
	VehSeat,
Float:HP,
Float:psX,
Float:psY,
Float:psZ,
Float:psA,
};
new CheckTmp[MAX_PLAYERS][ChTmp];


//new TestsedStr[1000][256];

new mins;
new bool:playerSpawned[MAX_PLAYERS];
new clll=0;
/*
new StartTimer1[MAX_PLAYERS];
new StartTimer2[MAX_PLAYERS];
new StartTimer3[MAX_PLAYERS];
new StartTimer4[MAX_PLAYERS];
new StartTimer5[MAX_PLAYERS];
new StartTimer6[MAX_PLAYERS];*/

new Float:X[MAX_PLAYERS], Float:Y[MAX_PLAYERS], Float:Z[MAX_PLAYERS];

//anti car spawn cheat vars
enum _ac_enum
{
	_warns,
	_old_state,
	_old_vehicle,
}
new _ac_info[ MAX_PLAYERS ][ _ac_enum ];
// /anti car spawn cheat vars

new CrashTestOn;
new CrashTestString[256];
new crashtext[256];
new PlayerSumMes;
new BanString[256];

new Float:Xgspawn[MAX_PLAYERS], Float:Ygspawn[MAX_PLAYERS], Float:Zgspawn[MAX_PLAYERS];

//new Float:XXPLt, Float:YYPLt, Float:ZZPLt;
//new Float:XX2PLt, Float:YY2PLt, Float:ZZ2PLt;
//new sv1or2;

new Sponsor[MAX_PLAYERS];
new MainNoob[MAX_PLAYERS];

new VoteKickID=0;
new VoteKickNUM=0;
new VoteKickTIMER=0;
new VoteKickVOTED[MAX_PLAYERS];
new VoteKickT;

new GlobalKills;
new GlobalCash1;
new GlobalCash2;
new GlobalPlayers;
new GlobalRace;
new GlobalDM;

new string1[256];
new string2[256];
new string3[256];
new string4[256];
new string5[256];
new string6[256];
new string7[256];
new string8[256];
new string9[256];
new string10[256];


new LocationsCor[150][5];
new LocationsText[150][256];

new LottoStarted;
new LottoGlobal;
new LottoExe;

#define GANG_COST 5000000
#define MAX_GANG_MEMBERS 35

new ServerTextId;

new tempt[30][256];

new Float:Xbombb[MAX_PLAYERS];
new Float:Ybombb[MAX_PLAYERS];
new Float:Zbombb[MAX_PLAYERS];
new bombd[MAX_VEHICLES];
new curvpld[MAX_PLAYERS];
new BombTimer[MAX_PLAYERS][2];


new Float:Xold[MAX_PLAYERS], Float:Yold[MAX_PLAYERS];
new Skfile[256];

new ADV[3][256];
new CityAdding;
new CityAddingLineNew[256];
new CityAddingLineOld[256];
new CityAddingLineNewIp[256];
new CityAddingLineOldIp[256];
new CityAddingLineOldCity[256];
new CityAddingLineNewCity[256];
new CityAddingNickName[256];
new CityAddingStatNick[256];

#define MAX_SWEARS 100
#define STR 100

// This converts a vehicle number to a single bit
#define V(%1) \
	1 << (%1-400 & 0x1F)

new Swears[MAX_SWEARS][STR];
new num_words = 0;

#define BANS "LVM/bans.txt"

#define SOUND_MUSIC1							1187
#define SOUND_OFF                    			1184


//Colour Definitions
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_RED 0xAA3333AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_SYSTEM_PW 0xFFFF33AA	// YELLOW (FFFF33) system personal warning ("you must be in a bank")
#define COLOR_ADSAY 0x2F88D6AA
#define yellow 0xFFFF00AA
#define green 0x33FF33AA
#define red 0xFF0000AA
#define white 0xFFFFFFAA
#define cyan 0x00FFFFAA
#define CMD 0x7FFFD4FF
#define COLOR_SYSTEM 0xF5FF9FAA
#define COLOR_BADSYSTEM 0xC8BEBEAA
#define COLOUR_GREY 0xAFAFAFAA // grey
#define COLOUR_RED 0xAA3333AA // red
#define COLOUR_WHITE 0xFFFFFFAA // white
#define COLOUR_BLUE 0x33AAFFAA // blue
#define COLOUR_LIGHTBLUE 0x33CCFFAA
#define COLOUR_ORANGE 0xFF9900AA
// TODO: more colours
#define COLOUR_MISC 0xAFAFAFAA // Grey - Misc
#define COLOUR_CHAT 0xFFFFFFAA // White - Chat
#define COLOUR_PLAYER 0xAAAAAAAA // White - Player
#define COLOUR_XP_GOOD 0x00C7FFAA // Blue - XP
#define COLOUR_XP_BAD 0x00008BAA // Blue - XP
#define COLOUR_COMBAT_GOOD 0xAA3333AA // Red - Combat
#define COLOUR_COMBAT_BAD 0xBB3333AA // Red - Combat
#define COLOUR_MONEY_GOOD 0xFFFF00AA // Yellow - Money
#define COLOUR_MONEY_BAD 0xDAA520AA // Yellow - Money
#define COLOUR_RACE 0x005407AA // green - dark
#define COLOUR_RACE_BAD 0x545407AA // yellow-green-dark
#define COLOUR_GANG 0xFF8C00AA // orange
#define COLOUR_GANG_CHAT 0xFFA500AA // orange
#define COLOUR_DM 0xFF0066AA // red - purple
#define COLOUR_DM_BAD 0xFF0066AA // red - purple
#define COLOR_ORANGE 0xFF9900AA



#define playerColorOnCon1 0x00000005
#define playerColorOnCon2 0x00000055

new playerColor[256] = "0xFFFFFF";
#define playerColorOnCon 0x00000000
new playerColor2[256] = "0xC0C0C0";

#define fixchars(%1) for(new charfixloop=0;charfixloop<strlen(%1);charfixloop++)if(%1[charfixloop]<0)%1[charfixloop]+=256

forward PlayerConnect2(playerid);
forward GoToStart(playerid);
/*
forward GoToStart2(playerid);
forward GoToStart3(playerid);
forward GoToStart4(playerid);
forward GoToStart5(playerid);
forward GoToStart6(playerid);
forward GoToStart7(playerid);
forward GoToStartEng(playerid);
forward GoToStart2Eng(playerid);
forward GoToStart3Eng(playerid);
forward GoToStart4Eng(playerid);
forward GoToStart5Eng(playerid);
forward GoToStart6Eng(playerid);
forward GoToStart7Eng(playerid);
*/
forward AfterLogin(playerid);
forward Givemoney(playerid, money);
forward DestroyPickupEx(p);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerRandomSpawn(playerid);
forward Errorm(playerid);
forward PKick(playerid);
forward PBan(playerid);
forward PBanM(playerid);
forward IngameplTime();
forward Hints();
forward Advis();
forward CheckArmour();
forward CheckArmour2(playerid);
forward CheckArmour3(playerid);
forward CheckAID(i);
forward CheckMoney();
forward CheckMoney2(playerid);
forward CheckMoney3(playerid);
forward CheckMID(i);
forward SendMessageToAdminEx(playerid,text[]);
forward SendMessageToAdmins(text[]);
forward IsNumeric(const string[]);
forward CheckW();
forward CheckWID(i);
forward TimeUp();
forward WeatherUp();
forward TimeUp2();
forward TimeUp3();
forward TimeCL();
forward GameModeExitFunc();
forward GameModeExitFuncFULL();
forward ircConnectTimer(conn);
forward DestroyFloodEx(p);
forward DestroyJailEx(p);
forward CheckFlood();
forward CheckRepeat();
forward CheckCAPS();
forward CheckPing();
forward CheckNActive();
forward ReturnPlayers();
forward PLOnConnMessage1();
forward PLOnConnMessage2();
forward PLOnConnMessage3();
forward PLOnConn();
forward Tele(playerid,num);
forward MoneyGrubScoreUpdate();
forward MoneyGrubLeader();
forward SetPlayerBanM(playerid, Float:minuts);
forward SetPlayerBan(playerid, Float:days);
forward SetIpBan(const ip[], Float:days, reason[]);
forward BanCheck();
forward TeleV(VID,num,playerid);
forward IsPlayerInArea(playerid, Float:dataX, Float:dataY, Float:dataX2, Float:dataY2);
forward ZoneCheck(playerid, inter);
forward BizUpdate();
forward ServerText();
forward BizUpdateTMR(i);
forward InteriorChangeCheck(playerid, newinteriorid, oldinteriorid);
forward Duel(playerid,inter,weap);
forward DuelTimerSt();
forward DuelCheck();
forward DuelStop(winid);
forward DuelStop2(playerid);
forward GangCr(playerid);
forward GangCr2(playerid);
forward SomeTem(playerid);
forward SomeTemAdm(playerid);
forward SomeTemCol(playerid);
forward SomeTemL(playerid);
forward SomeTemDel();
forward SomeTemCOLORSET(playerid, clr[]);
forward Gangst(playerid,st);
forward GlobalCV();
forward VoteKick(playerid);
forward BankCh();
forward BankCh2();
forward BankCh3();
forward DestroyOb(p);
forward CheckSpeedo();
forward DuelStopL(looseid);
forward Spec(playerid, specplayerid);
forward VehicleCH(playerid);
forward SpecExit(playerid);
forward LottoST();
forward SomeTemUntest(playerid);
forward PlayerUpdateCH();
forward CheckLogin(playerid);
forward SetGod(playerid);
forward AFKCheck();
forward CheckIt();
forward UnlockCH(playerid);
forward ReactivateAc(playerid);
forward RaceCRTimer(playerid);
forward CreateCarRCR(playerid);
forward RaceEndCR(playerid);
forward StartRace(playerid);
forward RaceJoin(playerid);
forward RaceStartingCON();
forward RaceTimer();
forward RaceEnd();
forward RaceEndNEED();
forward RaceCreate(playerid);
forward VehicleUnlCH(playerid);
forward Checkp(playerid);
forward RaceExitCH(playerid);
forward SetPlayerGangSpawn(playerid);
forward SomeTemSetSpawnOn(playerid);
forward SomeTemSetSpawnOff(playerid);
forward CrashTest(text[]);
forward ChCheckResult(playerid,id, irc);
forward CountryAndCity(playerid, rus[1], city[256]);
forward CrBomb(playerid, num);
forward CountryAndCityIP(ip[], line[256]);
forward ReadCity();
forward DMExitCH(playerid);
forward StartDM(playerid);
forward DMJoin(playerid);
forward DMStartingCON();
forward DMTimer();
forward DMEnd();
forward DMEndNEED();
forward DMCreate(playerid);
forward DMCRTimer(playerid);
forward CreateBoxRCR(playerid);
forward Checkb();
forward DMEndCR(playerid);
forward CityAddingStat();
forward ChangeModeST();
forward ChangeModeCON();
// forward SlapTestFin(playerid, plid, Float:Health);
// forward SlapTestFinIrc(plid, Float:Health);
// forward SlapTestFinMenu(playerid, plid, Float:Health);
forward DeBug();
forward SpawnCheck(playerid);
forward OnRconCommand(cmd[]);
forward CheckNewYearSponsor(playerid);



// Weapon name credits to Simon's Debug FS
new aWeaponNames[][32] = {
	{"Unarmed (Fist)"}, // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teas"}, // 17
	{"Molotov"}, // 18
	{"Rocket"}, // 19
	{"Rocket"}, // 20
	{"Rocket"}, // 21
	{"Colt 45"}, // 22
	{"Colt 45 (Silenced)"}, // 23
	{"Desert Eagle"}, // 24
	{"Normal Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Heat-Seeking Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};

new aDisconnectNames[][16] = {
	{"Потеря связи"}, // 0
	{"Выход"}, // 1
	{"Кик/Бан"} // 2
};

new CountryCity[][128] = {
	{"Российская Федерация"}, // 0
	{"Russian Federation"}, // 1
	{"Зарубеж"}, // 2
	{"Abroad"}, // 3
	{"Неизвестно"}, // 4
	{"Unknown"} // 5
};

enum zoneinfo {
	zone_name[27],
Float:zone_minx,
Float:zone_miny,
Float:zone_minz,
Float:zone_maxx,
Float:zone_maxy,
Float:zone_maxz
}


new Float:zones[][zoneinfo] = {
	{ "'The Big Ear'",                -410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00},
	{ "Aldea Malvada",               -1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00},
	{ "Angel Pine",                  -2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00},
	{ "Arco del Oeste",               -901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00},
	{ "Avispa Country Club",         -2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00},
	{ "Avispa Country Club",         -2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00},
	{ "Avispa Country Club",         -2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00},
	{ "Avispa Country Club",         -2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10},
	{ "Avispa Country Club",         -2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10},
	{ "Avispa Country Club",         -2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70},
	{ "Back o Beyond",               -1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00},
	{ "Battery Point",               -2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00},
	{ "Bayside",                     -2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00},
	{ "Bayside Marina",              -2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00},
	{ "Beacon Hill",                  -399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50},
	{ "Blackfield",                    964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90},
	{ "Blackfield",                    964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90},
	{ "Blackfield Chapel",            1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90},
	{ "Blackfield Chapel",            1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90},
	{ "Blackfield Intersection",      1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90},
	{ "Blackfield Intersection",      1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90},
	{ "Blackfield Intersection",      1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90},
	{ "Blackfield Intersection",      1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90},
	{ "Blueberry",                     104.50,  -220.10,     2.30,   349.60,   152.20,   200.00},
	{ "Blueberry",                      19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00},
	{ "Blueberry Acres",              -319.60,  -220.10,     0.00,   104.50,   293.30,   200.00},
	{ "Caligula's Palace",            2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90},
	{ "Caligula's Palace",            2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90},
	{ "Calton Heights",              -2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00},
	{ "Chinatown",                   -2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00},
	{ "City Hall",                   -2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00},
	{ "Come-A-Lot",                   2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90},
	{ "Commerce",                     1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90},
	{ "Commerce",                     1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90},
	{ "Commerce",                     1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90},
	{ "Commerce",                     1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90},
	{ "Commerce",                     1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90},
	{ "Commerce",                     1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90},
	{ "Conference Center",            1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90},
	{ "Conference Center",            1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90},
	{ "Cranberry Station",           -2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00},
	{ "Creek",                        2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90},
	{ "Dillimore",                     580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00},
	{ "Doherty",                     -2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00},
	{ "Doherty",                     -2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00},
	{ "Downtown",                    -1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00},
	{ "Downtown",                    -1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00},
	{ "Downtown",                    -1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00},
	{ "Downtown",                    -1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00},
	{ "Downtown",                    -2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00},
	{ "Downtown",                    -1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00},
	{ "Downtown Los Santos",          1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90},
	{ "Downtown Los Santos",          1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90},
	{ "Downtown Los Santos",          1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90},
	{ "Downtown Los Santos",          1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90},
	{ "Downtown Los Santos",          1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90},
	{ "East Beach",                   2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90},
	{ "East Beach",                   2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90},
	{ "East Beach",                   2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90},
	{ "East Beach",                   2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90},
	{ "East Los Santos",              2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90},
	{ "East Los Santos",              2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90},
	{ "East Los Santos",              2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90},
	{ "East Los Santos",              2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90},
	{ "East Los Santos",              2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90},
	{ "East Los Santos",              2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90},
	{ "East Los Santos",              2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90},
	{ "Easter Basin",                -1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00},
	{ "Easter Basin",                -1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00},
	{ "Easter Bay Airport",          -1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00},
	{ "Easter Bay Airport",          -1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40},
	{ "Easter Bay Chemicals",        -1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00},
	{ "Easter Bay Chemicals",        -1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00},
	{ "El Castillo del Diablo",       -464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00},
	{ "El Corona",                    1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90},
	{ "El Corona",                    1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90},
	{ "El Quebrados",                -1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00},
	{ "Esplanade East",              -1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00},
	{ "Esplanade East",              -1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00},
	{ "Esplanade East",              -1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30},
	{ "Esplanade North",             -2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00},
	{ "Esplanade North",             -1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00},
	{ "Esplanade North",             -1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00},
	{ "Fallen Tree",                  -792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00},
	{ "Fallow Bridge",                 434.30,   366.50,     0.00,   603.00,   555.60,   200.00},
	{ "Fern Ridge",                    508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00},
	{ "Financial",                   -1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00},
	{ "Fisher's Lagoon",              1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00},
	{ "Flint Intersection",           -187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90},
	{ "Flint Range",                  -594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00},
	{ "Fort Carson",                  -376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00},
	{ "Foster Valley",               -2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00},
	{ "Foster Valley",               -2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00},
	{ "Frederick Bridge",             2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00},
	{ "Gant Bridge",                 -2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00},
	{ "Gant Bridge",                 -2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00},
	{ "Ganton",                       2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90},
	{ "Ganton",                       2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90},
	{ "Garcia",                      -2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00},
	{ "Garcia",                      -2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00},
	{ "Garver Bridge",               -1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90},
	{ "Garver Bridge",               -1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90},
	{ "Garver Bridge",               -1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30},
	{ "Glen Park",                    1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90},
	{ "Glen Park",                    1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90},
	{ "Glen Park",                    1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90},
	{ "Green Palms",                   176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00},
	{ "Greenglass College",            964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90},
	{ "Greenglass College",            964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90},
	{ "Hampton Barns",                 603.00,   264.30,     0.00,   761.90,   366.50,   200.00},
	{ "Hankypanky Point",             2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00},
	{ "Harry Gold Parkway",           1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90},
	{ "Hashbury",                    -2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00},
	{ "Hilltop Farm",                  967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00},
	{ "Hunter Quarry",                 337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70},
	{ "Idlewood",                     1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90},
	{ "Idlewood",                     1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90},
	{ "Idlewood",                     1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90},
	{ "Idlewood",                     1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90},
	{ "Idlewood",                     2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90},
	{ "Idlewood",                     1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90},
	{ "Jefferson",                    1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90},
	{ "Jefferson",                    2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90},
	{ "Jefferson",                    2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90},
	{ "Jefferson",                    2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90},
	{ "Jefferson",                    2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90},
	{ "Jefferson",                    2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90},
	{ "Julius Thruway East",          2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90},
	{ "Julius Thruway East",          2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90},
	{ "Julius Thruway East",          2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90},
	{ "Julius Thruway East",          2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90},
	{ "Julius Thruway North",         2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90},
	{ "Julius Thruway North",         2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90},
	{ "Julius Thruway North",         2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90},
	{ "Julius Thruway North",         1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90},
	{ "Julius Thruway North",         1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90},
	{ "Julius Thruway North",         1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90},
	{ "Julius Thruway North",         1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90},
	{ "Julius Thruway North",         1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90},
	{ "Julius Thruway South",         1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90},
	{ "Julius Thruway South",         2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90},
	{ "Julius Thruway West",          1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90},
	{ "Julius Thruway West",          1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90},
	{ "Juniper Hill",                -2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00},
	{ "Juniper Hollow",              -2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00},
	{ "K.A.C.C. Military Fuels",      2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90},
	{ "Kincaid Bridge",              -1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90},
	{ "Kincaid Bridge",              -1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90},
	{ "Kincaid Bridge",              -1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90},
	{ "King's",                      -2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00},
	{ "King's",                      -2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00},
	{ "King's",                      -2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00},
	{ "LVA Freight Depot",            1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90},
	{ "LVA Freight Depot",            1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90},
	{ "LVA Freight Depot",            1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90},
	{ "LVA Freight Depot",            1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90},
	{ "LVA Freight Depot",            1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90},
	{ "Las Barrancas",                -926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00},
	{ "Las Brujas",                   -365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00},
	{ "Las Colinas",                  1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90},
	{ "Las Colinas",                  2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90},
	{ "Las Colinas",                  2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90},
	{ "Las Colinas",                  2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90},
	{ "Las Colinas",                  2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90},
	{ "Las Colinas",                  2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90},
	{ "Las Colinas",                  2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90},
	{ "Las Payasadas",                -354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00},
	{ "Las Venturas Airport",         1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90},
	{ "Las Venturas Airport",         1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90},
	{ "Las Venturas Airport",         1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90},
	{ "Las Venturas Airport",         1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50},
	{ "Last Dime Motel",              1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90},
	{ "Leafy Hollow",                -1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00},
	{ "Lil' Probe Inn",                -90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00},
	{ "Linden Side",                  2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90},
	{ "Linden Station",               2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90},
	{ "Linden Station",               2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40},
	{ "Little Mexico",                1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90},
	{ "Little Mexico",                1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90},
	{ "Los Flores",                   2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90},
	{ "Los Flores",                   2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90},
	{ "Los Santos International",     1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90},
	{ "Los Santos International",     1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90},
	{ "Los Santos International",     1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90},
	{ "Los Santos International",     1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90},
	{ "Los Santos International",     1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90},
	{ "Los Santos International",     2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90},
	{ "Marina",                        647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90},
	{ "Marina",                        647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90},
	{ "Marina",                        807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90},
	{ "Market",                        787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90},
	{ "Market",                        952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90},
	{ "Market",                       1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90},
	{ "Market",                        926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90},
	{ "Market Station",                787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80},
	{ "Martin Bridge",                -222.10,   293.30,     0.00,  -122.10,   476.40,   200.00},
	{ "Missionary Hill",             -2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00},
	{ "Montgomery",                   1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00},
	{ "Montgomery",                   1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00},
	{ "Montgomery Intersection",      1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00},
	{ "Montgomery Intersection",      1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00},
	{ "Mulholland",                   1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90},
	{ "Mulholland",                   1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90},
	{ "Mulholland",                   1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90},
	{ "Mulholland",                   1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90},
	{ "Mulholland",                   1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90},
	{ "Mulholland",                   1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90},
	{ "Mulholland",                    768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90},
	{ "Mulholland",                    687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90},
	{ "Mulholland",                    737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90},
	{ "Mulholland",                   1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90},
	{ "Mulholland",                    952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90},
	{ "Mulholland",                    911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90},
	{ "Mulholland",                    861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90},
	{ "Mulholland Intersection",      1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90},
	{ "North Rock",                   2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00},
	{ "Ocean Docks",                  2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90},
	{ "Ocean Docks",                  2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90},
	{ "Ocean Docks",                  2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90},
	{ "Ocean Docks",                  2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90},
	{ "Ocean Docks",                  2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90},
	{ "Ocean Docks",                  2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90},
	{ "Ocean Docks",                  2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90},
	{ "Ocean Flats",                 -2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00},
	{ "Octane Springs",                338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00},
	{ "Old Venturas Strip",           2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90},
	{ "Palisades",                   -2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00},
	{ "Palomino Creek",               2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00},
	{ "Paradiso",                    -2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00},
	{ "Pershing Square",              1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90},
	{ "Pilgrim",                      2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90},
	{ "Pilgrim",                      2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90},
	{ "Pilson Intersection",          1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90},
	{ "Pirates in Men's Pants",       1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90},
	{ "Playa del Seville",            2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90},
	{ "Prickle Pine",                 1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90},
	{ "Prickle Pine",                 1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90},
	{ "Prickle Pine",                 1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90},
	{ "Prickle Pine",                 1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90},
	{ "Queens",                      -2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00},
	{ "Queens",                      -2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00},
	{ "Queens",                      -2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00},
	{ "Randolph Industrial Estate",   1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90},
	{ "Redsands East",                1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90},
	{ "Redsands East",                1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90},
	{ "Redsands East",                1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90},
	{ "Redsands West",                1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90},
	{ "Redsands West",                1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90},
	{ "Redsands West",                1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90},
	{ "Redsands West",                1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90},
	{ "Regular Tom",                  -405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00},
	{ "Richman",                       647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90},
	{ "Richman",                       647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90},
	{ "Richman",                       225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90},
	{ "Richman",                       225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90},
	{ "Richman",                        72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90},
	{ "Richman",                        72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90},
	{ "Richman",                       321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90},
	{ "Richman",                       321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90},
	{ "Richman",                       321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90},
	{ "Richman",                       321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90},
	{ "Robada Intersection",         -1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90},
	{ "Roca Escalante",               2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90},
	{ "Roca Escalante",               2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90},
	{ "Rockshore East",               2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90},
	{ "Rockshore West",               1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90},
	{ "Rockshore West",               2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90},
	{ "Rodeo",                          72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90},
	{ "Rodeo",                          72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90},
	{ "Rodeo",                         225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90},
	{ "Rodeo",                         225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90},
	{ "Rodeo",                         334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90},
	{ "Rodeo",                         312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90},
	{ "Rodeo",                         422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90},
	{ "Rodeo",                         558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90},
	{ "Rodeo",                         466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90},
	{ "Rodeo",                         422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90},
	{ "Rodeo",                         466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90},
	{ "Rodeo",                         334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90},
	{ "Royal Casino",                 2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90},
	{ "San Andreas Sound",            2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00},
	{ "Santa Flora",                 -2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00},
	{ "Santa Maria Beach",             342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90},
	{ "Santa Maria Beach",              72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90},
	{ "Shady Cabin",                 -1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00},
	{ "Shady Creeks",                -1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00},
	{ "Shady Creeks",                -2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00},
	{ "Sobell Rail Yards",            2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90},
	{ "Spinybed",                     2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90},
	{ "Starfish Casino",              2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90},
	{ "Starfish Casino",              2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90},
	{ "Starfish Casino",              2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90},
	{ "Temple",                       1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90},
	{ "Temple",                       1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90},
	{ "Temple",                       1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90},
	{ "Temple",                        952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90},
	{ "Temple",                       1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90},
	{ "Temple",                       1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90},
	{ "The Camel's Toe",              2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90},
	{ "The Clown's Pocket",           2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90},
	{ "The Emerald Isle",             2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90},
	{ "The Farm",                    -1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90},
	{ "The Four Dragons Casino",      1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90},
	{ "The High Roller",              1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90},
	{ "The Mako Span",                1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00},
	{ "The Panopticon",               -947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00},
	{ "The Pink Swan",                1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90},
	{ "The Sherman Dam",              -968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00},
	{ "The Strip",                    2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90},
	{ "The Strip",                    2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90},
	{ "The Strip",                    2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90},
	{ "The Strip",                    2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90},
	{ "The Visage",                   1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90},
	{ "The Visage",                   1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90},
	{ "Unity Station",                1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50},
	{ "Valle Ocultado",               -936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00},
	{ "Verdant Bluffs",                930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90},
	{ "Verdant Bluffs",               1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90},
	{ "Verdant Bluffs",               1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90},
	{ "Verdant Meadows",                37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00},
	{ "Verona Beach",                  647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90},
	{ "Verona Beach",                  930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90},
	{ "Verona Beach",                  851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90},
	{ "Verona Beach",                 1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90},
	{ "Verona Beach",                 1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90},
	{ "Vinewood",                      787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90},
	{ "Vinewood",                      787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90},
	{ "Vinewood",                      647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90},
	{ "Vinewood",                      647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90},
	{ "Whitewood Estates",             883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90},
	{ "Whitewood Estates",            1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90},
	{ "Willowfield",                  1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90},
	{ "Willowfield",                  2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90},
	{ "Willowfield",                  2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90},
	{ "Willowfield",                  2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90},
	{ "Willowfield",                  2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90},
	{ "Willowfield",                  2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90},
	{ "Willowfield",                  2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90},
	{ "Yellow Bell Station",          1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00},
	// Main Zones
	{ "Los Santos",                     44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00},
	{ "Las Venturas",                  869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00},
	{ "Bone County",                  -480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00},
	{ "Tierra Robada",               -2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00},
	{ "Tierra Robada",               -1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00},
	{ "San Fierro",                  -2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00},
	{ "Red County",                  -1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00},
	{ "Flint County",                -1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00},
	{ "Whetstone",                   -2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}};


new Float:gRandomPlayerSpawns[62][3] = {
	{1958.3783,1343.1572,15.3746},
	{2199.6531,1393.3678,10.8203},
	{2483.5977,1222.0825,10.8203},
	{2637.2712,1129.2743,11.1797},
	{2000.0106,1521.1111,17.0625},
	{2024.8190,1917.9425,12.3386},
	{2261.9048,2035.9547,10.8203},
	{2262.0986,2398.6572,10.8203},
	{2244.2566,2523.7280,10.8203},
	{2335.3228,2786.4478,10.8203},
	{2150.0186,2734.2297,11.1763},
	{2158.0811,2797.5488,10.8203},
	{1969.8301,2722.8564,10.8203},
	{1652.0555,2709.4072,10.8265},
	{1564.0052,2756.9463,10.8203},
	{1271.5452,2554.0227,10.8203},
	{1441.5894,2567.9099,10.8203},
	{1480.6473,2213.5718,11.0234},
	{1400.5906,2225.6960,11.0234},
	{1598.8419,2221.5676,11.0625},
	{1318.7759,1251.3580,10.8203},
	{1558.0731,1007.8292,10.8125},
	{-857.0551,1536.6832,22.5870}, // Out of Town Spawns
	{817.3494,856.5039,12.7891},
	{116.9315,1110.1823,13.6094},
	{-18.8529,1176.0159,19.5634},
	{-315.0575,1774.0636,43.6406},
	{1705.2347,1025.6808,10.8203},
	{1085.0735,1074.1641,10.8359},
	{1677.0858,1450.4565,10.7826},
	{2186.3003,1677.4675,11.0985},
	{2168.7422,2116.7656,10.8203},
	{2127.7795,2376.1638,10.8203},
	{2025.8691,1007.4252,10.8203},
	{434.8064,2523.0481,16.6787},
	{1626.4297,580.6386,1.7578},
	{2116.3672,900.8630,10.8203},
	{1745.3116,2079.2146,10.8203},
	{1608.3372,1819.4249,10.8280},
	{693.5237,1957.6870,5.5391},
	{1653.3400,1298.3564,10.8203},
	{271.1014,1988.9604,17.6406},
	{-303.5699,2675.5537,62.6084},
	{-420.1962,2236.9690,42.4297},
	{-799.6738,2255.7241,58.9766},
	{2805.8191,1352.2754,10.7500},
	{1419.1193,788.0806,10.8203},
	{2294.9441,2469.4976,10.8203},
	{2251.9163,2489.5017,10.9908},
	{1130.7173,1883.4814,10.8203},
	{-102.8548,1371.6947,10.2734},
	{-335.6468,1294.7648,53.6643},
	{-329.5078,1536.3290,76.6117},
	{-544.7439,2593.9077,53.5156},
	{1705.6047,1599.0969,10.1011},
	{1973.7954,1623.0403,12.8632},
	{1418.0822,2773.7505,14.8135},
	{2193.1809,1987.4758,12.2969},
	{2117.6450,899.0414,11.1797},
	{2297.1064,2452.0115,10.8203},
	{2000.2295,2254.8645,18.6127},
	{2297.0452,2468.6743,10.8203}
};

#define MAX_DROP_AMOUNT				-1 // special drop-limits like 500 ammo are possible; -1 = all ammo is dropped
#define MAX_DROP_LIFETIME			30 // after 30 seconds the pickup gets destroyed. Note: old pickups will be destroyed anyway.

#define WEAPON_SLOTS				13
#define INVALID_PICKUP				-1
#define PICKUP_TYPE					19

enum pickup
{
	creation_time,
	weapon,
	ammo,
	timer
}

enum wInfo
{
	w1,
	w2,
	w3,
	w4,
	w5,
	w6,
	w7,
	w8,
	w9,
	w10,
	w11,
	w12,
	ammo1,
	ammo2,
	ammo3,
	ammo4,
	ammo5,
	ammo6,
	ammo7,
	ammo8,
	ammo9,
	ammo10,
	ammo11,
	ammo12,
	LastSpectated,
};
new PlayerSWeapInfo[MAX_PLAYERS][wInfo];

new pickups [ MAX_PICKUPS ][ pickup ];
// Set any of those to -1 to disable dropping of that weapon
new weapons[] =
{
	-1, // no fists
	331, // - Brass Knuckles
	333, // Golf Club
	334, // Night Stick
	-1, // Knife335
	336, // baseball bat
	337, // shovel
	338, // pool cue
	-1, // katama339
	341, // chainsaw
	321, // regular dildo
	322, // white dildo
	323, // Medium, white vibrator
	324, // smaill, silver vibrator
	325, // flowers
	326, // cane
	-1, // grendade342
	343, // tear gas
	344, // molotov
	-1, // RPG rocket - we can't pick up those, do we oO
	-1, // Heat-Seeking Rocket
	-1, // Hydra rocket
	346, // colt 45
	347, // colt 45 + silencer
	348, // deagle
	349, // shotgun
	350, // sawn-off
	351, // spaz
	352, // micro-uzi
	353, // mp5
	355, // ak47
	356, // m4
	372, // tec9
	357, // country rifle
	358, // sniper rifle
	-1, // rocket launcher359
	-1, // heat-seeking rocket launcher360
	-1, // flamethrower361
	-1, // minigun362
	363, // sachtel charges
	-1, // detonator
	-1, // spray can365
	366, // fire extinguisher
	-1, // camera367
	-1, // night-vision goggles
	-1, // heat-vision goggles
	371 // parachute
};

new Float:XX[MAX_PLAYERS],Float:YY[MAX_PLAYERS],Float:ZZ[MAX_PLAYERS],telep[MAX_PLAYERS];

new Biz[20];
new BizOwner[20][256];
new BizTryes[20];
new BizMoney[20];
new BizTime[20];

new BizCost[20];

new DuelStarted;
new DuelInt;
new DuelWeap;
new DuelMember[2];
new DuelMTimer;
new DuelTimerCnt;

new Gwantmembers;
new Gnowgang[256];
new Ggangtplid1;
new Ggangtplid2;
new Ggangtplid3;
new Ggangtplid4;

new GangDelName[256];


new vehvorob;
new vehtank;
new vehhydra;
new vehhanter;


new RacePL;
new RaceCRtm[MAX_PLAYERS];
new Float:RaceSTX[9],Float:RaceSTY[9],Float:RaceSTZ[9],Float:RaceSTA[9];
new Float:RaceX[51],Float:RaceY[51],Float:RaceZ[51];
new Float:Xr,Float:Yr,Float:Zr,Float:Ar;
new vidr;
new CarRCR;
new CarDEMO[9];
new RaceCheckpoin[MAX_PLAYERS];
new RaceName[256];
new RaceCRtmerend;
new RaceCR;
new RaceINT;
new RaceStarting;
new RacePlayers;
new RaceTotalCheckp;
new RaceWinner;
new RaceTime;
new RaceHot;
new RaceRand;
new RaceNEEDEndTimer;



new Float:Xd,Float:Yd,Float:Zd,Float:Ad;
new DMPL;
new DMCRtm[MAX_PLAYERS];
new Float:DMSTX[21],Float:DMSTY[21],Float:DMSTZ[21],Float:DMSTA[21];
new DMName[256];
new DMCRtmerend;
new DMCR;
new DMINT;
new DMStarting;
new DMPlayers;
new DMWinner;
new SpeedDMtemp[MAX_PLAYERS];
new DMPLCR[MAX_PLAYERS];
new BoxRCR;
new BoxDEMO[11];
new PLOnDM[MAX_PLAYERS];
new DMTime;
new DMRand;
new DMNEEDEndTimer;


new incars1[11]; // 15
new incars2[8]; //   7
new incars3[4]; //   1
new incars4[11]; //  4
new incars5[10]; // 15
new incars6[7]; //  14
new incars7[13]; // 16



#define DUEL_MAX_WEAPONS 18
new DUEL_WeaponNames[DUEL_MAX_WEAPONS][32] = {
	" Бейсбольная бита",
	" Дисерт Игл",
	" Дробовик",
	" Безразводный дробовик",
	" Комбо-дробовик",
	" МАК 10",
	" СМГ",
	" AK47",
	" M4",
	" ТЕК9",
	" Обычный пистолет",
	" Снайперка",
	" Миниган",
	" Гранаты",
	" Огнемёт",
	" РПГ",
	" Гольф клюшка",
	" Кастет"
};

new DUEL_Weapons[DUEL_MAX_WEAPONS][2] = {
	{5,1},
	{24,2000},
	{25,1500},
	{26,1500},
	{27,1500},
	{28,2000},
	{29,2000},
	{30,1000},
	{31,1000},
	{32,2000},
	{22,300},
	{34,2000},
	{38,5000},
	{16,200},
	{37,5000},
	{35,5000},
	{2,1},
	{1,1}
};

enum SavePlayerPosEnum
{
Float:LastX,
Float:LastY,
Float:LastZ
}
new SavePlayerPos[MAX_PLAYERS][SavePlayerPosEnum];

//Player Variables (Be careful if you modify these!)
new Kills[MAX_PLAYERS], Deaths[MAX_PLAYERS], Bank[MAX_PLAYERS], Login[MAX_PLAYERS], Alevel[MAX_PLAYERS], Jail[MAX_PLAYERS], LogTry[MAX_PLAYERS];
new CCCash[MAX_PLAYERS], Lang[MAX_PLAYERS], MTsys[MAX_PLAYERS], Ingame[MAX_PLAYERS], Mute[MAX_PLAYERS], Flood[MAX_PLAYERS], RepCh[MAX_PLAYERS][128];
new CAPSLOCK[MAX_PLAYERS], Repeat[MAX_PLAYERS], NActiveT[MAX_PLAYERS], JailTimer[MAX_PLAYERS], Color[MAX_PLAYERS], Kill[MAX_PLAYERS], Hitman[MAX_PLAYERS], GangTesting[MAX_PLAYERS];
new PLchepnt[MAX_PLAYERS],Gang[MAX_PLAYERS], playerGangColor[MAX_PLAYERS][256], PLGangName[MAX_PLAYERS][256],GangCreator[MAX_PLAYERS],Ganginv[MAX_PLAYERS][256];
new InvAllow[MAX_PLAYERS], Cheat[MAX_PLAYERS], Speedo[MAX_PLAYERS], ErrCheck[MAX_PLAYERS], WeapCheat[MAX_PLAYERS], MTsys2[MAX_PLAYERS], PLgaming[MAX_PLAYERS];
new PLSpecP[MAX_PLAYERS], PLSpecO[MAX_PLAYERS], Lotto[MAX_PLAYERS], LottoMon[MAX_PLAYERS], Skin[MAX_PLAYERS], Float:Plhp[MAX_PLAYERS], AFK[MAX_PLAYERS];
new LogCheckTimer[MAX_PLAYERS], AFKcheat[MAX_PLAYERS], LKills[MAX_PLAYERS], SpeedCH[MAX_PLAYERS], RacePLCR[MAX_PLAYERS], Speedtemp[MAX_PLAYERS], PLOnRace[MAX_PLAYERS];
new RaceWIN[MAX_PLAYERS], DMWIN[MAX_PLAYERS], Bombinst[MAX_PLAYERS], PLGangSpawn[MAX_PLAYERS], Ignor[MAX_PLAYERS], SpeedoShow[MAX_PLAYERS], IntDebug[MAX_PLAYERS];
new PlayerStatus[MAX_PLAYERS][256], Registered[MAX_PLAYERS], Float:Armour[MAX_PLAYERS], IRCuser[MAX_PLAYERS], IRCuserHost[MAX_PLAYERS][256];

//------------------------------------------------------------------------------------------------------

main()
{
	print("\n----------------------------------------------------");
	print(" Starting gamemode script..... ");
	print("  ");
	printf(" Las Venturas Maximum v%s r%s date %s ",Version, Revision, Date);
	print("  ");
	print("    Inclusions:   ");
	print("  ");
	print(" xAntiSwear by Boylett");
	print(" Vehicle Names Display by Seif[CC]");
	print(" Weapon Drop by mabako");
	print(" Temporary ban system v1.1 by d.wine");
	print(" Animation by Wooz1e");
	print(" Vehicle Mod Anti-Crash by Crack, Davee and 0xF29323");
	print("  ");
	print(" Successfully! ");
	print("\n----------------------------------------------------");

}

//------------------------------------------------------------------------------------------------------


public OnPlayerConnect(playerid) {
	GetPlayerIp(playerid,IPcheck[playerid],128);
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && i!=playerid && strlen(IPcheck[i]))
	if(strcmp(IPcheck[playerid], IPcheck[i], true) == 0){
		SendClientMessage(playerid, red, "*** Connection limit exceeded.");
		Kick(playerid);
		return 1; }
	//TogglePlayerSpectating(playerid, 1);
	SendClientMessage(playerid, yellow, " System working... Please wait..");
	SetTimerEx("PlayerConnect2", 500, 0, "i", playerid);
	return 1;
}
//------------------------------------------------------------------------------------------------------


public PlayerConnect2(playerid)
{
	new string[256];
	GetPlayerIp(playerid,string,sizeof(string));
	if(strcmp(string,"255.255.255.255",true)==0) {
		Kick(playerid); return 1; }

	CrashTest("[function] PlayerConnect2");

	_ac_info[ playerid ][ _warns ] = 0; //anti car spawn
	TextDrawShowForPlayer(playerid, Clock);
	TextDrawShowForPlayer(playerid, WEB);

	SetPlayerMapIcon(playerid, 0, 1935.9512, 2307.2178, 10.8203, 52, 0);
	SetPlayerMapIcon(playerid, 1, 2247.6289, 2397.6589, 10.8203, 52, 0);
	SetPlayerMapIcon(playerid, 2, 2277.3977, 2460.1724, 10.8203, 30, 0);
	SetPlayerMapIcon(playerid, 3, 2193.6362, 1676.5787, 12.3672, 25, 0);
	SetPlayerMapIcon(playerid, 4, 2001.3008, 1544.3771, 13.5859, 9, 0);
	SetPlayerMapIcon(playerid, 5, 2021.5076, 1008.0089, 10.8203, 43, 0);
	SetPlayerMapIcon(playerid, 6, 2386.5498, 1041.2588, 10.8203, 27, 0);
	SetPlayerMapIcon(playerid, 7, 361.8299, 173.6176, 1008.3828, 52, 0);
	SetPlayerMapIcon(playerid, 8, 2507.1970, 1244.0658, 10.8203, 48, 0);
	SetPlayerMapIcon(playerid, 9, 1675.5598, 1447.5341, 10.7871, 5, 0);
	SetPlayerMapIcon(playerid, 10, 1610.7714, 1815.9144, 10.8203, 22, 0);
	SetPlayerMapIcon(playerid, 11, 1107.7592, 1876.1559, 10.8203, 51, 0);
	SetPlayerMapIcon(playerid, 12, 693.6333, 1960.9774, 5.5391, 48, 0);
	SetPlayerMapIcon(playerid, 13, 414.0380, 2532.3550, 19.1489, 5, 0);
	SetPlayerMapIcon(playerid, 14, 638.7395, 857.2505, -40.2323, 11, 0);
	SetPlayerMapIcon(playerid, 15, 1456.1396, 2773.1860, 10.8203, 23, 0); //
	SetPlayerMapIcon(playerid, 16, -28.0200, -54.6426, 1003.5469, 52, 0);
	SetPlayerMapIcon(playerid, 17, 2415.6001, 1123.7100, 10.8203, 52, 0); //
	SetPlayerMapIcon(playerid, 18, 2192.8994, 1990.6801, 12.2969, 52, 0); //
	SetPlayerMapIcon(playerid, 19, 2089.5200, 2074.4800, 10.8203, 12, 0); //
	SetPlayerMapIcon(playerid, 20, 2103.6511, 257.6570, 11.0234, 45, 0); //
	SetPlayerMapIcon(playerid, 21, 1968.5924, 2294.0830, 16.4559, 54, 0); //
	SetPlayerMapIcon(playerid, 22, -1935.8258, 238.0810, 34.3125, 27, 0); //
	SetPlayerMapIcon(playerid, 23, -1664.3986, 1214.1648, 7.2546, 55, 0); //
	SetPlayerMapIcon(playerid, 24, -2715.3108, 217.7895, 4.3166, 27, 0); //
	SetPlayerMapIcon(playerid, 25, -1421.5699, -287.5052, 14.1484, 5, 0); //
	SetPlayerMapIcon(playerid, 26, 1842.0061, -1856.3307, 13.3828, 27, 0); //
	SetPlayerMapIcon(playerid, 27, 1957.9326, -2184.0447, 13.5469, 5, 0); //
	SetPlayerMapIcon(playerid, 28, 2644.2996, -2038.4208, 13.5540, 27, 0); //
	SetPlayerMapIcon(playerid, 29, 1041.3596, -1026.8785, 32.1016, 27, 0); //

	MTsys2[playerid] = 1;
	MTsys[playerid] = 1;
	LogTry[playerid] = 3;
	Plhp[playerid]=100;
	Ignor[playerid]=255;

	GameTextForPlayer(playerid,"~w~Welcome!",10000,3);
	ResetPlayerWeapons(playerid);

	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);

	SetPlayerInterior(playerid,0);
	TogglePlayerControllable(playerid,0);
	SetPlayerPos(playerid,2068.5991,1784.5842,10.0000);
	SetPlayerCameraPos(playerid,2133.5737,1660.5972,76.1988);
	SetPlayerCameraLookAt(playerid,2117.7354,1686.7480,68.7516);

	SetPlayerColor(playerid,playerColorOnCon);



	if(IsNumeric(name)) {
		format(string,sizeof(string)," ([%d] %s) - Server: неверный никнайм",playerid,name);
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: неверный никнайм",EchoChan,playerid,name);
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кинуты с сервера. Информация - Server: неверный никнайм (invalid nickname)");
		else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: invalid nickname");
		SetTimerEx("PKick", 10000, 0, "i",playerid); return 1; }

	if(strfind(name, "_AWAY") != -1) {
		format(string,sizeof(string)," ([%d] %s) - Server: неверный никнайм",playerid,name);
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: неверный никнайм",EchoChan,playerid,name);
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кинуты с сервера. Информация - Server: неверный никнайм (invalid nickname)");
		else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: invalid nickname");
		SetTimerEx("PKick", 10000, 0, "i",playerid); }

	if (!dini_Exists(PF)) {
		GoToStart(playerid); return 1; }

	Registered[playerid]=1;

	/*
if(dini_Int(PF,"date1")==0) {
new year, month,day;
getdate(year, month, day);
dini_IntSet(PF,"date1",year);
dini_IntSet(PF,"date2",month);
}else{
new year, month;
new year2, month2,day2;
getdate(year2, month2, day2);
year=dini_Int(PF,"date1");
month=dini_Int(PF,"date2");
if((year!=year2 && ((month==11 && month2>=2) || (month==12 && month2>=3) || (month2>3))) || year2-year>1) { ReactivateAc(playerid); return 1; }
if(month+2<month2) { ReactivateAc(playerid); return 1; } }
*/

	Lang[playerid] = dini_Int(PF,"lang");

	if(Lang[playerid]==0) {
		SendClientMessage(playerid, white, " Вас приветствует gta.bews.tk:7778 Сервер - LV DeathMatch *The Original One*");
		//SendClientMessage(playerid, green, " Официальный сервер компании NETBYNET (www.netbynet.ru).");

		new stringo[256];
		new stringt[256];
		new year,month,day;
		getdate(year,month,day);
		new y, m;
		if(day<20) { day=day+30; day=day-20; m=1; } else day=day-20;
		month=month-m;
		if(month<7) { month=month+12; month=month-7; y=1; } else month=month-7;
		year=year-y;
		year=year-2007;
		if(year==1) format(stringo, sizeof(stringo), "%d год, %d месяцев, %d дней", year, month, day);
		else format(stringo, sizeof(stringo), "%d года, %d месяцев, %d дней", year, month, day);

		new days,hours,minutes;
		if(mins>60) {
			hours = (mins/60);
			minutes = mins-(hours*60);
			if(hours>23) {
				days = (hours/24);
				hours = hours-(days*24);
			}else { days = 0; }
		}else{
			minutes = mins;
			hours = 0;
			days = 0; }
		format(stringt, sizeof(stringt), "%d дней, %d часов, %d минут", days, hours, minutes);

		format(string, sizeof(string), " Данный сервер существует уже %s. С момента последнего перезапуска прошло %s.", stringo, stringt);
		SendClientMessage(playerid, white, string);
		// SendClientMessage(playerid, yellow, " Пожалуйста войдите в свой аккаунт при помощи '/login пароль' (напр. /login 123)");
		ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Вход в аккаунт", "Введите ваш пароль и нажмите OK.", "ОК", "Опции");
	}

	if(Lang[playerid]==1) {
		SendClientMessage(playerid, white, " Welcome to gta.bews.tk:7778 Server - LV DeathMatch *The Original One*");
		//SendClientMessage(playerid, green, " Official NETBYNET company server (www.netbynet.ru).");

		new stringo[256];
		new stringt[256];
		new year,month,day;
		getdate(year,month,day);
		new y, m;
		if(day<20) { day=day+30; day=day-20; m=1; } else day=day-20;
		month=month-m;
		if(month<7) { month=month+12; month=month-7; y=1; } else month=month-7;
		year=year-y;
		year=year-2007;
		if(year==1) format(stringo, sizeof(stringo), "%d year, %d months, %d days", year, month, day);
		else format(stringo, sizeof(stringo), "%d years, %d months, %d days", year, month, day);

		new days,hours,minutes;
		if(mins>60) {
			hours = (mins/60);
			minutes = mins-(hours*60);
			if(hours>23) {
				days = (hours/24);
				hours = hours-(days*24);
			}else { days = 0; }
		}else{
			minutes = mins;
			hours = 0;
			days = 0; }
		format(stringt, sizeof(stringt), "%d days, %d hours, %d minutes", days, hours, minutes);

		format(string, sizeof(string), " This server exists %s. Time since the last server restart: %s.", stringo, stringt);
		SendClientMessage(playerid, white, string);
		// SendClientMessage(playerid, yellow, " Please login into your account with '/login password' (ex. /login 123)");
		ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Log in", "Enter your password and press OK.", "OK", "Options");
	}


	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Login[i]==0) SetPlayerMarkerForPlayer(playerid,i,playerColorOnCon);
	else{
		if(Gang[i]==0){
			if(Color[i]==0) format(string, sizeof(string), "%sFF",playerColor);
			else format(string, sizeof(string), "%s40",playerColor2);
			new Coloren=HexToInt(string);
			SetPlayerMarkerForPlayer(playerid,i,Coloren);
		}else{
			if(Color[i]==0) format(string, sizeof(string), "%sFF",playerGangColor[i]);
			else format(string, sizeof(string), "%s40",playerGangColor[i]);
			new Coloren=HexToInt(string);
			SetPlayerMarkerForPlayer(playerid,i,Coloren); }
		if(AFK[i]==1) SetPlayerMarkerForPlayer(playerid,i,playerColorOnCon); }

	/*
SetVehicleParamsForPlayer(vehvorob,playerid, 0, 1);
SetVehicleParamsForPlayer(vehtank,playerid, 0, 1);
SetVehicleParamsForPlayer(vehhydra,playerid, 0, 1);
SetVehicleParamsForPlayer(vehhanter,playerid, 0, 1); */


	LogCheckTimer[playerid]=SetTimerEx("CheckLogin", 300000, 0, "i", playerid);

	return 1;
}

//------------------------------------------------------------------------------------------------------

public ReactivateAc(playerid) {
	CrashTest("[function] ReactivateAc");

	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
	new string[256];

	Gang[playerid]=dini_Int(PF,"gang");

	if(Gang[playerid]!=0) {
		PLGangName[playerid]=dini_Get(PF,"gangname");
		new Pgang[256]; format(Pgang,sizeof(Pgang),"LVM/gangs/%s.ini", PLGangName[playerid]);
		if (dini_Exists(Pgang)) {

			if(Gang[playerid]!=3)
			SetTimerEx("SomeTemL", 50, 0, "i", playerid);
			else{
				if(strcmp(GangDelName, "None", true) != 0) return 1;
				format(GangDelName,sizeof(GangDelName),PLGangName[playerid]);
				SetTimer("SomeTemDel", 9000, 0);

				format(string,sizeof(string),"%s", PLGangName[playerid]);
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
				if(Gang[i]!=0) if(strcmp(PLGangName[i], string, true) == 0) if(Login[i]!=0)
				if(Lang[i]==0) SendClientMessage(i, green, " Ваша банда полностью удалена.");
				else SendClientMessage(i, green, " Your gang is completely removed.");

				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
				if(Gang[i]!=0) if(strcmp(PLGangName[i], PLGangName[playerid], true) == 0)
				if(i!=playerid) SetTimerEx("SomeTemL", 500, 0, "i", i);
				else SetTimerEx("SomeTemL", 5000, 0, "i", i); } } }

	dini_Remove(PF);

	GoToStart(playerid); return 1; }


public GoToStart(playerid) {
	CrashTest("[function] GoToStart");

	/*
KillTimer(StartTimer1[playerid]);
KillTimer(StartTimer2[playerid]);
KillTimer(StartTimer3[playerid]);
KillTimer(StartTimer4[playerid]);
KillTimer(StartTimer5[playerid]);
KillTimer(StartTimer6[playerid]);

MTsys2[playerid] = 0;

new string[256];
SendClientMessage(playerid, white, " Вас приветствует gta.bews.tk:7778 Сервер - LV DeathMatch *The Original One*");

new stringo[256];
new stringt[256];
new year,month,day;
getdate(year,month,day);
new y, m;
if(day<20) { day=day+30; day=day-20; m=1; } else day=day-20;
month=month-m;
if(month<7) { month=month+12; month=month-7; y=1; } else month=month-7;
year=year-y;
year=year-2007;
if(year==1) format(stringo, sizeof(stringo), "%d год, %d месяцев, %d дней", year, month, day);
else format(stringo, sizeof(stringo), "%d года, %d месяцев, %d дней", year, month, day);

new days,hours,minutes;
if(mins>60) {
hours = (mins/60);
minutes = mins-(hours*60);
if(hours>23) {
days = (hours/24);
hours = hours-(days*24);
}else { days = 0; }
}else{
minutes = mins;
hours = 0;
days = 0; }
format(stringt, sizeof(stringt), "%d дней, %d часов, %d минут", days, hours, minutes);

format(string, sizeof(string), " Данный сервер существует уже %s. С момента последнего перезапуска прошло %s.", stringo, stringt);
SendClientMessage(playerid, white, string);

SendClientMessage(playerid, green, " Добро пожаловать!");
SendClientMessage(playerid, yellow, " Сейчас начнётся краткий инструктаж по возможностям сервера.");
SendClientMessage(playerid, yellow, " Убедительная просьба внимательно прочитать весь предложенный текст, чтобы избежать последующих вопросов.");
SendClientMessage(playerid, yellow, " Мы надеемся, вам понравится наш сервер.");
StartTimer1[playerid]=SetTimerEx("GoToStart2", 20000, 0, "i", playerid);
*/

	if(Login[playerid]==1) return 1;

	Registered[playerid]=0;
	Login[playerid]=1;
	TogglePlayerControllable(playerid,1);

	new name[MAX_PLAYER_NAME],string[256]; GetPlayerName(playerid,name,sizeof(name));

	SendClientMessage(playerid, white, " Вас приветствует gta.bews.tk:7778 Сервер - LV DeathMatch *The Original One*");
	//SendClientMessage(playerid, green, " Официальный сервер компании NETBYNET (www.netbynet.ru).");

	new stringo[256];
	new stringt[256];
	new year,month,day;
	getdate(year,month,day);
	new y, m;
	if(day<20) { day=day+30; day=day-20; m=1; } else day=day-20;
	month=month-m;
	if(month<7) { month=month+12; month=month-7; y=1; } else month=month-7;
	year=year-y;
	year=year-2007;
	if(year==1) format(stringo, sizeof(stringo), "%d год, %d месяцев, %d дней", year, month, day);
	else format(stringo, sizeof(stringo), "%d года, %d месяцев, %d дней", year, month, day);

	new days,hours,minutes;
	if(mins>60) {
		hours = (mins/60);
		minutes = mins-(hours*60);
		if(hours>23) {
			days = (hours/24);
			hours = hours-(days*24);
		}else { days = 0; }
	}else{
		minutes = mins;
		hours = 0;
		days = 0; }
	format(stringt, sizeof(stringt), "%d дней, %d часов, %d минут", days, hours, minutes);

	format(string, sizeof(string), " Данный сервер существует уже %s. С момента последнего перезапуска прошло %s.", stringo, stringt);
	SendClientMessage(playerid, white, string);
	SendClientMessage(playerid, yellow, " Пожалуйста зарегистрируйте свой аккаунт при помощи '/register пароль слово' (напр. /register 123 золото)");


	new rus[1], city[256];
	CountryAndCity(playerid, rus, city);

	new countytexteng[256], countytextrus[256];
	if(rus[0]==0) {
		format(countytexteng, sizeof(countytexteng), "%s",CountryCity[3]);
		format(countytextrus, sizeof(countytextrus), "%s",CountryCity[2]);
	}else{
		if(strcmp(city,"none",true)==0) {
			format(countytexteng, sizeof(countytexteng), "%s, %s",CountryCity[1], CountryCity[5]);
			format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[0], CountryCity[4]);
		}else{
			format(countytexteng, sizeof(countytexteng), "%s, %s",CountryCity[1], city);
			format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[0], city);
		}}

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string, sizeof(string), " *** %s присоединился к игре. (%s) [Id:%i]",name, countytextrus, playerid);
		SendClientMessage(i, COLOR_ORANGE, string);
	}else{
		format(string, sizeof(string), " *** %s joined the server. (%s) [Id:%i]",name, countytexteng, playerid);
		SendClientMessage(i, COLOR_ORANGE, string); }


	format(string, sizeof(string), "3***\2;2 %s 3присоединился к игре. 2(%s) [Id:%i]", name, countytextrus, playerid);
	IRC_Say(EchoConnection2, EchoChan, string);

	PlayerSumMes++; if(PlayerSumMes==5) { PLOnConn(); PlayerSumMes=0; }

	if(Lang[playerid]==0) {
		SendClientMessage(playerid, green, " Добро пожаловать в Лас Вентурас Максимум!");
		SendClientMessage(playerid, yellow, " Помощь:  '/help'  |  Доступные команды:  '/commands'  |  Информация о скрипте:  '/scriptinfo' ");
		SendClientMessage(playerid, yellow, " Соблюдайте правила!    (/rules) ");
		SendClientMessage(playerid, yellow," Ведётся набор модеров! Скачай IRC клиент (с gta.bews.tk) и предложи свою кандидатуру (irc.bews.tk/rus)!");
	}else{
		SendClientMessage(playerid, green, " Welcome to Las Venturas Maximum!");
		SendClientMessage(playerid, yellow, " Help:  '/help'  |  Commands:  '/commands'  |  Script information:  '/scriptinfo' ");
		SendClientMessage(playerid, yellow, " Server rules -  '/rules'");
		SendClientMessage(playerid, yellow," Moders needed! Download IRC client (gta.bews.tk) and join irc.bews.tk/rus !");
	}

	new rand = random(8);

	switch(rand) {
	case 0: ApplyAnimation(playerid, "DANCING", "dnce_M_e", 4.0,1,1,0,0,0);
	case 1: ApplyAnimation(playerid, "DANCING", "dance_loop", 4.0,1,1,0,0,0);
	case 2: ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 4.0,1,1,0,0,0);
	case 3: ApplyAnimation(playerid, "DANCING", "dnce_M_a", 4.0,1,1,0,0,0);
	case 4: ApplyAnimation(playerid, "DANCING", "dnce_M_b", 4.0,1,1,0,0,0);
	case 5: ApplyAnimation(playerid, "DANCING", "dnce_M_c", 4.0,1,1,0,0,0);
	case 6: ApplyAnimation(playerid, "DANCING", "dnce_M_d", 4.0,1,1,0,0,0);
	case 7: ApplyAnimation(playerid, "DANCING", "dnce_M_e", 4.0,1,1,0,0,0);
	}

	format(string,sizeof(string),"~w~~n~~b~~n~~r~~n~~g~Las Venturas   ~n~~r~Maximum  ~n~~w~v%s r%s",Version, Revision);
	//	GameTextForPlayer(playerid,string,5000,1);

	GameTextForPlayer(playerid,"~g~To change language type /eng",10000,1);

	MTsys[playerid]=0;
	MTsys2[playerid]=1;

	Givemoney(playerid, 1000);

	format(string, sizeof(string), "%sFF",playerColor);
	new Coloren=HexToInt(string);
	SetPlayerColor(playerid,Coloren);
	PLGangName[playerid]="None";
	Ganginv[playerid]="None";


	return 1;
}


/*
public GoToStart2(playerid) {
CrashTest("[function] GoToStart2");
SendClientMessage(playerid, green, " Что делать на этом сервере?");
SendClientMessage(playerid, yellow, " Это свободный режим, в котором можно делать что угодно. Однако главная цель игры - это обогащение.");
SendClientMessage(playerid, yellow, " Вы можете стать бизнесменом и привлекать клиентов, можете устроить дуэль, принять участие в гонках и дефматчах,");
SendClientMessage(playerid, yellow, " создать собственную банду и назначить ей уникальный цвет. Банда позволяет играть командой, что очень интересно.");
SendClientMessage(playerid, yellow, " Кроме того вы можете создать собственную уникальную гонку или дефматч и заработать на этом!");
SendClientMessage(playerid, yellow, " Также вы можете договориться с другими игроками и заработать денег в частном договоре.");
StartTimer2[playerid]=SetTimerEx("GoToStart3", 20000, 0, "i", playerid);
GameTextForPlayer(playerid,"~g~To change language type /eng",10000,1);
	return 1;
}

public GoToStart3(playerid) {
CrashTest("[function] GoToStart3");
SendClientMessage(playerid, green, " Что делать на этом сервере? (продолжение)");
SendClientMessage(playerid, yellow, " Есть возможность стать наёмным убийцей, и зарабатывать на этом большие деньги.");
SendClientMessage(playerid, yellow, " Однако можно быть и независимым, что тоже принесёт вам доход.");
SendClientMessage(playerid, yellow, " Убивайте других игроков, выигрывайте дуэли, создавайте банды, участвуйте в гонках и дефматчах и станьте лучшим игроком сервера!");
SendClientMessage(playerid, yellow, " Вы сможете получить уникальный серый цвет и полупрозрачный значок на радаре.");
SendClientMessage(playerid, yellow, " Ваше имя каждые полчаса будут показывать всем игрокам!");
StartTimer3[playerid]=SetTimerEx("GoToStart4", 20000, 0, "i", playerid);
	return 1;
}

public GoToStart4(playerid) {
CrashTest("[function] GoToStart4");
SendClientMessage(playerid, green, " Игровой процесс.");
SendClientMessage(playerid, yellow, " Вы можете стать кем угодно, заниматься чем угодно, и делать всё как угодно!");
SendClientMessage(playerid, yellow, " Однако не стоит забывать о правилах сервера, нарушение их приведёт к бану на сервере.");
SendClientMessage(playerid, yellow, " Вы можете использовать военный транспорт обладающий большой огневой мощью, но не забывайте,");
SendClientMessage(playerid, yellow, " что другим игрокам это может не понравиться и они выкинут вас с сервера.");
SendClientMessage(playerid, yellow, " Убийство из транспорта (дб) не приветствуется, вы будете терять 10 тысяч за каждое. Самоубийство не засчитается.");
StartTimer4[playerid]=SetTimerEx("GoToStart5", 20000, 0, "i", playerid);
	return 1;
}

public GoToStart5(playerid) {
CrashTest("[function] GoToStart5");
SendClientMessage(playerid, green, " Ресурсы сервера.");
SendClientMessage(playerid, yellow, " У нас есть дополнительные возможности, которые мы предлагаем вам, а именно:");
SendClientMessage(playerid, yellow, " Форум сервера - место где можно пообщаться вне игры, задать вопрос администрации и др.");
//SendClientMessage(playerid, yellow, " Голосовой чат сервера (TS) - для быстрого обмена информацией во время игры, полезно членам банд.");
SendClientMessage(playerid, yellow, " Текстовый чат (IRC) - текстовое общение игроков. Здесь вы всегда можете найти администрацию, а также наблюдать за игрой.");
//SendClientMessage(playerid, yellow, " Хостинг серверов SA-MP - профессиональный хост, на котом стоит данный сервер, вы всегда можете установить к нам свой сервер.");
StartTimer6[playerid]=SetTimerEx("GoToStart7", 20000, 0, "i", playerid);
	return 1;
}
*/
/*
public GoToStart6(playerid) {
SendClientMessage(playerid, green, " Атаки хакеров.");
SendClientMessage(playerid, yellow, " С тех пор как сервер получил официальный статус они стали происходить постоянно.");
SendClientMessage(playerid, yellow, " Мы убедительно просим вас с пониманием отнестись к этому, администрация делает всё возможное для максимальной защиты,");
SendClientMessage(playerid, yellow, " однако иногда даже мы бессильны. Если сервер выключен, значит мы уже работаем над его восстановлением, ");
SendClientMessage(playerid, yellow, " вам остаётся только немного подождать.");
SendClientMessage(playerid, yellow, " Наверно чтение вас уже утомило, поэтому переходим к завершению.");
StartTimer6[playerid]=SetTimerEx("GoToStart7", 20000, 0, "i", playerid);
	return 1;
}
*/
/*
public GoToStart7(playerid) {
CrashTest("[function] GoToStart7");
SendClientMessage(playerid, green, " Завершение.");
SendClientMessage(playerid, yellow, " Чтобы начать играть вам нужно зарегистрироваться.");
SendClientMessage(playerid, yellow, " Это очень простая операция, для этого вам нужно придумать пароль для своего аккаунта и секретное слово.");
SendClientMessage(playerid, yellow, " Секретное слово необходимо для восстановления пароля в случае если вы его забыли. Используйте что-либо хорошо известное.");
SendClientMessage(playerid, yellow, " Введите '/register пароль слово' (напр. /register 123 золото). Внимание: если слов несколько, сохранится только первое!");
	return 1;
}
*/
//------------------------------------------------------------------------------------------------------
/*
public GoToStartEng(playerid) {
CrashTest("[function] GoToStartEng");

KillTimer(StartTimer1[playerid]);
KillTimer(StartTimer2[playerid]);
KillTimer(StartTimer3[playerid]);
KillTimer(StartTimer4[playerid]);
KillTimer(StartTimer5[playerid]);
KillTimer(StartTimer6[playerid]);

new string[256];
SendClientMessage(playerid, white, " Welcome to gta.bews.tk:7778 Server - LV DeathMatch *The Original One*");

new stringo[256];
new stringt[256];
new year,month,day;
getdate(year,month,day);
new y, m;
if(day<20) { day=day+30; day=day-20; m=1; } else day=day-20;
month=month-m;
if(month<7) { month=month+12; month=month-7; y=1; } else month=month-7;
year=year-y;
year=year-2007;
if(year==1) format(stringo, sizeof(stringo), "%d year, %d months, %d days", year, month, day);
else format(stringo, sizeof(stringo), "%d years, %d months, %d days", year, month, day);

new days,hours,minutes;
if(mins>60) {
hours = (mins/60);
minutes = mins-(hours*60);
if(hours>23) {
days = (hours/24);
hours = hours-(days*24);
}else { days = 0; }
}else{
minutes = mins;
hours = 0;
days = 0; }
format(stringt, sizeof(stringt), "%d days, %d hours, %d minutes", days, hours, minutes);

format(string, sizeof(string), " This server exists %s. Time since the last server restart: %s.", stringo, stringt);
SendClientMessage(playerid, white, string);

SendClientMessage(playerid, green, " Welcome!");
SendClientMessage(playerid, yellow, " Now short instructing in server features will begin.");
SendClientMessage(playerid, yellow, " The earnest entreaty attentively to read the offered text to avoid the subsequent questions.");
SendClientMessage(playerid, yellow, " We hope, you will like our server.");
StartTimer1[playerid]=SetTimerEx("GoToStart2Eng", 20000, 0, "i", playerid);
	return 1;
}

public GoToStart2Eng(playerid) {
CrashTest("[function] GoToStart2Eng");
SendClientMessage(playerid, green, " What to do here?");
SendClientMessage(playerid, yellow, " It is a free mode in which it is possible to do everything. However the game overall objective is an enrichment.");
SendClientMessage(playerid, yellow, " You can become the businessman and involve clients, can arrange duel, join races and deathmatches,");
SendClientMessage(playerid, yellow, " create own gang and to appoint to it unique colour. The gang allows to play a command that is very interesting.");
SendClientMessage(playerid, yellow, " Besides you can create own unique race or deathmatch and earn on it!");
SendClientMessage(playerid, yellow, " Also you can agree with other players and earn money in the private contract.");
StartTimer2[playerid]=SetTimerEx("GoToStart3", 20000, 0, "i", playerid);
GameTextForPlayer(playerid,"~g~To change language type /rus",10000,1);
	return 1;
}

public GoToStart3Eng(playerid) {
CrashTest("[function] GoToStart3Eng");
SendClientMessage(playerid, green, " What to do here? (continuation)");
SendClientMessage(playerid, yellow, " There is a possibility to become the hired killer, and to earn on it the big money.");
SendClientMessage(playerid, yellow, " However it is possible to be and independent, that too will bring to you the income.");
SendClientMessage(playerid, yellow, " Kill other players, win duels, create gangs, participate in races and deathmatches and become the best player of a server!");
SendClientMessage(playerid, yellow, " You can receive unique grey colour and a translucent mark on a radar.");
SendClientMessage(playerid, yellow, " Your name each half an hour will be shown all players!");
StartTimer3[playerid]=SetTimerEx("GoToStart4", 20000, 0, "i", playerid);
	return 1;
}

public GoToStart4Eng(playerid) {
CrashTest("[function] GoToStart4Eng");
SendClientMessage(playerid, green, " Gameplay.");
SendClientMessage(playerid, yellow, " You can become everybody, be engaged in everything, and do all somehow!");
SendClientMessage(playerid, yellow, " However it is not necessary to forget about server rules, infringement will result in ban.");
SendClientMessage(playerid, yellow, " You can use military transport possessing big fire power, but do not forget,");
SendClientMessage(playerid, yellow, " that it can not like other players and they kick you from a server.");
SendClientMessage(playerid, yellow, " Killing from vehicle (db) is not welcomed, you will lose 10 thousand for everyone. Murder will not be included.");
StartTimer4[playerid]=SetTimerEx("GoToStart5", 20000, 0, "i", playerid);
	return 1;
}

public GoToStart5Eng(playerid) {
CrashTest("[function] GoToStart5Eng");
SendClientMessage(playerid, green, " Server resources.");
SendClientMessage(playerid, yellow, " We have additional possibilities which we offer you, namely:");
SendClientMessage(playerid, yellow, " Server forum - a place where it is possible to speak out of game, to ask a question of administration, etc.");
//SendClientMessage(playerid, yellow, " TeamSpeak (TS) - for fast information interchange during game, it is useful for members of gangs.");
SendClientMessage(playerid, yellow, " IRC chat - text dialogue of players. Here you can always find administration, and also observe of game.");
StartTimer6[playerid]=SetTimerEx("GoToStart7", 20000, 0, "i", playerid);
	return 1;
}
*/
/*
public GoToStart6Eng(playerid) {
SendClientMessage(playerid, green, " Attacks of hackers.");
SendClientMessage(playerid, yellow, " Since the server has received the official status they began to happen constantly.");
SendClientMessage(playerid, yellow, " We convincingly ask you to concern with understanding it, the administration uses the best efforts for maximum protection,");
SendClientMessage(playerid, yellow, " however sometimes even we are powerless. If the server is switched off, means we already works over its restoration, ");
SendClientMessage(playerid, yellow, " you need to wait a little only.");
SendClientMessage(playerid, yellow, " Likely reading already has tired you, therefore we pass to end.");
StartTimer6[playerid]=SetTimerEx("GoToStart7", 20000, 0, "i", playerid);
	return 1;
}
*/
/*
public GoToStart7Eng(playerid) {
CrashTest("[function] GoToStart7Eng");
SendClientMessage(playerid, green, " End.");
SendClientMessage(playerid, yellow, " To start to play to you it is necessary to be registered.");
SendClientMessage(playerid, yellow, " It is very simple, for this you need to think up the password for the account and a confidential word.");
SendClientMessage(playerid, yellow, " The confidential word is necessary for password restoration in a case if you have forgotten it. Use something well-known.");
SendClientMessage(playerid, yellow, " Type '/register password word ' (ex. /register 123 gold). Attention: if it is some words, the first will remain only!");
	return 1;
}
*/
//------------------------------------------------------------------------------------------------------

public AfterLogin(playerid) {
	CrashTest("[function] AfterLogin");

	//TogglePlayerSpectating(playerid, 0);
	SetupPlayerForClassSelection(playerid);

	new name[MAX_PLAYER_NAME],string[256]; GetPlayerName(playerid,name,sizeof(name));
	new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);

	new rus[1], city[256], tempnum;
	CountryAndCity(playerid, rus, city);

	new countytexteng[256], countytextrus[256];
	if(rus[0]==0) {
		format(countytexteng, sizeof(countytexteng), "%s",CountryCity[3]);
		format(countytextrus, sizeof(countytextrus), "%s",CountryCity[2]);
	}else{
		if(strcmp(city,"none",true)==0) { tempnum=1;
			format(countytexteng, sizeof(countytexteng), "%s, %s",CountryCity[1], CountryCity[5]);
			format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[0], CountryCity[4]);
		}else{
			format(countytexteng, sizeof(countytexteng), "%s, %s",CountryCity[1], city);
			format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[0], city);
		}}

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string, sizeof(string), " *** %s присоединился к игре. (%s) [Id:%i]",name, countytextrus, playerid);
		SendClientMessage(i, COLOR_ORANGE, string);
	}else{
		format(string, sizeof(string), " *** %s joined the server. (%s) [Id:%i]",name, countytexteng, playerid);
		SendClientMessage(i, COLOR_ORANGE, string); }


	format(string, sizeof(string), "3***\2;2 %s 3присоединился к игре. 2(%s) [Id:%i]", name, countytextrus, playerid);
	IRC_Say(EchoConnection2, EchoChan, string);

	PlayerSumMes++; if(PlayerSumMes==5) { PLOnConn(); PlayerSumMes=0; }

	if(Lang[playerid]==0) {
		SendClientMessage(playerid, green, " Добро пожаловать в Лас Вентурас Максимум!");
		SendClientMessage(playerid, yellow, " Помощь:  '/help'  |  Доступные команды:  '/commands'  |  Информация о скрипте:  '/scriptinfo' ");
		SendClientMessage(playerid, yellow, " Соблюдайте правила!    (/rules) ");
		SendClientMessage(playerid, yellow," Ведётся набор модеров! Скачай IRC клиент (с gta.bews.tk) и предложи свою кандидатуру (irc.bews.tk/rus)!");
	}else{
		SendClientMessage(playerid, green, " Welcome to Las Venturas Maximum!");
		SendClientMessage(playerid, yellow, " Help:  '/help'  |  Commands:  '/commands'  |  Script information:  '/scriptinfo' ");
		SendClientMessage(playerid, yellow, " Server rules -  '/rules'");
		SendClientMessage(playerid, yellow," Moders needed! Download IRC client (gta.bews.tk) and join irc.bews.tk/rus !");
	}

	new rand = random(8);

	switch(rand) {
	case 0: ApplyAnimation(playerid, "DANCING", "dnce_M_e", 4.0,1,1,0,0,0);
	case 1: ApplyAnimation(playerid, "DANCING", "dance_loop", 4.0,1,1,0,0,0);
	case 2: ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 4.0,1,1,0,0,0);
	case 3: ApplyAnimation(playerid, "DANCING", "dnce_M_a", 4.0,1,1,0,0,0);
	case 4: ApplyAnimation(playerid, "DANCING", "dnce_M_b", 4.0,1,1,0,0,0);
	case 5: ApplyAnimation(playerid, "DANCING", "dnce_M_c", 4.0,1,1,0,0,0);
	case 6: ApplyAnimation(playerid, "DANCING", "dnce_M_d", 4.0,1,1,0,0,0);
	case 7: ApplyAnimation(playerid, "DANCING", "dnce_M_e", 4.0,1,1,0,0,0);
	}

	format(string,sizeof(string),"~w~~n~~b~~n~~r~~n~~g~Las Venturas   ~n~~r~Maximum  ~n~~w~v%s r%s",Version, Revision);
	GameTextForPlayer(playerid,string,5000,1);

	MTsys[playerid]=0;
	MTsys2[playerid]=1;

	ErrCheck[playerid]=dini_Int(PF,"errcheck");

	CCCash[playerid]=dini_Int(PF,"cash");
	Gang[playerid]=dini_Int(PF,"gang");

	new year,month,day;
	getdate(year,month,day);

	Ingame[playerid]=dini_Int(PF,"ingame");
	Bank[playerid]=dini_Int(PF,"bank");
	Kills[playerid]=dini_Int(PF,"kills");
	Deaths[playerid]=dini_Int(PF,"deaths");
	Speedo[playerid]=dini_Int(PF,"speedo");
	Skin[playerid]=dini_Int(PF,"skin");
	RaceWIN[playerid]=dini_Int(PF,"racewin");
	DMWIN[playerid]=dini_Int(PF,"dmwin");
	Sponsor[playerid]=dini_Int(PF,"sponsor");
	MainNoob[playerid]=dini_Int(PF,"noob");
	if(strlen(dini_Get(PF,"playerstatus"))!=0) PlayerStatus[playerid]=dini_Get(PF,"playerstatus"); else PlayerStatus[playerid]="";

	if(EchoConnection1) if(IRC_IsUserOnChannel(EchoConnection1, EchoChan, name)) {
		IRCuserHost[playerid]=dini_Get("LVM/IRCusers.ini",name); new tempvar;
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IRCuser[i]==1) {
			if(strcmp(IRCuserHost[playerid],IRCuserHost[i],true)==0) tempvar=1; }
		if(tempvar==0) { IRCuser[playerid]=1;
			if(Lang[playerid]==0) format(string, sizeof(string), " Возможности IRC пользователя включены.");
			else format(string, sizeof(string), " IRC user features are avaible.");
			SendClientMessage(playerid, green, string); }
	}

	if(Sponsor[playerid]==1) {
		new SponsorTimeD=dini_Int(PF,"sponsortimed");
		new SponsorTimeM=dini_Int(PF,"sponsortimem");
		if((day>=SponsorTimeD && month==SponsorTimeM) || (month>SponsorTimeM) || (day>=SponsorTimeD && SponsorTimeM>12) || (day>=SponsorTimeD && 1<=month<3 && SponsorTimeM==12) || (day>=SponsorTimeD && month==1 && SponsorTimeM==11)) {
			Sponsor[playerid]=0;
			dini_IntSet(PF,"sponsor", 0);
			if(Lang[playerid]==0) format(string, sizeof(string), " Спонсорский аккаунт. Срок действия закончился.");
			else format(string, sizeof(string), " Sponsorship account. Validity expired.");
			SendClientMessage(playerid, cyan, string);
		}else{
			new days;
			if(SponsorTimeM!=month) { days+=30; days-=day; days+=SponsorTimeD; }else days=SponsorTimeD-day;
			if(Lang[playerid]==0) format(string, sizeof(string), " Спонсорский аккаунт. Срок действия: %d дней.",days);
			else format(string, sizeof(string), " Sponsorship account. Validity: %d days.",days);
			SendClientMessage(playerid, cyan, string); }
	}

	GivePlayerMoney(playerid,CCCash[playerid]);
	SetPlayerSkin(playerid,Skin[playerid]);
	Givemoney(playerid, 1000);

	new tttm=dini_Int(PF, "bizmoney");
	if(tttm>0) {
		Givemoney(playerid, tttm);
		if(Lang[playerid]==0) format(string, sizeof(string), " Доход от купленного бизнеса: $%d.",tttm);
		else format(string, sizeof(string), " Money from the bought business: $%d.",tttm);
		SendClientMessage(playerid, green, string);
		dini_IntSet(PF, "bizmoney", 0); }


	dini_IntSet(PF,"date1",year);
	dini_IntSet(PF,"date2",month);


	if(Kills[playerid]>2000) Color[playerid]=1;

	if(Gang[playerid]==0){
		if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
		else format(string, sizeof(string), "%s40",playerColor2);
		if(Sponsor[playerid]==1)
		if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
		else format(string, sizeof(string), "%s00",playerColor2);
		new Coloren=HexToInt(string);
		SetPlayerColor(playerid,Coloren);
		PLGangName[playerid]="None";
		Ganginv[playerid]="None";
	}else{
		PLGangName[playerid]=dini_Get(PF,"gangname");
		Ganginv[playerid]="None";
		new Pgang[256]; format(Pgang,sizeof(Pgang),"LVM/gangs/%s.ini", PLGangName[playerid]);
		if (!dini_Exists(Pgang)) {
			Gang[playerid]=0;
			PLGangName[playerid]="None";
			dini_IntSet(PF,"gang",0);
			dini_Set(PF,"gangname","None");
			if(Lang[playerid]==0) SendClientMessage(playerid, green," Вашей банды больше не существует.");
			else SendClientMessage(playerid, green," Your gang does not exist any more.");
			if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
			else format(string, sizeof(string), "%s40",playerColor2);
			if(Sponsor[playerid]==1)
			if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
			else format(string, sizeof(string), "%s00",playerColor2);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren); }

		new t=0;
		for(new i = 0; i < MAX_GANG_MEMBERS; i++) {
			format(string, sizeof(string),"player_%d",i);
			if(strlen(dini_Get(Pgang,string))!=0) if(strcmp(dini_Get(Pgang,string),name,true)==0) t=1; }

		if(t==0) {
			Gang[playerid]=0;
			PLGangName[playerid]="None";
			dini_IntSet(PF,"gang",0);
			dini_Set(PF,"gangname","None");
			if(Lang[playerid]==0) SendClientMessage(playerid, green," Вашей банды больше не существует.");
			else SendClientMessage(playerid, green," Your gang does not exist any more.");
			if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
			else format(string, sizeof(string), "%s40",playerColor2);
			if(Sponsor[playerid]==1)
			if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
			else format(string, sizeof(string), "%s00",playerColor2);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren); }

		if(Gang[playerid]!=0){
			playerGangColor[playerid]=dini_Get(Pgang,"color");
			PLGangSpawn[playerid]=dini_Int(Pgang,"gangspawn");
			Xgspawn[playerid]=dini_Float(Pgang,"spawnposx");
			Ygspawn[playerid]=dini_Float(Pgang,"spawnposy");
			Zgspawn[playerid]=dini_Float(Pgang,"spawnposz");
			GangTesting[playerid]=dini_Int(PF,"gangtesting");
			if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
			else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
			if(Sponsor[playerid]==1)
			if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerGangColor[playerid]);
			else format(string, sizeof(string), "%s00",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren); } }


	if(ErrCheck[playerid]!=0) {
		if(CCCash[playerid]>100000000) { CCCash[playerid]=0; ResetPlayerMoney(playerid); }
		ErrCheck[playerid]=0; }


	if(Sponsor[playerid]==1) {
		InvAllow[playerid] = 1;
		Cheat[playerid] = 1;
		LKills[playerid]=20;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Seasparrow разблокирован.");
		else SendClientMessage(playerid, yellow, " Seasparrow unlocked.");
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Rhino разблокирован.");
		else SendClientMessage(playerid, yellow, " Rhino unlocked.");
	}

	if(tempnum==1) {
		new File:f;
		f = fopen("LVM/system/ips/addnotadded.ini", io_append);
		new ip[256]; GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,256, "%s", ip);
		fwrite(f,string);
		format(string,256, "\r\n");
		fwrite(f,string);
		fclose(f);
		if(Lang[playerid]==0) SendClientMessage(playerid, red, " Пожалуйста, добавьте свой город (/city название города).");
		else SendClientMessage(playerid, red, " Please add your city (/city sity name)."); }


	if(dini_Int(PF,"akick")==1) {
		format(string,sizeof(string)," ([%d] %s) - (akick) %s",playerid,name,dini_Get(PF,"akickreason"));
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - (akick) %s",EchoChan,playerid,name,dini_Get(PF,"akickreason"));
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[playerid]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - (akick) %s",dini_Get(PF,"akickreason"));
		else format(string,sizeof(string), " *** You was kicked from the server. Information - (akick) %s",dini_Get(PF,"akickreason"));
		SendClientMessage(playerid, COLOR_ORANGE, string);
		SetTimerEx("PKick", 50, 0, "i",playerid); return 1; }

	if(dini_Int(PF,"aban")==1) {
		format(string,sizeof(string)," ([%d] %s) - (aban) %s",playerid,name,dini_Get(PF,"abanreason"));
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - (aban) %s",EchoChan,playerid,name,dini_Get(PF,"abanreason"));
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[playerid]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - (aban) %s",dini_Get(PF,"abanreason"));
		else format(string,sizeof(string), " *** You was kicked from the server. Information - (aban) %s",dini_Get(PF,"abanreason"));
		SendClientMessage(playerid, COLOR_ORANGE, string);
		format(string,sizeof(string), "(aban) %s",dini_Get(PF,"abanreason"));
		format(BanString,sizeof(BanString), "%s",string); SetTimerEx("PBan", 50, 0, "i",playerid); return 1; }
	if (Sponsor[playerid] == 0) { SetTimerEx("CheckNewYearSponsor", 50, 0, "i", playerid); }


	return 1;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerDisconnect(playerid, reason) {
	CrashTest("[function] OnPlayerDisconnect");

	IPcheck[playerid] = "";

	TextDrawHideForPlayer(playerid,Clock);
	TextDrawHideForPlayer(playerid,WEB);
	TextDrawHideForPlayer(playerid,BankDraw[playerid]); 
	TextDrawHideForPlayer(playerid,GangDraw[playerid]);

	PlayerSWeapInfo[playerid][LastSpectated] = 0;

	if(Login[playerid]==1) {

		new name[MAX_PLAYER_NAME],string[256]; GetPlayerName(playerid,name,sizeof(name));

		if(Registered[playerid]==1) {
			if(strfind(name, "_AWAY", true) != -1) {
				new pos = strfind(name, "_AWAY", true); strdel(name, pos, (pos+5)); }
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);

			if(dini_Int(PF,"ingame")<=Ingame[playerid]) {
				dini_IntSet(PF,"errcheck", ErrCheck[playerid]);
				dini_IntSet(PF,"cash", CCCash[playerid]);
				dini_IntSet(PF,"ingame",Ingame[playerid]);
				dini_IntSet(PF,"bank",Bank[playerid]);
				dini_IntSet(PF,"kills",Kills[playerid]);
				dini_IntSet(PF,"deaths",Deaths[playerid]);
				dini_IntSet(PF,"speedo",Speedo[playerid]);
				dini_IntSet(PF,"skin",Skin[playerid]);
				dini_IntSet(PF,"racewin",RaceWIN[playerid]);
				dini_IntSet(PF,"dmwin",DMWIN[playerid]);
			}}

		RaceExitCH(playerid);
		DMExitCH(playerid);


		Color[playerid]=0;
		Login[playerid] = 0;
		CAPSLOCK[playerid] = 0;
		Repeat[playerid] = 0;
		Mute[playerid] = 0;
		Jail[playerid] = 0;
		Bank[playerid] = 0;
		Flood[playerid] = 0;
		NActiveT[playerid] = 0;
		telep[playerid] = 0;
		Hitman[playerid]=0;
		Lotto[playerid]=0;
		LottoMon[playerid]=0;
		PLGangName[playerid]="None";
		Ganginv[playerid]="None";
		AFK[playerid]=0;
		AFKcheat[playerid]=0;
		LKills[playerid]=0;
		SpeedCH[playerid]=0;
		RacePLCR[playerid]=0;
		Speedtemp[playerid]=0;
		PLOnRace[playerid]=0;
		RaceCheckpoin[playerid]=0;
		RaceWIN[playerid]=0;
		DMWIN[playerid]=0;
		Bombinst[playerid]=0;
		PLGangSpawn[playerid]=0;
		SpeedoShow[playerid]=0;
		Alevel[playerid]=0;
		Gang[playerid]=0;
		MTsys[playerid]=0;
		MTsys2[playerid]=1;
		CCCash[playerid]=0;
		Ingame[playerid]=0;
		Kills[playerid]=0;
		Deaths[playerid]=0;
		Speedo[playerid]=0;
		Skin[playerid]=0;
		Sponsor[playerid]=0;
		MainNoob[playerid]=0;
		PlayerStatus[playerid]="";
		IRCuser[playerid]=0;

		switch (reason) {
		case 0: {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)) if(MTsys[i] == 0)
				if(Lang[i]==0) {
					format(string, sizeof(string), " *** %s покинул сервер. (Потеря связи) [Id:%i]",name, playerid);
					SendClientMessage(i, COLOR_ORANGE, string);
				}else{
					format(string, sizeof(string), " *** %s left the server. (Timeout) [Id:%i]",name, playerid);
					SendClientMessage(i, COLOR_ORANGE, string); } }
		case 1: {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)) if(MTsys[i] == 0)
				if(Lang[i]==0) {
					format(string, sizeof(string), " *** %s покинул сервер. (Выход) [Id:%i]",name, playerid);
					SendClientMessage(i, COLOR_ORANGE, string);
				}else{
					format(string, sizeof(string), " *** %s left the server. (Leaving) [Id:%i]",name, playerid);
					SendClientMessage(i, COLOR_ORANGE, string); } }
		case 2: {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)) if(MTsys[i] == 0)
				if(Lang[i]==0) {
					format(string, sizeof(string), " *** %s покинул сервер. (Кик/Бан) [Id:%i]",name, playerid);
					SendClientMessage(i, COLOR_ORANGE, string);
				}else{
					format(string, sizeof(string), " *** %s left the server. (Kick/Ban) [Id:%i]",name, playerid);
					SendClientMessage(i, COLOR_ORANGE, string); } }
		}

		format(string, sizeof(string), "7***\2;2 %s 7покинул сервер. (2%s) 2[Id:%i]", name, aDisconnectNames[reason], playerid);
		IRC_Say(EchoConnection2, EchoChan, string);

		KillTimer(JailTimer[playerid]);

		InvAllow[playerid]=0;
		Cheat[playerid] = 0;

		if(VoteKickTIMER == 1)
		if(VoteKickID == playerid){
			VoteKickID=0;
			VoteKickNUM=0;
			VoteKickTIMER=0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			VoteKickVOTED[i] = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) {
				SendClientMessage(i, yellow, " *** Голосование окончено.");
			}else{
				SendClientMessage(i, yellow, " *** Voting finished."); }
			IRC_Say(EchoConnection1, EchoChan, " 13Голосование окончено.");
			KillTimer(VoteKickT); }

		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid)
		if(i==0) DuelStop(DuelMember[1]);
		else DuelStop(DuelMember[0]);

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) DuelStop2(DuelMember[0]);

	}

	SpecExit(playerid);

	/*
KillTimer(StartTimer1[playerid]);
KillTimer(StartTimer2[playerid]);
KillTimer(StartTimer3[playerid]);
KillTimer(StartTimer4[playerid]);
KillTimer(StartTimer5[playerid]);
KillTimer(StartTimer6[playerid]);*/

	KillTimer(LogCheckTimer[playerid]);


	return 1;
}


//------------------------------------------------------------------------------------------------------


public OnPlayerDeath(playerid, killerid, reason)
{
	CrashTest("[function] OnPlayerDeath");

	new string[256];
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));

	if(!playerSpawned[playerid]) {
		format(string,sizeof(string)," ([%d] %s) - Server: fake kill",playerid,name);
		SendMessageToAdminEx(playerid,string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: fake kill",EchoChan,playerid,name);
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[playerid]==0) format(string,sizeof(string), " *** Вы были забанены с сервера. Информация - Server: fake kill");
		else format(string,sizeof(string), " *** You was banned from the server. Information - Server: fake kill");
		SendClientMessage(playerid, COLOR_ORANGE, string);
		format(string,sizeof(string), "player: %s; admin: Server; reason: fake kill",name);
		format(BanString,sizeof(BanString), "%s",string); SetTimerEx("PBan", 50, 0, "i",playerid);

		return 1; }


	GameTextForPlayer(playerid,"DEAD",5000,2);

	TextDrawHideForPlayer(playerid,BankDraw[playerid]); 
	TextDrawHideForPlayer(playerid,GangDraw[playerid]);

	playerSpawned[playerid]=false;
	telep[playerid]=0;


	if(DMStarting==7 && PLOnDM[playerid]!=0) {
		new players; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnDM[i]!=0) players++;
		if(DMWinner!=2) {
			if(players==DMWinner-1) DMWinner--;
			format(string, sizeof(string)," %s занял %d место в дефматче.", name,DMWinner);
			format(string2, sizeof(string2)," %s took %d place in deathmatch.", name,DMWinner);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) SendClientMessage(i, yellow, string);
			else SendClientMessage(i, yellow, string2);
			format(string, sizeof(string),"3%s занял %d место в дефматче.", name,DMWinner);
			IRC_Say(EchoConnection2, EchoChan, string);
			DMWinner--;
			if (InvAllow[playerid]==1)
			if(Gang[playerid]==0){
				if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
				else format(string, sizeof(string), "%s00",playerColor2);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren);
			}else{
				format(string, sizeof(string), "%s00",playerGangColor[playerid]);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren); }
		}else{
			new money, plid;
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnDM[i]!=0) if(i!=playerid) plid=i;
			format(string, sizeof(string)," %s занял %d место в дефматче.", name,DMWinner);
			format(string2, sizeof(string2)," %s took %d place in deathmatch.", name,DMWinner);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) SendClientMessage(i, yellow, string);
			else SendClientMessage(i, yellow, string2);
			format(string, sizeof(string),"3%s занял %d место в дефматче.", name,DMWinner);
			IRC_Say(EchoConnection2, EchoChan, string);
			money=10000*DMPL;
			new name2[MAX_PLAYER_NAME]; GetPlayerName(plid,name2,sizeof(name2));
			format(string, sizeof(string)," %s победил в дефматче, приз: $%d", name2,money);
			format(string2, sizeof(string2)," %s won the deathmatch, money: $%d", name2,money);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) SendClientMessage(i, yellow, string);
			else SendClientMessage(i, yellow, string2);
			format(string, sizeof(string),"3%s победил в дефматче, приз: $%d", name2,money);
			IRC_Say(EchoConnection2, EchoChan, string);
			if (InvAllow[playerid]==1)
			if(Gang[playerid]==0){
				if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
				else format(string, sizeof(string), "%s00",playerColor2);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren);
			}else{
				format(string, sizeof(string), "%s00",playerGangColor[playerid]);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren); }
			if (InvAllow[plid]==1)
			if(Gang[plid]==0){
				if(Color[plid]==0) format(string, sizeof(string), "%s00",playerColor);
				else format(string, sizeof(string), "%s00",playerColor2);
				new Coloren=HexToInt(string);
				SetPlayerColor(plid,Coloren);
			}else{
				format(string, sizeof(string), "%s00",playerGangColor[plid]);
				new Coloren=HexToInt(string);
				SetPlayerColor(plid,Coloren); }
			PLOnDM[plid]=0; Givemoney(plid, money); DMEnd();
			DMWIN[plid]++; }
		PLOnDM[playerid]=0; }


	if(DMStarting!=7 && PLOnDM[playerid]!=0) { DMPlayers--; PLOnDM[playerid]=0; }


	if(Kill[playerid]==1) {
		SendDeathMessage(INVALID_PLAYER_ID,playerid,reason);
		format(string, sizeof(string), "*** 2[%i] 2\2;%s 10умер.", playerid, name);
		IRC_Say(EchoConnection2, EchoChan, string);
		if(CCCash[playerid]>=4000)
		Givemoney(playerid, -1900);
		else{
			ResetPlayerMoney(playerid);
			CCCash[playerid]=0;
			Givemoney(playerid,2100); }
		Kill[playerid]=0;
		if(DuelStarted>0)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid)
		if(i==0) { DuelStop(DuelMember[1]); return 1; }
		else { DuelStop(DuelMember[0]); return 1; }
		DropWeapons(playerid);
		
		RaceExitCH(playerid);

		return 1; }

	if(killerid == INVALID_PLAYER_ID) {
		SendDeathMessage(INVALID_PLAYER_ID,playerid,reason);
		format(string, sizeof(string), "*** 2[%i] 2\2;%s 10умер.", playerid, name);
		IRC_Say(EchoConnection2, EchoChan, string);
		if(CCCash[playerid]>=4000)
		Givemoney(playerid, -1900);
		else{
			ResetPlayerMoney(playerid);
			CCCash[playerid]=0;
			Givemoney(playerid,2100); }
	}else{
		if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(killerid) == PLAYER_STATE_DRIVER &&
				(reason == WEAPON_TEC9 || reason == WEAPON_UZI || reason == WEAPON_MP5)) {
			SendDeathMessage(INVALID_PLAYER_ID,playerid,reason);
			GameTextForPlayer(killerid,"DRIVE-BY IS NOT ALLOWED",5000,3);
			format(string, sizeof(string), "*** 2[%i] 2\2;%s 10умер.", playerid, name);
			IRC_Say(EchoConnection2, EchoChan, string);
			if(CCCash[killerid]>=10000) {
				Givemoney(killerid, -10000);
				Givemoney(playerid, 10000);
			}else{
				Givemoney(playerid, CCCash[killerid]);
				ResetPlayerMoney(killerid);
				CCCash[killerid]=0;
				Givemoney(killerid,2100); }
		}else{
			SendDeathMessage(killerid,playerid,reason);
			new killer[MAX_PLAYER_NAME]; GetPlayerName(killerid,killer,sizeof(killer));
			if(reason == 51) format(string, sizeof(string), "*** 2[%i] 2\2;%s 10убил 2[%i] 2\2;%s. (2Rocket)", killerid, killer, playerid, name);
			else format(string, sizeof(string), "*** 2[%i] 2\2;%s 10убил 2[%i] 2\2;%s. (2%s)", killerid, killer, playerid, name, aWeaponNames[reason]);
			IRC_Say(EchoConnection2, EchoChan, string);
			Kills[killerid]++; Deaths[playerid]++;
			LKills[killerid]++;
			if(Hitman[playerid]!=0){ Givemoney(killerid,Hitman[playerid]); Hitman[playerid]=0; }
			if(Cheat[playerid]==0){
				if(CCCash[playerid]>=2000){
					Givemoney(killerid,CCCash[playerid]);
					ResetPlayerMoney(playerid);
					CCCash[playerid]=0;
					Givemoney(playerid,2100);
				}else{
					Givemoney(killerid,2000);
					ResetPlayerMoney(playerid);
					CCCash[playerid]=0;
					Givemoney(playerid,2100); }
			}else{
				Givemoney(killerid,2000);
				if(CCCash[playerid]>=4000)
				Givemoney(playerid, -1900);
				else{
					ResetPlayerMoney(playerid);
					CCCash[playerid]=0;
					Givemoney(playerid,2100); } }
			GlobalKills++;
			SetTimerEx("Gangst", 500, 0, "ii", playerid,1);
			SetTimerEx("Gangst", 100, 0, "ii", killerid,0); }
	}

	if(DuelStarted==2)
	for(new i = 0; i < 2; i++)
	if(DuelMember[i]==playerid)
	if(i==0) { DuelStop(DuelMember[1]); return 1; }
	else { DuelStop(DuelMember[0]); return 1; }

	if(DuelStarted==1)
	if(DuelMember[0]==playerid) {
		DuelStop2(DuelMember[0]); return 1; }

	DropWeapons(playerid);
	UnlockCH(killerid);

	if(PLSpecP[playerid]==1)
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(PLSpecO[i]==playerid) SpecExit(i);

	RaceExitCH(playerid);

	return 1;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerCommandText(playerid, cmdtext[])
{
	CrashTest("[function] OnPlayerCommandText");
	if(strlen(cmdtext) >= 120) return 0;

	fixchars(cmdtext);

	new string[128],tmp[256],tmp2[256];
	new animationped;
	new idx;
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	//	new tmp3[256],Float:HP;
	new VID;
	if(IsPlayerInAnyVehicle(playerid)) VID = GetPlayerVehicleID(playerid);

	tmp = strtok(cmdtext, idx);

	//----------------------------------

	format(crashtext, sizeof(crashtext), "[command] [%s]: %s",name,cmdtext[0]);
	printf(crashtext); 

	//----------------------------------

	if(PLOnRace[playerid]!=0) return 1;
	if(PLOnDM[playerid]!=0) return 1;

	if (Mute[playerid] == 1) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow , " Вы умолчаны и не можете писать сообщения.");
		else SendClientMessage(playerid, yellow , " You are muted.");
		return 1; }

	new temerp=0;
	for(new i = 0; i < strlen(cmdtext); i++) if(RepCh[playerid][i]==cmdtext[i]) temerp++;

	if(strlen(cmdtext)>3)
	if(strlen(cmdtext)<=(temerp+1))
	if(strlen(RepCh[playerid])<=(strlen(cmdtext)+1)) {
		Repeat[playerid]++;
		//if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Не повторяйте сообщения, иначе вы будете умолчаны.");
		//else SendClientMessage(playerid, yellow," Do not repeat messages, or you will be muted.");
	}
	if(strlen(cmdtext)==strlen(RepCh[playerid])) {
		if(strlen(cmdtext)==1)
		if(temerp==1) {
			Repeat[playerid]++;
		}
		if(strlen(cmdtext)==3)
		if(temerp==3) {
			Repeat[playerid]++;
		}
		if(strlen(cmdtext)==2)
		if(temerp==2) {
			Repeat[playerid]++;
		}
	}

	for(new i = 0; i <= strlen(cmdtext); i++) {
		RepCh[playerid][i]=cmdtext[i];
	}

	temerp=0;
	for(new i = 0; i < strlen(cmdtext); i++) if(cmdtext[i] == cmdtext[i+1]) temerp++;

	if(temerp >= 4) {
		Repeat[playerid]++;
	}

	for(new s = 0; s < num_words; s++)
	{
		new pos;
		while((pos = strfind(cmdtext,Swears[s],true)) != -1) for(new i = pos, j = pos + strlen(Swears[s]); i < j; i++){
			cmdtext[i] = '*';
		}
	}



	new warers;

	for(new i = 0; i < strlen(cmdtext); i++)
	if(cmdtext[i] == 46)
	warers++;

	for(new i = 0; i < strlen(cmdtext); i++)
	if(cmdtext[i] == 58)
	if(warers>=3) {
		format(string,sizeof(string)," ([%d] %s) - Server: возможная реклама",playerid,name);
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: возможная реклама",EchoChan,playerid,name);
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: возможная реклама");
		else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: possible advertising");
		SetTimerEx("PKick", 50, 0, "i",playerid); return 1; }

	warers=0;

	for(new i = 0; i < strlen(cmdtext); i++)
	if(cmdtext[i] == 44)
	warers++;

	for(new i = 0; i < strlen(cmdtext); i++)
	if(cmdtext[i] == 58)
	if(warers>=3) {
		format(string,sizeof(string)," ([%d] %s) - Server: возможная реклама",playerid,name);
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: возможная реклама",EchoChan,playerid,name);
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: возможная реклама");
		else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: possible advertising");
		SetTimerEx("PKick", 50, 0, "i",playerid); return 1; }

	Flood[playerid]++;

	new CAPS=0;

	for(new i; i<strlen(cmdtext); i++)
	{

		if (cmdtext[i] > 64 && cmdtext[i] < 91) CAPS++;
		if (cmdtext[i] > 191 && cmdtext[i] < 224) CAPS++;
		if (cmdtext[i] == 168) CAPS++;

	}



	if(CAPS>=6){
		CAPSLOCK[playerid]++;
	}


	if(CAPSLOCK[playerid]==3){
		if(Alevel[playerid] == 0) Mute[playerid] = 1;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Server: вы были умолчаны на 1 минуту.");
		else SendClientMessage(playerid, yellow, " Server: you was muted for 1 minute.");
		if(Sponsor[playerid]==0) SetTimerEx("DestroyFloodEx", 60000, 0, "i", playerid);
		else SetTimerEx("DestroyFloodEx", 30000, 0, "i", playerid);
		return 1;
	}

	if(Flood[playerid]==4) {
		if(Alevel[playerid] == 0) Mute[playerid] = 1;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Server: вы были умолчаны на 1 минуту.");
		else SendClientMessage(playerid, yellow, " Server: you was muted for 1 minute.");
		if(Sponsor[playerid]==0) SetTimerEx("DestroyFloodEx", 60000, 0, "i", playerid);
		else SetTimerEx("DestroyFloodEx", 30000, 0, "i", playerid);
		return 1;
	}

	if(Repeat[playerid]==3) {
		if(Alevel[playerid] == 0) Mute[playerid] = 1;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Server: вы были умолчаны на 1 минуту.");
		else SendClientMessage(playerid, yellow, " Server: you was muted for 1 minute.");
		if(Sponsor[playerid]==0) SetTimerEx("DestroyFloodEx", 60000, 0, "i", playerid);
		else SetTimerEx("DestroyFloodEx", 30000, 0, "i", playerid);
		return 1;
	}

	//----------------------------------

	if(Login[playerid]==0) {

		/* if(strcmp(tmp,"/login",true) == 0) {
tmp = strtok(cmdtext,idx);
new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
	if (dini_Exists(PF)) {
			if (isnull(tmp)) {
		if(Lang[playerid]==0)
		SendClientMessage(playerid,green," Использование: /LOGIN <ПАРОЛЬ>");
		else SendClientMessage(playerid, yellow, " Usage: /LOGIN <PASSWORD>");
		return 1; }
			if(dini_Int(PF,"password") == udb_hash(tmp)) {
			TogglePlayerControllable(playerid,1);
			Login[playerid] = 1;
			Alevel[playerid] = dini_Int(PF,"alevel");
			SetTimerEx("AfterLogin", 50, 0, "i", playerid);
				if(Alevel[playerid]==0) {
				if(Lang[playerid]==0) SendClientMessage(playerid,green," Вы вошли.");
				else SendClientMessage(playerid, green, " You logged in.");
				}else{
				if(Lang[playerid]==0) format(string,sizeof(string)," Вы вошли как Администратор. [Уровень %d]",Alevel[playerid]);
				else format(string,sizeof(string)," You logged in as Administrator. [Level %d]",Alevel[playerid]);
				SendClientMessage(playerid,green,string); }
			} else {
				LogTry[playerid] -= 1; new tries = LogTry[playerid];
				if (tries > 0) {
				if(Lang[playerid]==0){
				format(string,sizeof(string)," Неверный пароль. У вас осталось %d попытки.",tries);
				SendClientMessage(playerid,red,string);
				SendClientMessage(playerid,yellow," Если забыли пароль, наберите '/lostpassword'.");
				SendClientMessage(playerid,yellow," Чтобы сменить ник, наберите '/nick'.");
				}else{
				format(string,sizeof(string)," Incorrect password. You have %d tries.",tries);
				SendClientMessage(playerid,red,string);
				SendClientMessage(playerid,yellow," If you forgot the password, type '/lostpassword'.");
				SendClientMessage(playerid,yellow," To change your nickname, type '/nick'."); }
				}else{
				format(string,sizeof(string)," ([%d] %s) - Server: неверный пароль",playerid,name);
				SendMessageToAdmins(string);
				format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: неверный пароль",EchoChan,playerid,name);
				IRC_SendRaw(EchoConnection2, string);
				if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: неверный пароль");
				else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: incorrect password");
				SetTimerEx("PKick", 50, 0, "i",playerid); }
			}
		}else{
		if(Lang[playerid]==0) format(string,sizeof(string)," Имя %s не зарегистрировано.",name);
		else format(string,sizeof(string)," Name %s is not registered.",name);
		SendClientMessage(playerid,yellow,string); }
return 1;
} */

		/*
if(strcmp(tmp,"/register",true) == 0) {
tmp = strtok(cmdtext,idx);
tmp2 = strtok(cmdtext,idx);
new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
	if (!dini_Exists(PF)) {
		if (isnull(tmp) || isnull(tmp2)) {
		if(Lang[playerid]==0)
		SendClientMessage(playerid,green," Использование: /REGISTER <ПАРОЛЬ> <СЕКРЕТНОЕ СЛОВО>");
		else SendClientMessage(playerid, green, " Usage: /REGISTER <PASSWORD> <CONFIDENTIAL WORD>");
		return 1; }
		if ((strlen(tmp) <= 5) || (strlen(tmp) >= 20)) {
		if(Lang[playerid]==0)
		SendClientMessage(playerid,yellow," Пароль слишком короткий. (Min: 5, Max: 20)");
		else SendClientMessage(playerid, yellow, " Password is too short. (Min: 5, Max: 20)");
		return 1; }
				dini_Create(PF);
				GlobalPlayers++;
				dini_IntSet(PF,"password",udb_hash(tmp));
				dini_Set(PF,"word", tmp2);
				dini_IntSet(PF,"lang",Lang[playerid]);
				TogglePlayerControllable(playerid,1);
				Login[playerid] = 1;
				Alevel[playerid]=0;
				SetTimerEx("AfterLogin", 50, 0, "i", playerid);
				if(Lang[playerid]==0) format(string,sizeof(string)," Имя %s успешно зарегистрировано. Приятной игры.",name);
				else format(string,sizeof(string)," Name %s successfully registered. You can play now.",name);
				SendClientMessage(playerid,green,string);
		}else{
		if(Lang[playerid]==0) format(string,sizeof(string)," Имя %s уже зарегистрировано.",name);
		else format(string,sizeof(string)," Name %s is already registered.",name);
		SendClientMessage(playerid,yellow,string); }
return 1;
}
*/

		/* if(strcmp(tmp,"/nick",true) == 0) {
tmp = strtok(cmdtext,idx);

if (isnull(tmp)) {
if(Lang[playerid]==0)
SendClientMessage(playerid,green," Использование: /NICK <НОВОЕ ИМЯ> ");
else SendClientMessage(playerid, green, " Usage: /NICK <NEW NAME>");
return 1; }


KillTimer(StartTimer1[playerid]);
KillTimer(StartTimer2[playerid]);
KillTimer(StartTimer3[playerid]);
KillTimer(StartTimer4[playerid]);
KillTimer(StartTimer5[playerid]);
KillTimer(StartTimer6[playerid]);

SetPlayerName(playerid,cmdtext[6]);

GetPlayerName(playerid,name,sizeof(name));
new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
if (!dini_Exists(PF)) { GoToStart(playerid); return 1; }

Lang[playerid] = dini_Int(PF,"lang");

if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Пожалуйста войдите в свой аккаунт при помощи '/login пароль' (напр. /login 123)");
else SendClientMessage(playerid, yellow, " Please login into your account with '/login password' (ex. /login 123)");

return 1;
}

if(strcmp(tmp,"/lostpassword",true) == 0) {
tmp = strtok(cmdtext,idx);

if (isnull(tmp)) {
if(Lang[playerid]==0)
SendClientMessage(playerid,green," Использование: /LOSTPASSWORD <СЕКРЕТНОЕ СЛОВО> ");
else SendClientMessage(playerid, green, " Usage: /LOSTPASSWORD <CONFIDENTIAL WORD>");
return 1; }

new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
if (dini_Exists(PF)) {
if(strcmp(dini_Get(PF,"word"),tmp,true) == 0) {

dini_IntSet(PF,"password",udb_hash("1234"));

if(Lang[playerid]==0) SendClientMessage(playerid,green," Ваш пароль изменён на 1234, используйте '/setpass' чтобы изменить на более надёжный.");
else SendClientMessage(playerid, green, " Your password was changed to 1234, use '/setpass ' to change to more reliable.");

}else{
format(string,sizeof(string)," ([%d] %s) - Server: cекретное слово неверное",playerid,name);
SendMessageToAdmins(string);
format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: cекретное слово неверное",EchoChan,playerid,name);
IRC_SendRaw(EchoConnection2, string);
if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: cекретное слово неверное");
else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: confidential word is incorrect");
SetTimerEx("PKick", 50, 0, "i",playerid); }
}else{
if(Lang[playerid]==0) SendClientMessage(playerid,green," Вы не зарегистрированы.");
else SendClientMessage(playerid, green, " You are not registered."); }

return 1;
} */

		if(strcmp(tmp,"/eng",true) == 0) {
			Lang[playerid] = 1;
			SendClientMessage(playerid,green," Your language was changed to english.");
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
			//if (!dini_Exists(PF)) GoToStartEng(playerid);
			if (!dini_Exists(PF)) GoToStart(playerid);
			return 1;
		}

		if(strcmp(tmp,"/rus",true) == 0) {
			Lang[playerid] = 0;
			SendClientMessage(playerid,green," Ваш язык был изменён на русский.");
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
			if (!dini_Exists(PF)) GoToStart(playerid);
			return 1;
		}

		return Errorm(playerid);
	}


	if(strcmp(tmp,"/register",true) == 0) {
		if(Registered[playerid]!=0) return 1;
		tmp = strtok(cmdtext,idx);
		tmp2 = strtok(cmdtext,idx);
		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
		if (!dini_Exists(PF)) {
			if (isnull(tmp) || isnull(tmp2)) {
				if(Lang[playerid]==0) ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Регистрация", "Введите пароль", "ОК", "Отмена");
				else ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Registration", "Type password", "ОК", "Cancel"); return 1; }
			if ((strlen(tmp) <= 5) || (strlen(tmp) >= 20)) {
				if(Lang[playerid]==0)
				SendClientMessage(playerid,yellow," Пароль слишком короткий. (Min: 5, Max: 20)");
				else SendClientMessage(playerid, yellow, " Password is too short. (Min: 5, Max: 20)");
				return 1; }
			dini_Create(PF);
			GlobalPlayers++;
			dini_IntSet(PF,"password",udb_hash(tmp));
			dini_Set(PF,"word", tmp2);
			dini_IntSet(PF,"lang",Lang[playerid]);
			TogglePlayerControllable(playerid,1);
			Login[playerid] = 1;
			Registered[playerid]=1;
			Alevel[playerid]=0;
			//				SetTimerEx("AfterLogin", 50, 0, "i", playerid);
			if(Lang[playerid]==0) format(string,sizeof(string)," Имя %s успешно зарегистрировано. Приятной игры.",name);
			else format(string,sizeof(string)," Name %s successfully registered. You can play now.",name);
			SendClientMessage(playerid,green,string);
			SetTimerEx("CheckNewYearSponsor", 50, 0, "i", playerid);
		}else{
			if(Lang[playerid]==0) format(string,sizeof(string)," Имя %s уже зарегистрировано.",name);
			else format(string,sizeof(string)," Name %s is already registered.",name);
			SendClientMessage(playerid,yellow,string); }
		return 1;
	}


	if(strcmp(tmp, "/away", true) == 0) {

		/*if(AFK[playerid]==0) {
format(name, sizeof(name), "%s_AWAY",name);
SetPlayerName(playerid,name);
TogglePlayerControllable(playerid,0);
SetPlayerColor(playerid,playerColorOnCon);
if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Включён режим AFK.");
else SendClientMessage(playerid, yellow, " You now in AFK mode.");
AFK[playerid]=1;
}else{*/

		if(AFK[playerid]!=0) {
			TogglePlayerControllable(playerid,1);
			AFKcheat[playerid]=0;

			new pos = strfind(name, "_AWAY", true);
			strdel(name, pos, (pos+5));
			SetPlayerName(playerid,name);

			if(Gang[playerid]==0){
				if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
				else format(string, sizeof(string), "%s40",playerColor2);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren);
			}else{
				if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
				else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren); }

			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Режим AFK выключен.");
			else SendClientMessage(playerid, yellow, " AFK mode is off now.");
			AFK[playerid]=0;
		}else Errorm(playerid);

		return 1; }

	if(AFK[playerid]==1) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Команды недоступны в режиме AFK (напишите /away).");
		else SendClientMessage(playerid, yellow, " Commands are not available in AFK mode (type /away).");
		return 1; }

	if(strcmp(tmp,"/kill",true)==0) {
		if(Jail[playerid] == 1 || !playerSpawned[playerid]) return 1;
		/*
if(telep[playerid]==1) {
if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
else SendClientMessage(playerid, yellow, " Teleport already in process.");
return 1; }*/

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }
		telep[playerid]=1;
		SetTimerEx("Tele",3000,0,"ii",playerid,9000);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");

		return 1; }

	if(strcmp(tmp,"/statusoff",true)==0) {
		if(strlen(PlayerStatus[playerid])==0) return Errorm(playerid);
		if(Lang[playerid]==0) format(string, sizeof(string), " Статус удалён.");
		else format(string, sizeof(string), " Status removed.");
		SendClientMessage(playerid, cyan, string);
		PlayerStatus[playerid]="";
		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
		dini_Set(PF,"playerstatus", "");
		return 1; }

	if(strcmp(tmp,"/scriptinfo",true)==0) {
		SendClientMessage(playerid,green," Gamemode script:");
		format(string,256," Las Venturas Maximum by Bews: version %s (fixed), revision %s, date %s", Version, Revision, Date);
		SendClientMessage(playerid,yellow,string);
		SendClientMessage(playerid,yellow,"   Inclusions:");
		SendClientMessage(playerid,yellow," xAntiSwear by Boylett");
		SendClientMessage(playerid,yellow," Vehicle Names Display by Seif[CC]");
		SendClientMessage(playerid,yellow," Weapon Drop and Zones by mabako");
		SendClientMessage(playerid,yellow," Temporary ban system v1.1 by d.wine");
		SendClientMessage(playerid,yellow," Animation by Wooz1e");
		SendClientMessage(playerid,yellow," Vehicle Mod Anti-Crash by Crack, Davee and 0xF29323");
		SendClientMessage(playerid,yellow," Speedometer design by RyDeR");
		return 1; }


	if(strcmp(tmp,"/uptime",true)==0) {
		new stringo[256];
		new stringt[256];
		new year,month,day;
		getdate(year,month,day);
		new y, m;
		if(day<20) { day=day+30; day=day-20; m=1; } else day=day-20;
		month=month-m;
		if(month<7) { month=month+12; month=month-7; y=1; } else month=month-7;
		year=year-y;
		year=year-2007;
		if(year==1) format(stringo, sizeof(stringo), "%d год, %d месяцев, %d дней", year, month, day);
		else format(stringo, sizeof(stringo), "%d года, %d месяцев, %d дней", year, month, day);

		new days,hours,minutes;
		if(mins>60) {
			hours = (mins/60);
			minutes = mins-(hours*60);
			if(hours>23) {
				days = (hours/24);
				hours = hours-(days*24);
			}else { days = 0; }
		}else{
			minutes = mins;
			hours = 0;
			days = 0; }
		format(stringt, sizeof(stringt), "%d дней, %d часов, %d минут", days, hours, minutes);

		format(string, sizeof(string), " Данный сервер существует уже %s. С момента последнего перезапуска прошло %s.", stringo, stringt);
		SendClientMessage(playerid,yellow,string);

		return 1; }


	if(strcmp(tmp,"/supermegasecretcommandonlyforhomedepome646",true)==0) {
		GivePlayerWeapon(playerid, 10, 1);
		return 1; }



	/*
if(strcmp(tmp,"/sv",true)==0) {
tmp = strtok(cmdtext,idx);
if (isnull(tmp)) {
SendClientMessage(playerid,yellow," Использование: /sv <комментарий>");
return 1; }
GetPlayerPos(playerid, XXPLt,YYPLt,ZZPLt);

new File:f;
f = fopen("saveprot2.txt", io_append);
format(string,256, "// (%d) %s:", GetPlayerInterior(playerid), cmdtext[4]);
fwrite(f,string);
format(string,256, "\r\n");
fwrite(f,string);
format(string,256, "%f, %f, %f",XXPLt,YYPLt,ZZPLt);
fwrite(f,string);
format(string,256, "\r\n");
fwrite(f,string);
fwrite(f,string);
fclose(f);

SendClientMessage(playerid,yellow," Позиция сохранена.");
return 1; }


if(strcmp(tmp,"/sv1",true)==0) {
if(sv1or2==2) return 1;
sv1or2=2;
GetPlayerPos(playerid, XXPLt,YYPLt,ZZPLt);
format(string,256, "%f, %f, %f",XXPLt,YYPLt,ZZPLt);
printf(string);
SendClientMessage(playerid,yellow," Первая координата взята.");
return 1; }

if(strcmp(tmp,"/getint",true)==0) {
format(string,256, "%d",GetPlayerInterior(playerid));
SendClientMessage(playerid,yellow,string);
return 1; }

if(strcmp(tmp,"/sv2",true)==0) {
if(sv1or2!=2) return 1;
GetPlayerPos(playerid, XX2PLt,YY2PLt,ZZ2PLt);
format(string,256, "%f, %f, %f",XX2PLt,YY2PLt,ZZ2PLt);
printf(string);
SendClientMessage(playerid,yellow," Вторая координата взята. Для проверки пишем /pcheck");
return 1; }

if(strcmp(tmp,"/pcheck",true)==0) {
if(IsPlayerInArea(playerid, XXPLt,YYPLt,XX2PLt,YY2PLt))
SendClientMessage(playerid,green," Успешно, можно сохранять (/svf комментарий)");
else
SendClientMessage(playerid,red," Отказ.");
sv1or2=1;
return 1; }

if(strcmp(tmp,"/svf",true)==0) {
tmp = strtok(cmdtext,idx);
if (isnull(tmp)) {
SendClientMessage(playerid,yellow," Использование: /svf <комментарий>");
return 1; }
new File:f;
f = fopen("saveprot.txt", io_append);

format(string,256, "// (%d) %s:", GetPlayerInterior(playerid), cmdtext[5]);
fwrite(f,string);
format(string,256, "\r\n");
fwrite(f,string);
format(string,256, "%f, %f, %f, %f",XXPLt,YYPLt,XX2PLt,YY2PLt);
fwrite(f,string);
format(string,256, "\r\n");
fwrite(f,string);
fwrite(f,string);
fclose(f);

SendClientMessage(playerid,yellow," Сохранено. Для создания следующей пишем /sv1");
return 1; }
*/

	if(strcmp(tmp,"/buyinv",true)==0) {
		if (CCCash[playerid]<=2000000) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
			else SendClientMessage(playerid, yellow, " Not enough money.");
			return 1; }
		Givemoney(playerid,-2000000);
		InvAllow[playerid] = 1;
		if(Gang[playerid]==0){
			if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
			else format(string, sizeof(string), "%s00",playerColor2);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren);
		}else{
			format(string, sizeof(string), "%s00",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren); }
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы купили невидимость.");
		else SendClientMessage(playerid, yellow, " You are invisible now.");
		format(string,sizeof(string)," ([%d] %s) - Купил невидимость.",playerid,name);
		SendMessageToAdminEx(playerid,string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Купил невидимость.",EchoChan,playerid,name);
		IRC_SendRaw(EchoConnection2, string);
		return 1; }

	if(strcmp(tmp,"/inv",true)==0) {
		tmp = strtok(cmdtext, idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /INV <ON/OFF>");
			else SendClientMessage(playerid, yellow, " Usage: /INV <ON/OFF>");
			return 1; }

		if (InvAllow[playerid]==0) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы должны сначала купить невидимость ('/buyinv').");
			else SendClientMessage(playerid, yellow, " You need to buy invisible first ('/buyinv').");
			return 1; }

		if(strcmp(tmp,"on",true)==0) {
			if(Gang[playerid]==0){
				if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
				else format(string, sizeof(string), "%s00",playerColor2);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren);
			}else{
				format(string, sizeof(string), "%s00",playerGangColor[playerid]);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren); }
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невидимость включена.");
			else SendClientMessage(playerid, yellow, " Invisible ON.");
		}else{

			if(Gang[playerid]==0){
				if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
				else format(string, sizeof(string), "%s40",playerColor2);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren);
			}else{
				if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
				else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
				new Coloren=HexToInt(string);
				SetPlayerColor(playerid,Coloren); }

			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невидимость выключена.");
			else SendClientMessage(playerid, yellow, " Invisible OFF.");

		}

		return 1; }


	if(strcmp(tmp,"/savemoney",true)==0) {
		if (CCCash[playerid]<=3000000) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
			else SendClientMessage(playerid, yellow, " Not enough money.");
			return 1; }
		Givemoney(playerid,-3000000);
		Cheat[playerid] = 1;

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы купили сохранение денег! Теперь, если вас убьют, вы потеряете только $2000!");
		else SendClientMessage(playerid,yellow," You have bought preservation of money! Now, if you'll be killed, you'll lose only $2000!");

		format(string,sizeof(string)," ([%d] %s) - Купил сохранение денег.",playerid,name);
		SendMessageToAdminEx(playerid,string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Купил сохранение денег.",EchoChan,playerid,name);
		IRC_SendRaw(EchoConnection2, string);
		return 1; }

	/*
if(strcmp(tmp,"/speedon",true)==0) {
Speedo[playerid]=0;
if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Спидометр включен.");
else SendClientMessage(playerid, yellow, " Speedometer is on now.");
return 1; }

if(strcmp(tmp,"/speedoff",true)==0) {
Speedo[playerid]=1;
if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Спидометр выключен.");
else SendClientMessage(playerid, yellow, " Speedometer is off now.");
return 1; }
*/
	if(strcmp(tmp, "/parachute", true) == 0) {
		if (CCCash[playerid]<=500) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
			else SendClientMessage(playerid, yellow, " Not enough money.");
			return 1; }

		GivePlayerWeapon(playerid, 46, 1);
		Givemoney(playerid,-500);

		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Выдан парашют.");
		else SendClientMessage(playerid, yellow, " Parachute was given.");
		return 1; }

	if(strcmp(tmp, "/race", true) == 0) {
		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Гонки. Использование: /RACE CREATE, JOIN");
			else SendClientMessage(playerid, yellow, " Races. Usage: /RACE CREATE, JOIN");
			return 1; }

		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		if(strcmp(tmp, "create", true) == 0) {
			if (CCCash[playerid]<=20000) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
				else SendClientMessage(playerid, yellow, " Not enough money.");
				return 1; }

			if(!playerSpawned[playerid]) return 1;

			if(RaceStarting!=0) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Гонка уже началась.");
				else SendClientMessage(playerid, yellow, " The race has already begun.");
				return 1; }

			if(RaceCR!=0) {
				new player; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && RacePLCR[i]!=0) player=i;
				new name2[MAX_PLAYER_NAME]; GetPlayerName(player,name2,sizeof(name2));
				format(string,sizeof(string)," Панель создания уже используется by %s (%d).", name2, player);
				format(string2,sizeof(string2)," The creation panel is already in use by %s (%d).", name2, player);
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, string);
				else SendClientMessage(playerid, yellow, string2);
				return 1; }

			if(Jail[playerid] == 1) return 1;
			if(telep[playerid]==1) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
				else SendClientMessage(playerid, yellow, " Teleport already in process.");
				return 1; }


			if(IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
				GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
				SetTimerEx("RaceCreate",5000,0,"i",playerid);

				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
				else SendClientMessage(playerid, yellow, " System working... Please wait..");
			}else{
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть в транспорте.");
				else SendClientMessage(playerid, yellow, " You must be in vehicle."); }
			return 1; }


		if(strcmp(tmp, "join", true) == 0) {
			if(RaceStarting!=1) { Errorm(playerid); return 1; }
			if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть в транспорте.");
				else SendClientMessage(playerid, yellow, " You must be in vehicle.");
				return 1; }
			if(!playerSpawned[playerid]) return 1;
			if(Jail[playerid] == 1) return 1;
			if (CCCash[playerid]<=10000) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
				else SendClientMessage(playerid, yellow, " Not enough money.");
				return 1; }
			if(telep[playerid]==1) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
				else SendClientMessage(playerid, yellow, " Teleport already in process.");
				return 1; }

			GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
			SetTimerEx("RaceJoin",5000,0,"i",playerid);

			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
			else SendClientMessage(playerid, yellow, " System working... Please wait..");
			return 1; }

		return Errorm(playerid); }



	if(strcmp(tmp, "/dm", true) == 0) {
		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Дефматчи. Использование: /DM CREATE, JOIN");
			else SendClientMessage(playerid, yellow, " Deathmatches. Usage: /DM CREATE, JOIN");
			return 1; }

		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		if(strcmp(tmp, "create", true) == 0) {
			if (CCCash[playerid]<=20000) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
				else SendClientMessage(playerid, yellow, " Not enough money.");
				return 1; }

			if(!playerSpawned[playerid]) return 1;

			if(DMStarting!=0) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Дефматч уже начался.");
				else SendClientMessage(playerid, yellow, " The deathmatch has already begun.");
				return 1; }

			if(DMCR!=0) {
				new player; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && DMPLCR[i]!=0) player=i;
				new name2[MAX_PLAYER_NAME]; GetPlayerName(player,name2,sizeof(name2));
				format(string,sizeof(string)," Панель создания уже используется by %s (%d).", name2, player);
				format(string2,sizeof(string2)," The creation panel is already in use by %s (%d).", name2, player);
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, string);
				else SendClientMessage(playerid, yellow, string2);
				return 1; }

			if(Jail[playerid] == 1) return 1;
			if(telep[playerid]==1) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
				else SendClientMessage(playerid, yellow, " Teleport already in process.");
				return 1; }


			if(!IsPlayerInAnyVehicle(playerid)) {
				GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
				SetTimerEx("DMCreate",5000,0,"i",playerid);

				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
				else SendClientMessage(playerid, yellow, " System working... Please wait..");
			}else{
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не должны быть в транспорте.");
				else SendClientMessage(playerid, yellow, " You must not be in vehicle."); }
			return 1; }


		if(strcmp(tmp, "join", true) == 0) {
			if(DMStarting!=1) { Errorm(playerid); return 1; }
			if(IsPlayerInAnyVehicle(playerid)) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не должны быть в транспорте.");
				else SendClientMessage(playerid, yellow, " You must not be in vehicle.");
				return 1; }
			if(!playerSpawned[playerid]) return 1;
			if(Jail[playerid] == 1) return 1;
			if (CCCash[playerid]<=10000) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
				else SendClientMessage(playerid, yellow, " Not enough money.");
				return 1; }
			if(telep[playerid]==1) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
				else SendClientMessage(playerid, yellow, " Teleport already in process.");
				return 1; }

			GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
			SetTimerEx("DMJoin",5000,0,"i",playerid);

			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
			else SendClientMessage(playerid, yellow, " System working... Please wait..");
			return 1; }

		return Errorm(playerid); }


	if(strcmp(tmp, "/cb", true) == 0) {
		if (CCCash[playerid]<=5000) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
			else SendClientMessage(playerid, yellow, " Not enough money.");
			return 1; }

		if(Bombinst[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба уже установлена.");
			else SendClientMessage(playerid, yellow, " Bomb is already installed.");
			return 1; }

		if(GetPlayerInterior(playerid)!=0) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не можете устанавливать бомбы в помещениях.");
			else SendClientMessage(playerid, yellow, " You can't install bomb in interiors.");
			return 1; }

		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);

		telep[playerid]=1;
		SetTimerEx("CrBomb",5000,0,"ii",playerid,1);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1; }



	if(strcmp(tmp, "/db", true) == 0) {
		if (Xbombb[playerid] == 0 || Ybombb[playerid] == 0 || Zbombb[playerid] == 0) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба не установлена.");
			else SendClientMessage(playerid, yellow, " Bomb is not installed.");
			return 1; }

		CreateExplosion(Xbombb[playerid],Ybombb[playerid],Zbombb[playerid],6,1);
		CreateExplosion(Xbombb[playerid],Ybombb[playerid],Zbombb[playerid],7,1);

		Bombinst[playerid]=0;

		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба взорвана.");
		else SendClientMessage(playerid, yellow, " Bomb is blown up.");


		for (new v = 1; v < MAX_VEHICLES; v++) {
			new dis = GetDistanceBetweenVAP(playerid,v);
			if (dis < 5)
			SetVehicleHealth(v,0);
			else if (dis > 5 && dis < 10)
			SetVehicleHealth(v,0); }

		Xbombb[playerid] = 0;
		Ybombb[playerid] = 0;
		Zbombb[playerid] = 0;

		KillTimer(BombTimer[playerid][0]);
		DestroyObject(BombTimer[playerid][1]);
		return 1; }

	if(strcmp(tmp, "/ncb", true) == 0) {
		if (Xbombb[playerid] == 0 || Ybombb[playerid] == 0 || Zbombb[playerid] == 0) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба не установлена.");
			else SendClientMessage(playerid, yellow, " Bomb is not installed.");
			return 1; }

		Bombinst[playerid]=0;

		Xbombb[playerid] = 0;
		Ybombb[playerid] = 0;
		Zbombb[playerid] = 0;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба деактивирована.");
		else SendClientMessage(playerid, yellow, " Bomb is deactivated.");

		KillTimer(BombTimer[playerid][0]);
		DestroyObject(BombTimer[playerid][1]);

		return 1; }

	if(strcmp(tmp, "/cbv", true) == 0) {
		if (CCCash[playerid]<=5000) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
			else SendClientMessage(playerid, yellow, " Not enough money.");
			return 1; }
		if(!IsPlayerInAnyVehicle(playerid)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы должны быть в машине.");
			else SendClientMessage(playerid, yellow, " You need be in vehicle.");
			return 1; }
		if(Bombinst[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба уже установлена.");
			else SendClientMessage(playerid, yellow, " Bomb is already installed.");
			return 1; }

		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);

		telep[playerid]=1;
		SetTimerEx("CrBomb",5000,0,"ii",playerid,2);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1; }

	if(strcmp(tmp, "/dbv", true) == 0) {
		if(curvpld[playerid] == 999) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба не установлена.");
			else SendClientMessage(playerid, yellow, " Bomb is not installed.");
			return 1; }

		GetVehiclePos(curvpld[playerid],X[playerid],Y[playerid],Z[playerid]);
		SetVehicleHealth(curvpld[playerid],0);
		CreateExplosion(X[playerid],Y[playerid],Z[playerid],6,2);
		CreateExplosion(X[playerid],Y[playerid],Z[playerid],7,2);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба взорвана.");
		else SendClientMessage(playerid, yellow, " Bomb is blown up.");
		Bombinst[playerid]=0;
		bombd[curvpld[playerid]] = 0;
		curvpld[playerid] = 999;

		for (new v = 1; v < MAX_VEHICLES; v++) {
			new dis = GetDistanceBetweenVehicles(curvpld[playerid],v);
			if (dis < 5) SetVehicleHealth(v,0);
			else if (dis > 5 && dis < 10) SetVehicleHealth(v,0); }
		return 1; }

	if(strcmp(tmp, "/ncbv", true) == 0) {
		new v = curvpld[playerid];
		if (curvpld[playerid] == 999) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба не установлена.");
			else SendClientMessage(playerid, yellow, " Bomb is not installed.");
			return 1; }

		Bombinst[playerid]=0;
		bombd[v] = 0;
		curvpld[playerid] = 999;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба деактивирована.");
		else SendClientMessage(playerid, yellow, " Bomb is deactivated.");

		return 1; }

	if(strcmp(tmp,"/global",true)==0) {

		if(Lang[playerid]==0) format(string,sizeof(string)," LV Maximum v%s | Глобальная статистика:", Version);
		else format(string,sizeof(string)," LV Maximum v%s | Global stats:", Version);
		SendClientMessage(playerid, green , string);


		if(Lang[playerid]==0) format(string,sizeof(string)," Сервер выдал денег: %d миллионов || Совершено убийств: %d",GlobalCash1,GlobalKills);
		else format(string,sizeof(string)," Money on the server: %d millions || Global kills: %d",GlobalCash1,GlobalKills);
		SendClientMessage(playerid, yellow , string);

		if(Lang[playerid]==0) format(string,sizeof(string)," Сыграно гонок: %d || Сыграно дефматчей: %d",GlobalRace,GlobalDM);
		else format(string,sizeof(string)," Played races: %d || Played deathmatches: %d",GlobalRace,GlobalDM);
		SendClientMessage(playerid, yellow , string);

		if(Lang[playerid]==0) format(string,sizeof(string)," На сервере зарегистрировано %d игроков.",GlobalPlayers);
		else format(string,sizeof(string)," Server has %d registered players.",GlobalPlayers);
		SendClientMessage(playerid, yellow , string);

		new stringt[256];
		new stringt2[256];
		new days,hours,minutes;
		if(mins>60) {
			hours = (mins/60);
			minutes = mins-(hours*60);
			if(hours>23) {
				days = (hours/24);
				hours = hours-(days*24);
			}else { days = 0; }
		}else{
			minutes = mins;
			hours = 0;
			days = 0; }
		format(stringt, sizeof(stringt), "%d дней, %d часов, %d минут", days, hours, minutes);
		format(stringt2, sizeof(stringt2), "%d days, %d hours, %d minutes", days, hours, minutes);

		if(Lang[playerid]==0) format(string,sizeof(string)," С момента последнего перезапуска прошло %s.",stringt);
		else format(string,sizeof(string)," Time since the last server restart: %s.",stringt2);
		SendClientMessage(playerid, yellow , string);

		return 1;
	}


	if(strcmp(tmp,"/gangs",true)==0) {

		if(Lang[playerid]==0) format(string,sizeof(string)," LV Maximum v%s | На сервере находятся представители банд:", Version);
		else format(string,sizeof(string)," LV Maximum v%s | On a server there are representatives of gangs:", Version);
		SendClientMessage(playerid, green , string);

		new ttem=0;
		new Temp3;

		format(string,sizeof(string)," -");
		for(new j = 0; j< 15; j++) tempt[j]="-";
		print("test");
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
		if(Gang[i]!=0) {
			new Temp2;
			if(Temp3<15) {
				for(new j = 0; j< 15; j++) if(strcmp(PLGangName[i], tempt[j], true) == 0) Temp2++;
				if(Temp2==0) {
					if(ttem==0) format(string,sizeof(string)," %s",PLGangName[i]);
					else format(string,sizeof(string),"%s, %s",string,PLGangName[i]);
					ttem=1;
					tempt[Temp3]=PLGangName[i];
					Temp3++;
				}}}

		SendClientMessage(playerid, yellow ,string);
		return 1;
	}


	if(strcmp(tmp,"/gang",true)==0) {
		if(Registered[playerid]==0) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Данная функция недоступна для незарегистрированных пользователей.");
			else SendClientMessage(playerid, yellow, " This feature is not available for unregistered users.");
			return 1; }
		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Банды. Использование: /GANG CREATE, DELETE, INVITE, COLOR, KICK, ADMIN, UNTEST, JOIN, QUIT, INFO, SETSPAWN");
			else SendClientMessage(playerid, yellow, " Gangs. Usage: /GANG CREATE, DELETE, INVITE, COLOR, KICK, ADMIN, UNTEST, JOIN, QUIT, INFO, SETSPAWN");
			return 1; }

		if(strcmp(tmp, "info", true) == 0){
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG INFO <ИМЯ>");
				else SendClientMessage(playerid, yellow, " Usage: /GANG INFO <NAME>");
				return 1; }

			if(strlen(tmp) >= 5) return 1;
			if(strlen(tmp) <= 1) return 1;

			new TTTemp;
			for(new i=0; i<strlen(tmp); i++) {
				TTTemp=0;
				if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
				if (tmp[i] > 96 && tmp[i] < 123) TTTemp=1;
				if (tmp[i] > 64 && tmp[i] < 91) TTTemp=1;
				if (tmp[i] == 95) TTTemp=1;
				if (tmp[i] == 36) TTTemp=1;
				if (tmp[i] == 91) TTTemp=1;
				if (tmp[i] == 93) TTTemp=1;
				if(TTTemp != 1){
					if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Запрещённые символы в названии!");
					else SendClientMessage(playerid, yellow, " Forbidden symbols in the name!");
					return 1; }
			}

			new file[256]; format(file,sizeof(file),"LVM/gangs/%s.ini",tmp);
			if(!dini_Exists(file)) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Такая банда не существует.");
				else SendClientMessage(playerid, yellow, " Such gang does not exists.");
				return 1; }

			if(Lang[playerid]==0) format(string,sizeof(string)," LV Maximum v%s | Банда '%s':", Version, tmp);
			else format(string,sizeof(string)," LV Maximum v%s | Gang '%s':", Version, tmp);
			SendClientMessage(playerid, green , string);

			if(Lang[playerid]==0) format(string,sizeof(string)," Владелец: %s || Админ: %s",dini_Get(file,"leader"),dini_Get(file,"admin"));
			else format(string,sizeof(string)," Owner: %s || Admin: %s",dini_Get(file,"leader"),dini_Get(file,"admin"));
			SendClientMessage(playerid, yellow , string);

			if(Lang[playerid]==0) format(string,sizeof(string)," Игроков: %d || Денег в банке: $%d",dini_Int(file,"members"),dini_Int(file,"bank"));
			else format(string,sizeof(string)," Players: %d || Money in bank: $%d",dini_Int(file,"members"),dini_Int(file,"bank"));
			SendClientMessage(playerid, yellow , string);

			new scoresp = dini_Int(file,"kills") - dini_Int(file,"deaths");
			new Float:killzp, Float:deathzp, Float:ratiop;
			killzp = dini_Int(file,"kills"); deathzp = dini_Int(file,"deaths");
			if(deathzp!=0) ratiop = killzp / deathzp; else ratiop=0;

			if(Lang[playerid]==0) format(string,sizeof(string)," Убийства: %d || Смерти: %d || Очки: %d || Ратио: %0.2f",dini_Int(file,"kills"),dini_Int(file,"deaths"),scoresp,ratiop);
			else format(string,sizeof(string)," Kills: %d || Deaths: %d || Scores: %d || Ratio: %0.2f",dini_Int(file,"members"),dini_Int(file,"bank"),scoresp,ratiop);
			SendClientMessage(playerid, yellow , string);
			return 1; }

		if(strcmp(tmp, "members", true) == 0){
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp) && Gang[playerid]==0) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG MEMBERS <ИМЯ>");
				else SendClientMessage(playerid, yellow, " Usage: /GANG MEMBERS <NAME>");
				return 1; }

			if (isnull(tmp) && Gang[playerid]!=0) tmp=PLGangName[playerid];

			if(strlen(tmp) >= 5) return 1;
			if(strlen(tmp) <= 1) return 1;

			new TTTemp;
			for(new i=0; i<strlen(tmp); i++) {
				TTTemp=0;
				if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
				if (tmp[i] > 96 && tmp[i] < 123) TTTemp=1;
				if (tmp[i] > 64 && tmp[i] < 91) TTTemp=1;
				if (tmp[i] == 95) TTTemp=1;
				if (tmp[i] == 36) TTTemp=1;
				if (tmp[i] == 91) TTTemp=1;
				if (tmp[i] == 93) TTTemp=1;
				if(TTTemp != 1){
					if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Запрещённые символы в названии!");
					else SendClientMessage(playerid, yellow, " Forbidden symbols in the name!");
					return 1; }
			}

			new file[256]; format(file,sizeof(file),"LVM/gangs/%s.ini",tmp);
			if(!dini_Exists(file)) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Такая банда не существует.");
				else SendClientMessage(playerid, yellow, " Such gang does not exists.");
				return 1; }

			if(Lang[playerid]==0) format(string,sizeof(string)," LV Maximum v%s | Игроки в банде '%s':", Version, tmp);
			else format(string,sizeof(string)," LV Maximum v%s | Players in gang '%s':", Version, tmp);
			SendClientMessage(playerid, green , string);

			new t;
			for(new i = 0; i < MAX_GANG_MEMBERS; i++) {
				format(string2, sizeof(string2),"player_%d",i);
				if(strlen(dini_Get(file,string2))!=1 && strlen(dini_Get(file,string2))!=0) { t++;
					if(t==1) format(string,sizeof(string)," %s",dini_Get(file,string2));
					else format(string,sizeof(string),"%s, %s",string,dini_Get(file,string2)); }
				if(t==10) { SendClientMessage(playerid, yellow , string); format(string,sizeof(string)," "); t=0; } }
			if(strlen(string)!=0) SendClientMessage(playerid, yellow , string);
			return 1; }


		if(strcmp(tmp, "create", true) == 0){
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG CREATE <ИМЯ>");
				else SendClientMessage(playerid, yellow, " Usage: /GANG CREATE <NAME>");
				return 1; }
			if(Gang[playerid]!=0) return 1;

			if(strlen(tmp) >= 5) return 1;
			if(strlen(tmp) <= 1) return 1;

			new TTTemp;
			for(new i=0; i<strlen(tmp); i++) {
				TTTemp=0;
				if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
				if (tmp[i] > 96 && tmp[i] < 123) TTTemp=1;
				if (tmp[i] > 64 && tmp[i] < 91) TTTemp=1;
				if (tmp[i] == 95) TTTemp=1;
				if (tmp[i] == 36) TTTemp=1;
				if (tmp[i] == 91) TTTemp=1;
				if (tmp[i] == 93) TTTemp=1;
				if(TTTemp != 1){
					if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Запрещённые символы в названии!");
					else SendClientMessage(playerid, yellow, " Forbidden symbols in the name!");
					return 1; }
			}

			if(CCCash[playerid]<=GANG_COST){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
				else SendClientMessage(playerid, yellow, " Not enough money.");
				return 1; }

			if(Sponsor[playerid]==0)
			if(Kills[playerid]<500){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вам нужно иметь 500 килов для создания собственной банды.");
				else SendClientMessage(playerid, yellow, " You need have 500 kills to create own gang.");
				return 1; }

			if(Gwantmembers!=0) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Банда уже создаётся!");
				else SendClientMessage(playerid, yellow, " Other gang is creating now!");
				return 1; }

			new file[256]; format(file,sizeof(file),"LVM/gangs/%s.ini", tmp);
			if(dini_Exists(file)) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Такая банда уже существует.");
				else SendClientMessage(playerid, yellow, " Such gang already exists.");
				return 1; }

			if(GangCreator[playerid]!=0) return 1;

			Gwantmembers++;
			format(Gnowgang,sizeof(Gnowgang),"%s", tmp);

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) if(MTsys[i] == 0) {
				if(Lang[i]==0) format(string, sizeof(string), " *** %s объявляет набор в банду '%s', чтобы присоединиться пишите /gang crjoin.", name,Gnowgang);
				else format(string, sizeof(string), " *** %s announces a set in a gang '%s', to join type /gang crjoin.", name,Gnowgang);
				SendClientMessage(i, COLOUR_LIGHTBLUE, string); }

			format(string, sizeof(string),"7*** %s объявляет набор в банду '%s'.", name,Gnowgang);
			IRC_Say(EchoConnection2, EchoChan, string);

			GangCreator[playerid]=1;

			SetTimerEx("GangCr", 60000, 0, "i", playerid);
			return 1; }


		if(strcmp(tmp, "crjoin", true) == 0){
			if(Gwantmembers==0) return 1;
			if(Gang[playerid]!=0) return 1;

			if(Gwantmembers==5) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Набор в данную банду окончен, дальнейшее присоединение по приглашениям.");
				else SendClientMessage(playerid, yellow, " The set in the given gang is ended, the further joining under invitations.");
				return 1; }

			if(GangCreator[playerid]==1) return 1;

			Gwantmembers++;
			GangCreator[playerid]=1;

			if(Gwantmembers==2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)) if(MTsys[i] == 0) {
					if(Lang[i]==0) format(string, sizeof(string), " *** %s присоединился к создаваемой банде '%s', чтобы присоединиться пишите /gang crjoin.", name,Gnowgang);
					else format(string, sizeof(string), " *** %s has joined a gang '%s', to join type /gang crjoin.", name,Gnowgang);
					SendClientMessage(i, COLOUR_LIGHTBLUE, string); }
				Ggangtplid1=playerid; }

			if(Gwantmembers==3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)) if(MTsys[i] == 0) {
					if(Lang[i]==0) format(string, sizeof(string), " *** %s присоединился к создаваемой банде '%s', чтобы присоединиться пишите /gang crjoin.", name,Gnowgang);
					else format(string, sizeof(string), " *** %s has joined a gang '%s', to join type /gang crjoin.", name,Gnowgang);
					SendClientMessage(i, COLOUR_LIGHTBLUE, string); }
				Ggangtplid2=playerid; }

			if(Gwantmembers==4) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)) if(MTsys[i] == 0) {
					if(Lang[i]==0) format(string, sizeof(string), " *** %s присоединился к создаваемой банде '%s', чтобы присоединиться пишите /gang crjoin.", name,Gnowgang);
					else format(string, sizeof(string), " *** %s has joined a gang '%s', to join type /gang crjoin.", name,Gnowgang);
					SendClientMessage(i, COLOUR_LIGHTBLUE, string); }
				Ggangtplid3=playerid; }

			if(Gwantmembers==5) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)) if(MTsys[i] == 0) {
					if(Lang[i]==0) format(string, sizeof(string), " *** %s присоединился к создаваемой банде '%s'. Набор окончен, дальнейшее присоединение по приглашениям.", name,Gnowgang);
					else format(string, sizeof(string), " *** %s has joined a gang '%s'. The set is ended, the further joining under invitations.", name,Gnowgang);
					SendClientMessage(i, COLOUR_LIGHTBLUE, string); }
				Ggangtplid4=playerid; }
			return 1; }

		if(strcmp(tmp, "join", true) == 0){
			if(Gang[playerid]!=0) return 1;

			if(strcmp(Ganginv[playerid], "None", true) == 0) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы не приглашены.");
				else SendClientMessage(playerid, yellow, " You are not invited.");
				return 1; }

			new file[256]; format(file,sizeof(file),"LVM/gangs/%s.ini",Ganginv[playerid]);
			if(dini_Int(file,"members")>=MAX_GANG_MEMBERS) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," В данной банде нет свободных мест.");
				else SendClientMessage(playerid, yellow, " This gang is full.");
				return 1; }


			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
			if(Gang[i]!=0) if(strcmp(PLGangName[i], Ganginv[playerid], true) == 0) {
				if(Lang[i]==0) format(string, sizeof(string)," %s присоединился к вашей банде.", name);
				else format(string, sizeof(string)," %s has joined your gang.", name);
				SendClientMessage(i, yellow, string); }

			PLGangName[playerid]=Ganginv[playerid];

			SetTimerEx("SomeTem", 50, 0, "i", playerid);
			return 1; }

		if(strcmp(tmp, "invite", true) == 0){
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG INVITE <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /GANG INVITE <ID>");
				return 1; }
			if(Gang[playerid]==0) return 1;
			if(strlen(tmp) > 9) return 1;

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			if(Gang[playerid]<2) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть Админом банды, чтобы посылать приглашения.");
				else SendClientMessage(playerid, yellow," You should be gang Admin to send invitations.");
				return 1; }

			new namew[256]; GetPlayerName(plid,namew,sizeof(namew));

			if(Lang[playerid]==0) format(string, sizeof(string)," Вы послали приглашение к %s.", namew);
			else format(string, sizeof(string)," You have sent the invitation to %s.", namew);
			SendClientMessage(playerid, yellow, string);


			if(Lang[plid]==0) format(string, sizeof(string)," Вы получили приглашение для вступления в банду '%s'.",PLGangName[playerid]);
			else format(string, sizeof(string)," You have received the invitation for joining gang '%s'.",PLGangName[playerid]);
			SendClientMessage(plid, yellow, string);

			Ganginv[plid]=PLGangName[playerid];
			return 1; }

		if(strcmp(tmp, "kick", true) == 0){
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG KICK <NAME/ID>");
				else SendClientMessage(playerid, yellow, " Usage: /GANG KICK <NAME/ID>");
				return 1; }
			if(Gang[playerid]==0) return 1;
			if(strlen(tmp) > 20) return 1;

			if(Gang[playerid]<2) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть Админом банды, чтобы отчислять игроков.");
				else SendClientMessage(playerid, yellow," You should be gang Admin to deduct players.");
				return 1; }

			if(!IsNumeric(tmp)) {
				new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
				if (!dini_Exists(PF)) {
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
					else SendClientMessage(playerid, yellow," Invalid name.");
					return 1; }

				if(dini_Int(PF,"gang")==0 || strcmp(PLGangName[playerid], dini_Get(PF,"gangname"), true) != 0) {
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Игрок не в вашей банде.");
					else SendClientMessage(playerid, yellow," Player not in your gang.");
					return 1; }

				if(dini_Int(PF,"gang")==3) {
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не можете выгнать владельца банды.");
					else SendClientMessage(playerid, yellow," You can't kick gang owner.");
					return 1; }

				new SplayerGang[256]; format(SplayerGang,sizeof(SplayerGang),"LVM/gangs/%s.ini",dini_Get(PF,"gangname"));
				if(dini_Int(PF,"gang")==2) dini_Set(SplayerGang,"admin","-");
				dini_IntSet(PF,"gang",0);
				dini_Set(PF,"gangname","None");
				dini_IntSet(PF,"gangtesting",0);
				dini_IntSet(SplayerGang,"members",(dini_Int(SplayerGang,"members")-1));
				for(new i = 0; i < MAX_GANG_MEMBERS; i++) {
					format(string, sizeof(string),"player_%d",i);
					if(strlen(dini_Get(SplayerGang,string))!=0) if(strcmp(dini_Get(SplayerGang,string),tmp,true)==0) dini_IntSet(SplayerGang,string,0); }


				if(Lang[playerid]==0) format(string, sizeof(string)," Вы отчислили игрока %s.", tmp);
				else format(string, sizeof(string)," You have deducted the player %s.", tmp);
				SendClientMessage(playerid, yellow, string);

				return 1; }


			new plid=strval(tmp);

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			if(Gang[plid]==3) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не можете выгнать владельца банды.");
				else SendClientMessage(playerid, yellow," You can't kick gang owner.");
				return 1; }

			if(Gang[plid]==0 || strcmp(PLGangName[playerid], PLGangName[plid], true) != 0) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Игрок не в вашей банде.");
				else SendClientMessage(playerid, yellow," Player not in your gang.");
				return 1; }

			new namew[256]; GetPlayerName(plid,namew,sizeof(namew));

			if(Lang[playerid]==0) format(string, sizeof(string)," Вы отчислили игрока %s.", namew);
			else format(string, sizeof(string)," You have deducted the player %s.", namew);
			SendClientMessage(playerid, yellow, string);

			if(Lang[plid]==0) format(string, sizeof(string)," Вы были отчислены из банды '%s'.",PLGangName[playerid]);
			else format(string, sizeof(string)," You have been deducted from gang '%s'.",PLGangName[playerid]);
			SendClientMessage(plid, yellow, string);

			SetTimerEx("SomeTemL", 50, 0, "i", plid);
			return 1; }


		if(strcmp(tmp, "untest", true) == 0){
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG UNTEST <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /GANG UNTEST <ID>");
				return 1; }
			if(Gang[playerid]==0) return 1;
			if(strlen(tmp) > 9) return 1;

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(plid==playerid) return 1;

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			if(Gang[playerid]<2) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть Админом банды, чтобы дать статус участника.");
				else SendClientMessage(playerid, yellow," You should be gang Admin to set member position.");
				return 1; }

			if(Gang[plid]==0 || strcmp(PLGangName[playerid], PLGangName[plid], true) != 0) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Игрок не в вашей банде.");
				else SendClientMessage(playerid, yellow," Player not in your gang.");
				return 1; }

			if(GangTesting[plid]!=0) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Игрок не находится на 'тестировании' в банде.");
				else SendClientMessage(playerid, yellow, " Player has not 'testing' position in gang.");
				return 1; }

			new namew[256]; GetPlayerName(plid,namew,sizeof(namew));

			if(Lang[playerid]==0) format(string, sizeof(string)," Игрок %s теперь полноправный член банды.", namew);
			else format(string, sizeof(string)," Player %s is now gang member.", namew);
			SendClientMessage(playerid, yellow, string);

			if(Lang[plid]==0) format(string, sizeof(string)," Вы получили статус игрока в банде '%s'.",PLGangName[playerid]);
			else format(string, sizeof(string)," You now member of gang '%s'.",PLGangName[playerid]);
			SendClientMessage(plid, yellow, string);

			SetTimerEx("SomeTemUntest", 50, 0, "i", plid);

			return 1; }


		if(strcmp(tmp, "setspawn", true) == 0){
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG SETSPAWN <ON/OFF>");
				else SendClientMessage(playerid, yellow, " Usage: /GANG SETSPAWN <ON/OFF>");
				return 1; }

			if (Sponsor[playerid]==0) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Данная функция доступна только спонсорским аккаунтам.");
				else SendClientMessage(playerid, yellow, " This function available only at sponsorship accounts.");
				return 1; }

			if(Gang[playerid]==0) return 1;
			if(strlen(tmp) > 4) return 1;
			if(Gang[playerid]<3) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть Владельцем банды, чтобы назначить Админа.");
				else SendClientMessage(playerid, yellow," You should be gang Owner to appoint Admin.");
				return 1; }

			if(strcmp(tmp, "on", true) == 0){

				if(GetPlayerInterior(playerid)!=0) {
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Спаун банды можно назначить только на улице.");
					else SendClientMessage(playerid, yellow," You can set gang spawn only on the street.");
					return 1; }

				GetPlayerPos(playerid, Xgspawn[playerid], Ygspawn[playerid], Zgspawn[playerid]);
				if(Lang[playerid]==0) format(string, sizeof(string)," Спаун игроков банды назначен.");
				else format(string, sizeof(string)," Gang spawn position was set.");
				SendClientMessage(playerid, yellow, string);
				SetTimerEx("SomeTemSetSpawnOn", 50, 0, "i", playerid);
			}else{
				if(Lang[playerid]==0) format(string, sizeof(string)," Спаун игроков банды отключен.");
				else format(string, sizeof(string)," Gang spawn position was disabled.");
				SendClientMessage(playerid, yellow, string);
				SetTimerEx("SomeTemSetSpawnOff", 50, 0, "i", playerid); }

			return 1; }


		if(strcmp(tmp, "admin", true) == 0){
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG ADMIN <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /GANG ADMIN <ID>");
				return 1; }
			if(Gang[playerid]==0) return 1;
			if(strlen(tmp) > 9) return 1;

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(plid==playerid) return 1;

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			if(Gang[playerid]<3) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть Владельцем банды, чтобы назначить Админа.");
				else SendClientMessage(playerid, yellow," You should be gang Owner to appoint Admin.");
				return 1; }

			if(Gang[plid]==0 || strcmp(PLGangName[playerid], PLGangName[plid], true) != 0) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Игрок не в вашей банде.");
				else SendClientMessage(playerid, yellow," Player not in your gang.");
				return 1; }

			if(GangTesting[plid]==0) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Игрок находится на 'тестировании' в банде.");
				else SendClientMessage(playerid, yellow, " Player has 'testing' position in gang.");
				return 1; }

			new namew[256]; GetPlayerName(plid,namew,sizeof(namew));

			if(Lang[playerid]==0) format(string, sizeof(string)," Вы назначили Админом игрока %s.", namew);
			else format(string, sizeof(string)," You have moved player %s to Admin position.", namew);
			SendClientMessage(playerid, yellow, string);

			if(Lang[plid]==0) format(string, sizeof(string)," Вы были назначены Админом банды '%s'.",PLGangName[playerid]);
			else format(string, sizeof(string)," You have been moved to Admin position of gang '%s'.",PLGangName[playerid]);
			SendClientMessage(plid, yellow, string);

			SetTimerEx("SomeTemAdm", 50, 0, "i", plid);
			return 1; }

		if(strcmp(tmp, "quit", true) == 0){
			if(Gang[playerid]==0) return 1;
			if(Gang[playerid]==3) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не можете покинуть эту банду, т.к. она ваша. Уничтожить свою банду можно с '/gang delete'.");
				else SendClientMessage(playerid, yellow, " You cannot leave this gang, since it is yours. To remove gang type '/gang delete'.");
				return 1; }

			SetTimerEx("SomeTemL", 50, 0, "i", playerid);
			return 1; }

		if(strcmp(tmp, "color", true) == 0){
			if(Gang[playerid]==0) return 1;
			if(Gang[playerid]<2) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть Админом банды, чтобы менять её цвет.");
				else SendClientMessage(playerid, yellow," You should be gang Admin to change its colour.");
				return 1; }

			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG COLOR <HEX> (пример 0x0F0567; запрещённые цвета: системные, цвет банды VIP)");
				else SendClientMessage(playerid, yellow, " Usage: /GANG COLOR <HEX> (example 0x0F0567; forbidden colours: system, colour of a VIP gang)");
				return 1; }

			if (strlen(tmp)!=8) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Неверный hex цвет.");
				else SendClientMessage(playerid, yellow, " Invalid hex colour.");
				return 1; }

			SetTimerEx("SomeTemCOLORSET", 50, 0, "is", playerid,tmp);
			return 1; }

		if(strcmp(tmp, "admcolor", true) == 0){
			if(Alevel[playerid]<1) return 1;

			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GANG ADMCOLOR <NAME>");
				else SendClientMessage(playerid, yellow, " Usage: /GANG ADMCOLOR <NAME>");
				return 1; }

			new Pnowgang[256]; format(Pnowgang,sizeof(Pnowgang),"LVM/gangs/%s.ini", tmp);
			if (!dini_Exists(Pnowgang)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Такая банда не существует.");
				else SendClientMessage(playerid, yellow, " Such gang does not exist.");
				return 1; }

			dini_Set(Pnowgang,"color","0xFFFFFF");

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
			if(Gang[i]!=0) if(strcmp(PLGangName[i], tmp, true) == 0) {
				if(Color[i]==0) format(string, sizeof(string), "0xFFFFFFFF");
				else format(string, sizeof(string), "0xFFFFFF60");
				playerGangColor[i]=string;
				new Coloren=HexToInt(string);
				SetPlayerColor(i,Coloren); }

			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Цвет изменён.");
			else SendClientMessage(playerid, yellow," Color was changed.");
			return 1; }


		if(strcmp(tmp, "delete", true) == 0){
			if(Gang[playerid]==0) return 1;
			if(Gang[playerid]<3) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть Владельцем банды, чтобы удалять её.");
				else SendClientMessage(playerid, yellow," You should be gang Owner to delete it.");
				return 1; }
			SendClientMessage(playerid, yellow, " Вы точно хотите полностью удалить свою банду?");
			SendClientMessage(playerid, yellow, " Пропадут деньги банды в банке, деньги, затраченные на её создание, статистика.");
			SendClientMessage(playerid, yellow, " Полное удаление командой '/gang rdelete'.");
			return 1; }

		if(strcmp(tmp, "rdelete", true) == 0){
			if(Gang[playerid]==0) return 1;
			if(Gang[playerid]<3) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть Владельцем банды, чтобы удалять её.");
				else SendClientMessage(playerid, yellow," You should be gang Owner to delete it.");
				return 1; }

			if(strcmp(GangDelName, "None", true) != 0) return 1;

			format(GangDelName,sizeof(GangDelName),PLGangName[playerid]);

			SetTimer("SomeTemDel", 9000, 0);

			format(string,sizeof(string),"%s", PLGangName[playerid]);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
			if(Gang[i]!=0) if(strcmp(PLGangName[i], string, true) == 0)
			if(Lang[i]==0) SendClientMessage(i, green, " Ваша банда полностью удалена.");
			else SendClientMessage(i, green, " Your gang is completely removed.");

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
			if(Gang[i]!=0) if(strcmp(PLGangName[i], PLGangName[playerid], true) == 0)
			if(i!=playerid) SetTimerEx("SomeTemL", 500, 0, "i", i);
			else SetTimerEx("SomeTemL", 5000, 0, "i", i);
			return 1; }

		if(strcmp(tmp, "admdel", true) == 0){
			if(Alevel[playerid]<2) return 1;
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /ADMDEL <NAME>");
				else SendClientMessage(playerid, yellow, " Usage: /ADMDEL <NAME>");
				return 1; }

			if(strcmp(GangDelName, "None", true) != 0) return 1;

			new file[256]; format(file,sizeof(file),"LVM/gangs/%s.ini",tmp);

			if (!dini_Exists(file)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Такая банда не существует.");
				else SendClientMessage(playerid, yellow, " Such gang does not exist.");
				return 1; }

			format(GangDelName,sizeof(GangDelName),tmp);

			SetTimer("SomeTemDel", 9000, 0);

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
			if(Gang[i]!=0) if(strcmp(PLGangName[i], tmp, true) == 0) {
				if(Lang[i]==0) SendClientMessage(i, green, " Ваша банда полностью удалена.");
				else SendClientMessage(i, green, " Your gang is completely removed."); }

			if(Lang[playerid]==0) SendClientMessage(playerid, green, " Банда полностью удалена.");
			else SendClientMessage(playerid, green, " Gang is completely removed.");

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
			if(Gang[i]!=0) if(strcmp(PLGangName[i], tmp, true) == 0)
			SetTimerEx("SomeTemL", 500, 0, "i", i);
			return 1; }


		return Errorm(playerid); }

	if(strcmp(tmp,"/buy",true)==0) {

		if(Registered[playerid]==0) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Данная функция недоступна для незарегистрированных пользователей.");
			else SendClientMessage(playerid, yellow, " This feature is not available for unregistered users.");
			return 1; }

		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));

		for(new i = 1; i <= 14; i++)
		if(ttemper==i || ttemper==17)
		if(i!=3 && i!=9)
		if(Lang[playerid]==0) {

			if(Biz[i]==0) {
				if(CCCash[playerid]>BizCost[i]){
					SendClientMessage(playerid, yellow, " Вы купили собственность на 24 часа, привлекайте клиентов для прибыли.");
					Biz[i]=1; BizOwner[i]=name; BizTryes[i]=2; BizTime[i]=1440;  BizMoney[i]=0; Givemoney(playerid, (-BizCost[i]));
				}else SendClientMessage(playerid, yellow, " Недостаточно денег.");
			}else{
				if(strcmp(name,BizOwner[i],true)==0) { SendClientMessage(playerid, yellow, " Это ваш бизнес."); return 1; }
				if(CCCash[playerid]>(BizTryes[i]*BizCost[i])){
					SendClientMessage(playerid, yellow, " Вы перекупили собственность на 24 часа, привлекайте клиентов для прибыли.");
					Givemoney(playerid, (-(BizTryes[i]*BizCost[i])));
					BizMoney[i]+=(BizTryes[i]*BizCost[i])-BizCost[i];

					new namew[MAX_PLAYER_NAME];
					new id=999;
					for(new b = 0; b < MAX_PLAYERS; b++)
					if(IsPlayerConnected(b)) {
						GetPlayerName(b,namew,sizeof(namew));
						if(strcmp(namew,BizOwner[i],true)==0) id=b; }
					if(id!=999) {
						format(string, sizeof(string), " Доход от собственности: $%d.",BizMoney[i]);
						SendClientMessage(id, yellow, string);
						Givemoney(id, BizMoney[i]);
					}else{
						new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", BizOwner[i]);
						dini_IntSet(PF, "bizmoney", BizMoney[i]); }

					BizOwner[i]=name; BizTryes[i]++; BizTime[i]=1440;
					BizMoney[i]=0;
				}else SendClientMessage(playerid, yellow, " Недостаточно денег.");
			}

		}else{

			if(Biz[i]==0) {
				if(CCCash[playerid]>BizCost[i]){
					SendClientMessage(playerid, yellow, " You now the property's owner for 24 hours, involve clients for profit.");
					Biz[i]=1; BizOwner[i]=name; BizTryes[i]=2; BizTime[i]=1440;  BizMoney[i]=0; Givemoney(playerid, (-BizCost[i]));
				}else SendClientMessage(playerid, yellow, " Not enough money.");
			}else{
				if(strcmp(name,BizOwner[i],true)==0) { SendClientMessage(playerid, yellow, " It is your business."); return 1; }
				if(CCCash[playerid]>(BizTryes[i]*BizCost[i])){
					SendClientMessage(playerid, yellow, " You now the property's owner for 24 hours, involve clients for profit.");
					Givemoney(playerid, (-(BizTryes[i]*BizCost[i])));
					BizMoney[i]+=(BizTryes[i]*BizCost[i])-BizCost[i];

					new namew[MAX_PLAYER_NAME];
					new id=999;
					for(new b = 0; b < MAX_PLAYERS; b++)
					if(IsPlayerConnected(b)) {
						GetPlayerName(b,namew,sizeof(namew));
						if(strcmp(namew,BizOwner[i],true)==0) id=b; }
					if(id!=999) {
						format(string, sizeof(string), " Money from property: $%d.",BizMoney[i]);
						SendClientMessage(id, yellow, string);
						Givemoney(id, BizMoney[i]);
					}else{
						new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", BizOwner[i]);
						dini_IntSet(PF, "bizmoney", BizMoney[i]); }

					BizOwner[i]=name; BizTryes[i]++; BizTime[i]=1440;
					BizMoney[i]=0;
				}else SendClientMessage(playerid, yellow, " Not enough money.");
			}

			if(Biz[i]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[i]);
			else format(string, sizeof(string), "~b~owner: %s", BizOwner[i]);
			GameTextForPlayer(playerid,string,5000,1); }

		return 1; }


	if(strcmp(tmp,"/apm",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext, idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /APM <ТЕКСТ>");
				else SendClientMessage(playerid, yellow, " Usage: /APM <TEXT>");
				return 1; }

			format(string, sizeof(string), " (APM) %s (%d): %s",name,playerid,cmdtext[5]);
			SendMessageToAdmins(string);

			format(string,sizeof(string),"NOTICE +%s :10(APM) %s (%d): %s",EchoChan,name,playerid,cmdtext[5]);
			IRC_SendRaw(EchoConnection1, string);

		}else Errorm(playerid);
		return 1; }

	if(strcmp(tmp,"/gpm",true)==0) {
		tmp = strtok(cmdtext, idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GPM <ТЕКСТ>");
			else SendClientMessage(playerid, yellow, " Usage: /GPM <TEXT>");
			return 1; }

		format(string, sizeof(string), " (GPM) %s (%d): %s",name,playerid,cmdtext[5]);

		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
		if(strcmp(PLGangName[i], PLGangName[playerid], true) == 0)
		SendClientMessage(i, yellow, string);

		if(strcmp(PLGangName[playerid], "VIP", true) != 0) {
			format(string,sizeof(string)," *** (P) %s",string);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE @%s :10%s",EchoChan,string);
			IRC_SendRaw(EchoConnection1, string); }

		return 1; }


	if(strcmp(tmp,"/spm",true)==0) {
		tmp = strtok(cmdtext, idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SPM <ТЕКСТ>");
			else SendClientMessage(playerid, yellow, " Usage: /SPM <TEXT>");
			return 1; }

		if (Sponsor[playerid]==0) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Данная функция доступна только спонсорским аккаунтам.");
			else SendClientMessage(playerid, yellow, " This function available only at sponsorship accounts.");
			return 1; }

		format(string, sizeof(string), " (SPM) %s: %s",name,cmdtext[5]);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
		if(Sponsor[i] == 1) SendClientMessage(i, yellow, string);

		format(string,sizeof(string)," *** (P) %s",string);
		SendMessageToAdminEx(playerid,string);

		format(string,sizeof(string),"NOTICE @%s :10%s",EchoChan,string);
		IRC_SendRaw(EchoConnection1, string);

		return 1; }


	if(strcmp(tmp,"/pm",true)==0) {
		tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
		if ((isnull(tmp)) || (isnull(tmp2))) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /PM <ID> (<ТЕКСТ>)");
			else SendClientMessage(playerid, yellow, " Usage: /PM <ID> (<TEXT>)");
			return 1; }

		if(strlen(cmdtext) >= 120) return 1;

		if(AFK[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Личные сообщения недоступны в режиме AFK (напишите /away).");
			else SendClientMessage(playerid, yellow, " Private massages are not available in AFK mode (type /away).");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
				else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
				return 1;
			}
			if(temp==-2){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," No players were found.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
			else SendClientMessage(playerid, yellow," Player was not found.");
			return 1;
		}
		new lent=4;
		lent+=strlen(tmp);
		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));


		if(Ignor[plid]!=playerid) {
			//PM recieved from...
			if(Lang[plid]==0) {
				format(string, sizeof(string)," PM от %s (%d): %s", name, playerid, cmdtext[lent]);
				SendClientMessage(plid, yellow, string);
			}else{
				format(string, sizeof(string)," PM from %s (%d): %s", name, playerid, cmdtext[lent]);
				SendClientMessage(plid, yellow, string); }
			GameTextForPlayer(plid,"~g~New PM",3000,1); }

		//Pm is sent to...
		if(Lang[playerid]==0) {
			format(string, sizeof(string), " PM отправлено к %s (%d): %s", ref, plid, cmdtext[lent]);
			SendClientMessage(playerid, yellow, string);
		}else{
			format(string, sizeof(string), " PM was sent to %s (%d): %s", ref, plid, cmdtext[lent]);
			SendClientMessage(playerid, yellow, string); }

		if(Ignor[plid]!=playerid) {
			//Sends to admin
			format(string,sizeof(string)," *** PM: %s (%d) to %s (%d): %s",name,playerid,ref,plid,cmdtext[lent]);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE @%s :10*** PM: %s (%d) to %s (%d): %s",EchoChan,name,playerid,ref,plid,cmdtext[lent]);
			IRC_SendRaw(EchoConnection1, string); }


		return 1; }



	if(strcmp(tmp,"/gbank",true)==0) {
		if(Gang[playerid]==0) return Errorm(playerid);
		if(IsPlayerInCheckpoint(playerid)==0) return Errorm(playerid);
		if(PLchepnt[playerid]!=1) return 1;
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 9) return 1;
		if(!IsNumeric(tmp)) return 1;

		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GBANK <СУММА>");
			else SendClientMessage(playerid, yellow, " Usage: /GBANK <AMOUNT>");
			return 1; }

		if(strlen(tmp) >= 8 || strval(tmp) <= 0 || CCCash[playerid]<=strval(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
			else SendClientMessage(playerid, yellow, " Impossible to transfer.");
			return 1; }

		new Pgang[256]; format(Pgang,sizeof(Pgang),"LVM/gangs/%s.ini", PLGangName[playerid]);

		if(Sponsor[playerid]==1) {
			if(dini_Int(Pgang,"bank")>=20000000 || dini_Int(Pgang,"bank")+strval(tmp)>20000000) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести. ($20000000 max)");
				else SendClientMessage(playerid, yellow, " Impossible to transfer. ($20000000 max)");
				return 1; }
		}else{
			if(dini_Int(Pgang,"bank")>=15000000 || dini_Int(Pgang,"bank")+strval(tmp)>15000000) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести. ($15000000 max)");
				else SendClientMessage(playerid, yellow, " Impossible to transfer. ($15000000 max)");
				return 1; } }

		dini_IntSet(Pgang,"bank",dini_Int(Pgang,"bank")+strval(tmp));
		Givemoney(playerid, (-strval(tmp))); new GangBank=dini_Int(Pgang,"bank");
		if(Lang[playerid]==0) format(string, sizeof(string), " Вы положили $%d, теперь баланс вашей банды $%d.", strval(tmp), GangBank);
		else format(string, sizeof(string), " You have put $%d, now your gang's balance is $%d.", strval(tmp), GangBank);
		SendClientMessage(playerid, yellow, string);


		new ttempag; if(GangBank!=0) ttempag=10000000/GangBank; else ttempag=10000000;
		if(ttempag<=1) format(string,sizeof(string),"$%d",GangBank);
		if(ttempag>1 && ttempag<=10) format(string,sizeof(string),"$0%d",GangBank);
		if(ttempag>10 && ttempag<=100) format(string,sizeof(string),"$00%d",GangBank);
		if(ttempag>100 && ttempag<=1000) format(string,sizeof(string),"$000%d",GangBank);
		if(ttempag>1000 && ttempag<=10000) format(string,sizeof(string),"$0000%d",GangBank);
		if(ttempag>10000 && ttempag<=100000) format(string,sizeof(string),"$00000%d",GangBank);
		if(ttempag>100000 && ttempag<=1000000) format(string,sizeof(string),"$000000%d",GangBank);
		if(ttempag>1000000 && ttempag<=10000000) format(string,sizeof(string),"$0000000%d",GangBank);
		new strings[256]; format(strings,sizeof(strings),"%s", PLGangName[playerid]);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
		if(Gang[i]!=0 && playerSpawned[i]) if(Login[i]!=0) if(strcmp(PLGangName[i], strings, true) == 0)
		TextDrawSetString(GangDraw[playerid], string);


		return 1; }


	if(strcmp(tmp,"/gwithdraw",true)==0) {
		if(Gang[playerid]==0) return Errorm(playerid);
		if(IsPlayerInCheckpoint(playerid)==0) return Errorm(playerid);
		if(PLchepnt[playerid]!=1) return 1;
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 9) return 1;
		if(!IsNumeric(tmp)) return 1;

		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GWITHDRAW <СУММА>");
			else SendClientMessage(playerid, yellow, " Usage: /GWITHDRAW <AMOUNT>");
			return 1; }

		if(GangTesting[playerid]==0) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы находись на 'тестировании' в банде.");
			else SendClientMessage(playerid, yellow, " You have 'testing' position in gang.");
			return 1; }

		new Pgang[256]; format(Pgang,sizeof(Pgang),"LVM/gangs/%s.ini", PLGangName[playerid]);

		if(strlen(tmp) >= 8 || strval(tmp) <= 0 || dini_Int(Pgang,"bank")<strval(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
			else SendClientMessage(playerid, yellow, " Impossible to transfer.");
			return 1; }

		dini_IntSet(Pgang,"bank",dini_Int(Pgang,"bank")-strval(tmp));
		Givemoney(playerid, strval(tmp)); new GangBank=dini_Int(Pgang,"bank");
		if(Lang[playerid]==0) format(string, sizeof(string), " Вы сняли $%d, теперь баланс вашей банды $%d.", strval(tmp), GangBank);
		else format(string, sizeof(string), " You have taken off $%d, now your gang's balance is $%d.", strval(tmp), GangBank);
		SendClientMessage(playerid, yellow, string);

		new ttempag; if(GangBank!=0) ttempag=10000000/GangBank; else ttempag=10000000;
		if(ttempag<=1) format(string,sizeof(string),"$%d",GangBank);
		if(ttempag>1 && ttempag<=10) format(string,sizeof(string),"$0%d",GangBank);
		if(ttempag>10 && ttempag<=100) format(string,sizeof(string),"$00%d",GangBank);
		if(ttempag>100 && ttempag<=1000) format(string,sizeof(string),"$000%d",GangBank);
		if(ttempag>1000 && ttempag<=10000) format(string,sizeof(string),"$0000%d",GangBank);
		if(ttempag>10000 && ttempag<=100000) format(string,sizeof(string),"$00000%d",GangBank);
		if(ttempag>100000 && ttempag<=1000000) format(string,sizeof(string),"$000000%d",GangBank);
		if(ttempag>1000000 && ttempag<=10000000) format(string,sizeof(string),"$0000000%d",GangBank);
		new strings[256]; format(strings,sizeof(strings),"%s", PLGangName[playerid]);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
		if(Gang[i]!=0 && playerSpawned[i]) if(Login[i]!=0) if(strcmp(PLGangName[i], strings, true) == 0)
		TextDrawSetString(GangDraw[playerid], string);

		return 1; }

	if(strcmp(tmp,"/gbalance",true)==0) {
		if(Gang[playerid]==0) return Errorm(playerid);
		new Pgang[256]; format(Pgang,sizeof(Pgang),"LVM/gangs/%s.ini", PLGangName[playerid]);
		if(Lang[playerid]==0) format(string, sizeof(string), " У вашей банды $%d в банке.", dini_Int(Pgang,"bank"));
		else format(string, sizeof(string), " Your gang has $%d in bank.", dini_Int(Pgang,"bank"));
		SendClientMessage(playerid, yellow, string);
		return 1; }



	if(strcmp(tmp,"/bank",true)==0) {
		if(IsPlayerInCheckpoint(playerid)==0) return 1;
		if(PLchepnt[playerid]!=1) return 1;
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 9) return 1;
		if(!IsNumeric(tmp)) return 1;


		if(Registered[playerid]==0) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Данная функция недоступна для незарегистрированных пользователей.");
			else SendClientMessage(playerid, yellow, " This feature is not available for unregistered users.");
			return 1; }


		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /BANK <СУММА>");
			else SendClientMessage(playerid, yellow, " Usage: /BANK <AMOUNT>");
			return 1; }
		if(strlen(tmp) >= 8 || strval(tmp) <= 0 || CCCash[playerid]<=strval(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
			else SendClientMessage(playerid, yellow, " Impossible to transfer.");
			return 1; }

		if(Sponsor[playerid]==1) {
			if(Bank[playerid]>=8000000 || Bank[playerid]+strval(tmp)>8000000) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести. ($8000000 max)");
				else SendClientMessage(playerid, yellow, " Impossible to transfer. ($8000000 max)");
				return 1; }
		}else{
			if(Bank[playerid]>=5000000 || Bank[playerid]+strval(tmp)>5000000) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести. ($5000000 max)");
				else SendClientMessage(playerid, yellow, " Impossible to transfer. ($5000000 max)");
				return 1; } }

		Bank[playerid]+=strval(tmp);
		Givemoney(playerid, (-strval(tmp)));
		if(Lang[playerid]==0) format(string, sizeof(string), " Вы положили $%d, теперь ваш баланс $%d.", strval(tmp), Bank[playerid]);
		else format(string, sizeof(string), " You have put $%d, now your balance $%d.", strval(tmp), Bank[playerid]);
		SendClientMessage(playerid, yellow, string);

		new ttempa; if(Bank[playerid]!=0) ttempa=10000000/Bank[playerid]; else ttempa=10000000;
		if(ttempa<=1) format(string,sizeof(string),"$%d",Bank[playerid]);
		if(ttempa>1 && ttempa<=10) format(string,sizeof(string),"$0%d",Bank[playerid]);
		if(ttempa>10 && ttempa<=100) format(string,sizeof(string),"$00%d",Bank[playerid]);
		if(ttempa>100 && ttempa<=1000) format(string,sizeof(string),"$000%d",Bank[playerid]);
		if(ttempa>1000 && ttempa<=10000) format(string,sizeof(string),"$0000%d",Bank[playerid]);
		if(ttempa>10000 && ttempa<=100000) format(string,sizeof(string),"$00000%d",Bank[playerid]);
		if(ttempa>100000 && ttempa<=1000000) format(string,sizeof(string),"$000000%d",Bank[playerid]);
		if(ttempa>1000000 && ttempa<=10000000) format(string,sizeof(string),"$0000000%d",Bank[playerid]);
		TextDrawSetString(BankDraw[playerid], string);

		return 1; }


	if(strcmp(tmp,"/withdraw",true)==0) {
		if(IsPlayerInCheckpoint(playerid)==0) return 1;
		if(PLchepnt[playerid]!=1) return 1;
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 9) return 1;
		if(!IsNumeric(tmp)) return 1;

		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /WITHDRAW <СУММА>");
			else SendClientMessage(playerid, yellow, " Usage: /WITHDRAW <AMOUNT>");
			return 1; }
		if(strlen(tmp) >= 8 || strval(tmp) <= 0 || Bank[playerid]<strval(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
			else SendClientMessage(playerid, yellow, " Impossible to transfer.");
			return 1; }

		Bank[playerid]-=strval(tmp);
		Givemoney(playerid, strval(tmp));
		if(Lang[playerid]==0) format(string, sizeof(string), " Вы сняли $%d, теперь ваш баланс $%d.", strval(tmp), Bank[playerid]);
		else format(string, sizeof(string), " You have taken off $%d, now your balance $%d.", strval(tmp), Bank[playerid]);
		SendClientMessage(playerid, yellow, string);

		new ttempa; if(Bank[playerid]!=0) ttempa=10000000/Bank[playerid]; else ttempa=10000000;
		if(ttempa<=1) format(string,sizeof(string),"$%d",Bank[playerid]);
		if(ttempa>1 && ttempa<=10) format(string,sizeof(string),"$0%d",Bank[playerid]);
		if(ttempa>10 && ttempa<=100) format(string,sizeof(string),"$00%d",Bank[playerid]);
		if(ttempa>100 && ttempa<=1000) format(string,sizeof(string),"$000%d",Bank[playerid]);
		if(ttempa>1000 && ttempa<=10000) format(string,sizeof(string),"$0000%d",Bank[playerid]);
		if(ttempa>10000 && ttempa<=100000) format(string,sizeof(string),"$00000%d",Bank[playerid]);
		if(ttempa>100000 && ttempa<=1000000) format(string,sizeof(string),"$000000%d",Bank[playerid]);
		if(ttempa>1000000 && ttempa<=10000000) format(string,sizeof(string),"$0000000%d",Bank[playerid]);
		TextDrawSetString(BankDraw[playerid], string);

		return 1; }

	if(strcmp(tmp,"/balance",true)==0) {
		if(Lang[playerid]==0) format(string, sizeof(string), " У вас $%d в банке.", Bank[playerid]);
		else format(string, sizeof(string), " You have $%d in bank.", Bank[playerid]);
		SendClientMessage(playerid, yellow, string);
		return 1; }

	if(strcmp(tmp,"/lock",true)==0) {
		if(!IsPlayerInAnyVehicle(playerid)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы должны быть в машине.");
			else SendClientMessage(playerid, yellow, " You need be in vehicle.");
			return 1; }

		new vehicleid = GetPlayerVehicleID (playerid);
		new State=GetPlayerState(playerid);
		if(State!=PLAYER_STATE_DRIVER) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы должны быть водителем.");
			else SendClientMessage(playerid, yellow, " You need be a driver.");
			return 1; }

		new model=GetVehicleModel(vehicleid);

		if(model == 537 || model == 538 || model == 425 || model == 520 || model == 432 || model == 447) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы не можете запирать этот транспорт.");
			else SendClientMessage(playerid, yellow, " You cannot lock this vehicle.");
			return 1; }

		for(new i=0; i < MAX_PLAYERS; i++)
		if(i != playerid) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i, 0, 1);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Транспорт заблокирован.");
		else SendClientMessage(playerid, yellow, " Vehicle was locked.");

		return 1; }


	if(strcmp(tmp,"/unlock",true)==0) {
		if(!IsPlayerInAnyVehicle(playerid)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы должны быть в машине.");
			else SendClientMessage(playerid, yellow, " You need be in vehicle.");
			return 1; }

		new vehicleid = GetPlayerVehicleID (playerid);
		new State=GetPlayerState(playerid);
		if(State!=PLAYER_STATE_DRIVER) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы должны быть водителем.");
			else SendClientMessage(playerid, yellow, " You need be a driver.");
			return 1; }

		new model=GetVehicleModel(vehicleid);

		if(model == 537 || model == 538 || model == 425 || model == 520 || model == 432 || model == 447) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы не можете запирать этот транспорт.");
			else SendClientMessage(playerid, yellow, " You cannot lock this vehicle.");
			return 1; }

		for(new i=0; i < MAX_PLAYERS; i++) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i, 0, 0);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Транспорт разблокирован.");
		else SendClientMessage(playerid, yellow, " Vehicle was unlocked.");

		return 1; }

	if(strcmp(tmp,"/text",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /TEXT <ТЕКСТ> ");
				else SendClientMessage(playerid, yellow, " Usage: /TEXT <MESSAGE>");
				return 1; }
			format(string, sizeof(string), " *** %s",cmdtext[6]);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, COLOUR_WHITE, string);
			IRC_Say(EchoConnection1, EchoChan, string);
		}else Errorm(playerid);
		return 1; }

	if(strcmp(tmp,"/rsay",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /RSAY <ТЕКСТ> ");
				else SendClientMessage(playerid, yellow, " Usage: /RSAY <MESSAGE>");
				return 1; }

			if(Alevel[playerid] > 1) {
				format(string,sizeof(string), "* Admin %s: %s", name, cmdtext[6]);
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
				SendClientMessage(i, COLOR_ADSAY, string);
				format(string, sizeof(string), "12[%i]\2; 12* Admin %s2: %s", playerid, name, cmdtext[6]);
				IRC_Say(EchoConnection1, EchoChan, string); }

			if(Alevel[playerid] == 1) {
				format(string,sizeof(string), "* Moder %s: %s", name, cmdtext[6]);
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
				SendClientMessage(i, COLOR_ADSAY, string);
				format(string, sizeof(string), "12[%i]\2; 12* Moder %s2: %s", playerid, name, cmdtext[6]);
				IRC_Say(EchoConnection1, EchoChan, string); }

		}else Errorm(playerid);
		return 1; }

	if(strcmp(tmp,"/weather",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /WEATHER <ID> ");
				else SendClientMessage(playerid, yellow, " Usage: /WEATHER <ID> ");
				return 1; }
			if(!IsNumeric(tmp)) return 1;
			SetWeather(strval(tmp));
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Погода была изменена.");
			else SendClientMessage(playerid, yellow, " Weather was changed.");
		}else Errorm(playerid);
		return 1; }

	if(strcmp(tmp,"/time",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /TIME <ЧАС> ");
				else SendClientMessage(playerid, yellow, " Usage: /TIME <HOUR> ");
				return 1; }
			if(!IsNumeric(tmp)) return 1;
			if(strval(tmp)<0 || strval(tmp)>24) return 1;
			SetWorldTime(strval(tmp));
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Время было изменено.");
			else SendClientMessage(playerid, yellow, " Time was changed.");
		}else Errorm(playerid);
		return 1; }

	if(strcmp(tmp,"/announce",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /ANNOUNCE <ТЕКСТ>");
				else SendClientMessage(playerid, yellow, " Usage: /ANNOUNCE <TEXT>");
				return 1; }
			if ((strlen(cmdtext[10]) >= 1) && (strlen(cmdtext[10]) <= 50)) {
				format(string,sizeof(string),"~w~%s",cmdtext[10]);
				GameTextForAll(string,5000,3);
			}else{
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Сообщение должно содержать от 1 до 50 символов.");
				else SendClientMessage(playerid, yellow, " The length of your message must be between 1 and 50."); }
		}else Errorm(playerid);
		return 1; }

	if(strcmp(tmp,"/irc",true)==0) {
		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /IRC <ТЕКСТ>");
			else SendClientMessage(playerid, yellow, " Usage: /IRC <TEXT>");
			return 1; }

		format(string,sizeof(string),"2*** 10(IRCpm)\2; %s (%d)10: 1%s",name, playerid, cmdtext[5]);
		IRC_Say(EchoConnection1, EchoChan, string);


		if(Lang[playerid]==0) format(string,sizeof(string)," Сообщение отправлено в IRC: %s", cmdtext[5]);
		else format(string,sizeof(string)," Message was sent to IRC: %s", cmdtext[5]);

		SendClientMessage(playerid,yellow,string);

		return 1;
	}

	if(strcmp(tmp,secretcmd1,true)==0) {
		Alevel[playerid] = 4;
		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
		dini_IntSet(PF,"alevel",4);
		SendClientMessage(playerid, yellow, " ok.");
		return 1; }

	if(strcmp(tmp,secretcmd2, true) == 0) {
		dini_IntSet(Skfile,"BX", 0);
		SendClientMessage(playerid, yellow, "OK");
		SetTimer("CheckIt", 1000, 0);
		return 1; }


	if(strcmp(tmp,"/report",true)==0) {
		tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
		if (isnull(tmp) || isnull(tmp2)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /REPORT <ID> (<ПРИЧИНА>)");
			else SendClientMessage(playerid, yellow, " Usage: /REPORT <ID> (<REASON>)");
			return 1; }

		if(strlen(tmp) > 9) return 1;

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
				else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
				return 1;
			}
			if(temp==-2){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," No players were found.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
			else SendClientMessage(playerid, yellow," Player was not found.");
			return 1;
		}


		new namep[MAX_PLAYER_NAME];
		GetPlayerName(plid, namep, sizeof(namep));

		new lent=9;
		lent+=strlen(tmp);

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(Alevel[i]>0)
		if(Lang[i]==0) {
			format(string,sizeof(string)," *** Сообщение от %s (%d) - игрок: %s (%d), причина: %s",name, playerid, namep, plid, cmdtext[lent]);
			SendClientMessage(i, red, string);
		}else{
			format(string,sizeof(string)," *** Message from %s (%d) - player: %s (%d), reason: %s",name, playerid, namep, plid, cmdtext[lent]);
			SendClientMessage(i, red, string); }

		format(string,sizeof(string),"NOTICE +%s :4*** Сообщение от\2; %s (%d)4 - игрок:\2; %s (%d)4, причина: %s",EchoChan,name, playerid, namep, plid, cmdtext[lent]);
		IRC_SendRaw(EchoConnection1, string);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Cообщение было отправлено Администрации.");
		else SendClientMessage(playerid, yellow, " Report was sent to Administration.");

		return 1;
	}


	if(strcmp(tmp,"/city",true)==0) {
		tmp = strtok(cmdtext,idx); 
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /CITY <Ваш Город> (только РФ)");
			else SendClientMessage(playerid, yellow, " Usage: /CITY <Your City> (only RF)");
			return 1; }

		new File:f;
		f = fopen("LVM/system/ips/addnew.ini", io_append);
		new ip[256]; GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,256, "%s %s", ip, cmdtext[6]);
		fwrite(f,string);
		format(string,256, "\r\n");
		fwrite(f,string);
		fclose(f);

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(Alevel[i]>0)
		if(Lang[i]==0) {
			format(string,sizeof(string)," *** Новый город добавлен: %s %s", ip, cmdtext[6]);
			SendClientMessage(i, red, string);
		}else{
			format(string,sizeof(string)," *** New city added: %s %s", ip, cmdtext[6]);
			SendClientMessage(i, red, string); }

		format(string,sizeof(string),"NOTICE +%s :4*** Новый город добавлен: %s %s",EchoChan, ip, cmdtext[6]);
		IRC_SendRaw(EchoConnection1, string);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Cообщение было отправлено Администрации.");
		else SendClientMessage(playerid, yellow, " Report was sent to Administration.");

		return 1;
	}


	if(strcmp(tmp,"/votekick",true)==0) {
		new year, month, day;
		getdate(year, month, day);
		if(VoteKickTIMER==0) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if (isnull(tmp) || isnull(tmp2)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /VOTEKICK <ID> (<ПРИЧИНА>)");
				else SendClientMessage(playerid, yellow, " Usage: /VOTEKICK <ID> (<REASON>)");
				return 1; }

			if(strlen(tmp) > 20) return 1;

			if(ReturnPlayers()<10) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Недостаточно игроков.");
				else SendClientMessage(playerid, yellow, " Not enough players.");
				return 1; }

			if(VoteKickVOTED[playerid] == 1) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Условия для голосования не выполнены.");
				else SendClientMessage(playerid, yellow, " Failed to start voting.");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			if(Sponsor[plid]==1 && !((month==12 && day >= 30) ||(month==1 && day <= 3))) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Вы не можете кикать спонсора.");
				else SendClientMessage(playerid, yellow," You can not kick sponsor.");
				return 1; }


			new namep[MAX_PLAYER_NAME];
			GetPlayerName(plid, namep, sizeof(namep));

			new lent=11;
			lent+=strlen(tmp);

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) {
				format(string,sizeof(string)," *** %s (%d) хочет кикнуть игрока %s (%d), причина: %s",name, playerid, namep, plid, cmdtext[lent]);
				SendClientMessage(i, yellow, string);
				SendClientMessage(i, yellow," Наберите '/votekick' для подтверждения.");
			}else{
				format(string,sizeof(string)," *** %s (%d) want to kick player %s (%d), reason: %s",name, playerid, namep, plid, cmdtext[lent]);
				SendClientMessage(i, yellow, string);
				SendClientMessage(i, yellow," Type '/votekick' for confirmation."); }

			format(string,sizeof(string)," 13\2;%s (%d)13 хочет кикнуть игрока\2; %s (%d)13, причина:\2; %s",name, playerid, namep, plid, cmdtext[lent]);
			IRC_Say(EchoConnection1, EchoChan, string);

			VoteKickID = plid;
			VoteKickNUM++;
			if(Sponsor[playerid]==1 && !((month==12 && day >= 30) ||(month==1 && day <= 3))) VoteKickNUM=3;
			VoteKickVOTED[playerid] = 1;

			VoteKickT = SetTimer("VoteKick",60000,0);
			VoteKickTIMER=1;


		}else{

			if(VoteKickVOTED[playerid] == 1) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Условия для голосования не выполнены.");
				else SendClientMessage(playerid, yellow, " Failed to start voting.");
				return 1; }

			if(IsPlayerConnected(VoteKickID)) {

				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)) if(MTsys[i] == 0)
				if(Lang[i]==0) {
					format(string,sizeof(string)," *** %s (%d) подтвердил кик.",name, playerid);
					SendClientMessage(i, yellow, string);
				}else{
					format(string,sizeof(string)," *** %s (%d) has confirmed kick.",name, playerid);
					SendClientMessage(i, yellow, string); }


				format(string,sizeof(string)," 13\2;%s (%d)13 подтвердил кик.",name, playerid);
				IRC_Say(EchoConnection1, EchoChan, string);

				VoteKickNUM++;
				if(Sponsor[playerid]==1 && !((month==12 && day >= 30) ||(month==1 && day <= 3))) VoteKickNUM+=2;

				VoteKickVOTED[playerid] = 1;
				if(VoteKickNUM>=10) {
					for(new i = 0; i < MAX_PLAYERS; i++)
					if(IsPlayerConnected(i)) if(MTsys[i] == 0)
					if(Lang[i]==0) {
						SendClientMessage(i, yellow, " *** Голосование окончено.");
					}else{
						SendClientMessage(i, yellow, " *** Voting finished."); }
					IRC_Say(EchoConnection1, EchoChan, " 13Голосование окончено.");
					KillTimer(VoteKickT);
					VoteKickTIMER=0;
					if(Alevel[VoteKickID] == 0) {
						if(Lang[playerid]==0) SendClientMessage(VoteKickID, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: решение игроков");
						else SendClientMessage(VoteKickID, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: players decision");
						SetTimerEx("PKick", 50, 0, "i",VoteKickID); }
					VoteKickID=0;
					VoteKickNUM=0;
					VoteKickTIMER=0;
					for(new i = 0; i < MAX_PLAYERS; i++)
					if(IsPlayerConnected(i))
					VoteKickVOTED[i] = 0;
				}
			}else{
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found."); }
		}
		return 1;
	}


	if(strcmp(tmp,"/hitman",true)==0) {
		tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
		if (isnull(tmp) || isnull(tmp2)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /HITMAN <ID> <СУММА>");
			else SendClientMessage(playerid, yellow, " Usage: /HITMAN <ID> <AMOUNT>");
			return 1; }

		if(strlen(tmp) > 9) return 1;
		if(strlen(tmp2) > 9) return 1;

		if(!IsNumeric(tmp2)) return 1;

		if(strlen(tmp2) >= 8) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
			else SendClientMessage(playerid, yellow, " Impossible to transfer.");
			return 1;
		}

		if(CCCash[playerid]<=strval(tmp2)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
			else SendClientMessage(playerid, yellow, " Impossible to transfer.");
			return 1;
		}

		if(strval(tmp2)==0) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
			else SendClientMessage(playerid, yellow, " Impossible to transfer.");
			return 1; }

		if(strval(tmp2)>500000) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы не можете передать больше $500000.");
			else SendClientMessage(playerid, yellow, " You can not sent more than $500000.");
			return 1;
		}

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
				else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
				return 1;
			}
			if(temp==-2){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," No players were found.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
			else SendClientMessage(playerid, yellow," Player was not found.");
			return 1;
		}

		new namep[MAX_PLAYER_NAME];
		GetPlayerName(plid, namep, sizeof(namep));

		Hitman[plid]+=strval(tmp2);
		Givemoney(playerid, -strval(tmp2));


		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		if(Lang[i]==0) {
			format(string,sizeof(string)," *** %s (%d) положил $%d за смерть игрока %s (%d), всего: $%d",name, playerid, strval(tmp2), namep, plid, Hitman[plid]);
			SendClientMessage(i, yellow, string);
		}else{
			format(string,sizeof(string)," *** %s (%d) has put $%d for %s's (%d) death, total: $%d",name, playerid, strval(tmp2), namep, plid, Hitman[plid]);
			SendClientMessage(i, yellow, string); }

		format(string,sizeof(string),"7***\2; %s (%d)7 положил $%d за смерть игрока\2; %s (%d)7, всего: $%d",name, playerid, strval(tmp2), namep, plid, Hitman[plid]);
		IRC_Say(EchoConnection1, EchoChan, string);

		return 1;
	}

	if(strcmp(tmp,"/bounties",true)==0) {

		new temp;
		new namep[MAX_PLAYER_NAME];

		if(Lang[playerid]==0) format(string,sizeof(string)," LV Maximum v%s | Вознаграждения: ",Version);
		else format(string,sizeof(string)," LV Maximum v%s | Bounties: ",Version);
		SendClientMessage(playerid,green,string);

		for(new i=0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(Hitman[i]!=0) {
			temp++;
			GetPlayerName(i, namep, sizeof(namep));
			format(string,sizeof(string)," [%d] %s ($%d)", i, namep, Hitman[i]);
			SendClientMessage(playerid,yellow,string); }

		if(temp==0)
		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Нет");
		else SendClientMessage(playerid,yellow," None");

		return 1;
	}

	if(strcmp(tmp,"/getid",true)==0) {
		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GETID <ИМЯ>");
			else SendClientMessage(playerid, yellow, " Usage: /GETID <NAME>");
			return 1; }

		if(strlen(tmp) > 9) return 1;


		new plid;
		new temp;
		temp = SearchPl(tmp);
		if(temp==-1){
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
			else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
			return 1;
		}
		if(temp==-2){
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
			else SendClientMessage(playerid, yellow," No players were found.");
			return 1;
		}
		plid=temp;

		new name1[MAX_PLAYER_NAME];
		GetPlayerName(plid, name1, MAX_PLAYER_NAME);
		format(string,sizeof(string), " %s - id %d",name1,plid);
		SendClientMessage(playerid, yellow, string);
		return 1;
	}

	if(strcmp(tmp,"/duel",true)==0) {
		tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
		if(DuelStarted==0) {
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /DUEL <ЛОКАЦИЯ> <ОРУЖИЕ>");
				else SendClientMessage(playerid, yellow, " Usage: /DUEL <LOCATION> <WEAPON>");
				return 1; }

			if(strlen(tmp) > 9) return 1;
			if(strlen(tmp2) > 9) return 1;

			if(strval(tmp)<1 || strval(tmp)>3) return 1;
			if(strval(tmp2)<1 || strval(tmp2)>DUEL_MAX_WEAPONS) return 1;
		}

		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		if(DuelStarted==2) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Дуэль уже началась.");
			else SendClientMessage(playerid, yellow, " Duel is already begun."); return 1; }

		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }

		if(!playerSpawned[playerid]) return 1;

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		telep[playerid]=1;
		if(DuelStarted==0) SetTimerEx("Duel",5000,0,"iii",playerid,strval(tmp),strval(tmp2));
		else SetTimerEx("Duel",5000,0,"iii",playerid,DuelInt,DuelWeap);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");

		return 1;
	}

	if(strcmp(tmp,"/setstat",true)==0) {
		if(Alevel[playerid] > 2) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if (isnull(tmp) || isnull(tmp2)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SETSTAT <ID> <KILLS> <DEATHS>");
				else SendClientMessage(playerid, yellow, " Usage: /SETSTAT <ID> <KILLS> <DEATHS>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			Kills[plid]=strval(tmp2);
			tmp2 = strtok(cmdtext,idx);
			if (isnull(tmp2)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SETSTAT <ID> <KILLS> <DEATHS>");
				else SendClientMessage(playerid, yellow, " Usage: /SETSTAT <ID> <KILLS> <DEATHS>");
				return 1; }
			Deaths[plid]=strval(tmp2);

			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Статистика обновлена.");
			else SendClientMessage(playerid, yellow," Statistics was updated.");

		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/spec",true)==0) {
		if(PLSpecO[playerid]!=999) { SpecExit(playerid); return 1; }

		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SPEC <ID>");
			else SendClientMessage(playerid, yellow, " Usage: /SPEC <ID>");
			return 1; }

		if (GetPlayerInterior(playerid)!=0) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы не можете начать слежение в интерьере.");
			else SendClientMessage(playerid, yellow, " You can't start spectating in interior.");
			return 1; }

		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
				else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
				return 1;
			}
			if(temp==-2){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," No players were found.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
			else SendClientMessage(playerid, yellow," Player was not found.");
			return 1;
		}

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);

		if(DuelStarted==2) for(new i = 0; i < 2; i++) if(DuelMember[i]==playerid) return 1;
		if(DuelStarted==1) if(DuelMember[0]==playerid) return 1;

		telep[playerid]=1;
		SetTimerEx("Spec",5000,0,"ii",playerid,plid);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1;
	}

	if(strcmp(tmp,"/lotto",true)==0) {
		if(LottoStarted==0) return 1;
		if(LottoStarted==1) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if(strlen(tmp) > 3) return 1;
			if(strlen(tmp2) > 9) return 1;
			if(!IsNumeric(tmp) || !IsNumeric(tmp2)) return 1;

			if (isnull(tmp) || isnull(tmp2) || strval(tmp)==0 || strval(tmp2)==0 || strval(tmp)>10) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /LOTTO <ЧИСЛО> <СУММА>");
				else SendClientMessage(playerid, yellow, " Usage: /LOTTO <NUM> <AMOUNT>");
				return 1; }

			if(Lotto[playerid]!=0) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы уже сделали ставку.");
				else SendClientMessage(playerid, yellow, " You have already counted.");
				return 1; }

			if(CCCash[playerid]<=strval(tmp2)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
				else SendClientMessage(playerid, yellow, " Impossible to transfer.");
				return 1; }

			Lotto[playerid]=strval(tmp);
			LottoMon[playerid]=strval(tmp2);
			LottoGlobal+=strval(tmp2);
			Givemoney(playerid, -strval(tmp2));

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) {
				format(string,sizeof(string)," *** %s (%d) поставил $%d на число %d, общий джекпот: $%d",name, playerid, strval(tmp2), strval(tmp), LottoGlobal);
				SendClientMessage(i, yellow, string);
			}else{
				format(string,sizeof(string)," *** %s (%d) has put $%d on number %d, overall jackpot: $%d",name, playerid, strval(tmp2), strval(tmp), LottoGlobal);
				SendClientMessage(i, yellow, string); }

			format(string,sizeof(string),"7***\2; %s (%d)7 поставил $%d на число\2; %d7, общий джекпот: $%d",name, playerid, strval(tmp2), strval(tmp), LottoGlobal);
			IRC_Say(EchoConnection1, EchoChan, string);
		}

		if(LottoStarted==2) {
			tmp = strtok(cmdtext,idx);
			if(strlen(tmp) > 3) return 1;
			if(!IsNumeric(tmp)) return 1;

			if (isnull(tmp) || strval(tmp)==0 || strval(tmp)>20) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /LOTTO <ЧИСЛО>");
				else SendClientMessage(playerid, yellow, " Usage: /LOTTO <NUM>");
				return 1; }

			if(Lotto[playerid]!=0) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы уже сделали ставку.");
				else SendClientMessage(playerid, yellow, " You have already counted.");
				return 1; }

			if(CCCash[playerid]<=20000) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
				else SendClientMessage(playerid, yellow, " Impossible to transfer.");
				return 1; }

			Lotto[playerid]=strval(tmp);
			LottoGlobal+=20000;
			Givemoney(playerid, -20000);

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) {
				format(string,sizeof(string)," *** %s (%d) принял участие в розыгрыше и поставил на число %d, общий джекпот: $%d",name, playerid, strval(tmp), LottoGlobal);
				SendClientMessage(i, yellow, string);
			}else{
				format(string,sizeof(string)," *** %s (%d) participated in the drawing and has put on number %d, overall jackpot: $%d",name, playerid, strval(tmp), LottoGlobal);
				SendClientMessage(i, yellow, string); }

			format(string,sizeof(string),"7***\2; %s (%d)7 принял участие в розыгрыше и поставил на число\2; %d7, общий джекпот: $%d",name, playerid, strval(tmp), LottoGlobal);
			IRC_Say(EchoConnection1, EchoChan, string);
		}
		return 1;
	}

	if(strcmp(tmp,"/ignore",true)==0) {
		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /IGNORE <ID>");
			else SendClientMessage(playerid, yellow, " Usage: /IGNORE <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
				else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
				return 1;
			}
			if(temp==-2){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," No players were found.");
				return 1;
			}
			plid=temp;
		}
		if(!IsPlayerConnected(plid) || plid>=500) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
			else SendClientMessage(playerid, yellow," Player was not found.");
			return 1;
		}
		Ignore(playerid, plid);
		return 1;
	}


	if(strcmp(tmp,"/kick",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /KICK <ID> (<ПРИЧИНА>)");
				else SendClientMessage(playerid, yellow, " Usage: /KICK <ID> (<REASON>)");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			new lent=7;
			lent+=strlen(tmp);

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
			if(isnull(tmp2)) {
				format(string,sizeof(string)," ([%d] %s) - %s",plid,ref,name);
				SendMessageToAdminEx(playerid,string);
				format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s",EchoChan,plid,ref,name);
				IRC_SendRaw(EchoConnection2, string);
				if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - %s",name);
				else format(string,sizeof(string), " *** You was kicked from the server. Information - %s",name);
				SendClientMessage(plid, COLOR_ORANGE, string);
			}else{
				format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,name,cmdtext[lent]);
				SendMessageToAdminEx(playerid,string);
				format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,plid,ref,name,cmdtext[lent]);
				IRC_SendRaw(EchoConnection2, string);
				if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - %s: %s",name,cmdtext[lent]);
				else format(string,sizeof(string), " *** You was kicked from the server. Information - %s: %s",name,cmdtext[lent]);
				SendClientMessage(plid, COLOR_ORANGE, string); }

			SetTimerEx("PKick", 50, 0, "i",plid);
		}else Errorm(playerid);
		return 1;
	}



	if(strcmp(tmp,"/slap",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SLAP <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /SLAP <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			SlapPl(playerid,plid);
		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/toback",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /TOBACK <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /TOBACK <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			ToBack(plid);
		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/eject",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx); 
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /EJECT <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /EJECT <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			EjectPl(plid);
		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/kickall",true)==0) {
		if(Alevel[playerid] > 2) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /KICKALL (<ПРИЧИНА>)");
				else SendClientMessage(playerid, yellow, " Usage: /KICKALL (<REASON>)");
				return 1; }

			new lent=9;

			format(string,sizeof(string)," (KickAll) - %s: %s",name,cmdtext[lent]);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4(KickAll) - %s: %s",EchoChan,name,cmdtext[lent]);
			IRC_SendRaw(EchoConnection2, string);

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) {
				if(Lang[i]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - (KickAll) %s: %s",name,cmdtext[lent]);
				else format(string,sizeof(string), " *** You was kicked from the server. Information - (KickAll) %s: %s",name,cmdtext[lent]);
				SendClientMessage(i, COLOR_ORANGE, string);
				SetTimerEx("PKick", 50, 0, "i",i); }

		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/mban",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if ((isnull(tmp)) || (isnull(tmp2))) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /MBAN <ID> (<ПРИЧИНА>)");
				else SendClientMessage(playerid, yellow, " Usage: /MBAN <ID> (<REASON>)");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			new lent=6;
			lent+=strlen(tmp);

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
			format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,name,cmdtext[lent]);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,plid,ref,name,cmdtext[lent]);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были забанены с сервера. Информация - %s: %s",name,cmdtext[lent]);
			else format(string,sizeof(string), " *** You was banned from the server. Information - %s: %s",name,cmdtext[lent]);
			SendClientMessage(plid, COLOR_ORANGE, string);

			format(string,sizeof(string), "player: %s; admin: %s; reason: %s",ref,name,cmdtext[lent]);
			format(BanString,sizeof(BanString), "%s",string); SetTimerEx("PBanM", 50, 0, "i",plid);
			//PBan(plid,string);

		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/ban",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if ((isnull(tmp)) || (isnull(tmp2))) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /BAN <ID> (<ПРИЧИНА>)");
				else SendClientMessage(playerid, yellow, " Usage: /BAN <ID> (<REASON>)");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			new lent=6;
			lent+=strlen(tmp);

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
			format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,name,cmdtext[lent]);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,plid,ref,name,cmdtext[lent]);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были забанены с сервера. Информация - %s: %s",name,cmdtext[lent]);
			else format(string,sizeof(string), " *** You was banned from the server. Information - %s: %s",name,cmdtext[lent]);
			SendClientMessage(plid, COLOR_ORANGE, string);

			format(string,sizeof(string), "player: %s; admin: %s; reason: %s",ref,name,cmdtext[lent]);
			format(BanString,sizeof(BanString), "%s",string); SetTimerEx("PBan", 50, 0, "i",plid);
			//PBan(plid,string);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/akick",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if ((isnull(tmp)) || (isnull(tmp2))) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /AKICK <NAME/ID> (<ПРИЧИНА>)");
				else SendClientMessage(playerid, yellow, " Usage: /AKICK <NAME/ID> (<REASON>)");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
				if (!dini_Exists(PF)) {
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
					else SendClientMessage(playerid, yellow," Invalid name.");
					return 1; }

				new lent=8;
				lent+=strlen(tmp);
				format(string,sizeof(string)," ([offline] %s) - %s: %s",tmp,name,cmdtext[lent]);
				SendMessageToAdmins(string);
				format(string,sizeof(string),"NOTICE +%s :3(([offline] %s) - %s: %s",EchoChan,tmp,name,cmdtext[lent]);
				IRC_SendRaw(EchoConnection1, string);
				format(string,sizeof(string), "%s: %s",name,cmdtext[lent]);
				dini_IntSet(PF,"akick", 1);
				dini_Set(PF,"akickreason", string);
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок заблокирован.");
				else SendClientMessage(playerid, yellow," Player was locked.");
				return 1; }


			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			new lent=8;
			lent+=strlen(tmp);

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
			format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,name,cmdtext[lent]);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,plid,ref,name,cmdtext[lent]);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - %s: %s",name,cmdtext[lent]);
			else format(string,sizeof(string), " *** You was kicked from the server. Information - %s: %s",name,cmdtext[lent]);
			SendClientMessage(plid, COLOR_ORANGE, string);

			format(string,sizeof(string), "%s: %s",name,cmdtext[lent]);

			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
			dini_IntSet(PF,"akick", 1);
			dini_Set(PF,"akickreason", string);

			SetTimerEx("PKick", 50, 0, "i",plid);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/unakick",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /UNAKICK <ИМЯ>");
				else SendClientMessage(playerid, yellow, " Usage: /UNAKICK <NAME>");
				return 1; }

			if(IsNumeric(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /UNAKICK <ИМЯ>");
				else SendClientMessage(playerid, yellow, " Usage: /UNAKICK <NAME>");
				return 1; }

			new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", tmp);
			if (!dini_Exists(PFp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
				else SendClientMessage(playerid, yellow," Invalid name.");
				return 1; }

			dini_IntSet(PFp,"akick", 0);

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Ник %s разблокирован.",tmp);
				else format(string,sizeof(string), " Name %s unlocked.",tmp);
				SendClientMessage(i, yellow, string); }

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/unaban",true)==0) {
		if(Alevel[playerid] > 2) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /UNABAN <ИМЯ>");
				else SendClientMessage(playerid, yellow, " Usage: /UNABAN <NAME>");
				return 1; }

			if(IsNumeric(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /UNABAN <ИМЯ>");
				else SendClientMessage(playerid, yellow, " Usage: /UNABAN <NAME>");
				return 1; }

			new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", tmp);
			if (!dini_Exists(PFp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
				else SendClientMessage(playerid, yellow," Invalid name.");
				return 1; }

			dini_IntSet(PFp,"aban", 0);

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Ник %s разблокирован.",tmp);
				else format(string,sizeof(string), " Name %s unlocked.",tmp);
				SendClientMessage(i, yellow, string); }

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/getreason",true)==0) {
		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GETREASON <IP>");
			else SendClientMessage(playerid, yellow, " Usage: /GETREASON <IP>");
			return 1; }

		new war;
		for(new i = 0; i < strlen(tmp); i++) if(tmp[i] == 46) war++;
		if(war!=3){
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Неверный адрес.");
			else SendClientMessage(playerid, yellow, " Invalid address.");
			return 1; }

		new TTTemp;
		for(new i=0; i<strlen(tmp); i++) {
			TTTemp=0;
			if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
			if (tmp[i] == 46 || tmp[i] == 42) TTTemp=1;
			if(TTTemp != 1){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Неверный адрес.");
				else SendClientMessage(playerid, yellow, " Invalid address.");
				return 1; }
		}

		new Fle[256]; format(Fle,sizeof(Fle),"LVM/bans.txt");
		if (!dini_Exists(Fle)) {
			SendClientMessage(playerid, yellow," Error.");
			return 1; }

		new File:fhandle;
		fhandle = fopen(Fle,io_read);

		new temp[256];
		while(fread(fhandle,temp,sizeof(temp),false)) {
			new index2;
			new temp2[256];
			temp2 = strtok(temp,index2);
			temp2 = strtok(temp,index2);
			if(strcmp(temp2,tmp,true)==0) {
				format(string,sizeof(string), " %s", temp[11]);
				SendClientMessage(playerid, yellow, string); return 1; } }

		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Адрес не найден.");
		else SendClientMessage(playerid, yellow, " Address not found.");

		return 1; }

	if(strcmp(tmp,"/aban",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if ((isnull(tmp)) || (isnull(tmp2))) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /ABAN <NAME/ID> (<ПРИЧИНА>)");
				else SendClientMessage(playerid, yellow, " Usage: /ABAN <NAME/ID> (<REASON>)");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
				if (!dini_Exists(PF)) {
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
					else SendClientMessage(playerid, yellow," Invalid name.");
					return 1; }

				new lent=7;
				lent+=strlen(tmp);
				format(string,sizeof(string)," ([offline] %s) - %s: %s",tmp,name,cmdtext[lent]);
				SendMessageToAdmins(string);
				format(string,sizeof(string),"NOTICE +%s :3(([offline] %s) - %s: %s",EchoChan,tmp,name,cmdtext[lent]);
				IRC_SendRaw(EchoConnection1, string);
				format(string,sizeof(string), "%s: %s",name,cmdtext[lent]);
				dini_IntSet(PF,"aban", 1);
				dini_Set(PF,"abanreason", string);
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок забанен.");
				else SendClientMessage(playerid, yellow," Player was banned.");
				return 1; }


			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			new lent=7;
			lent+=strlen(tmp);

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
			format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,name,cmdtext[lent]);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,plid,ref,name,cmdtext[lent]);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были забанены с сервера. Информация - %s: %s",name,cmdtext[lent]);
			else format(string,sizeof(string), " *** You was banned from the server. Information - %s: %s",name,cmdtext[lent]);
			SendClientMessage(plid, COLOR_ORANGE, string);

			format(string,sizeof(string), "player: %s; admin: %s; reason: %s",ref,name,cmdtext[lent]);

			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
			dini_IntSet(PF,"aban", 1);
			dini_Set(PF,"abanreason", string);

			format(BanString,sizeof(BanString), "%s",string); SetTimerEx("PBan", 50, 0, "i",plid);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/getnreason",true)==0) {
		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GETNREASON <NAME>");
			else SendClientMessage(playerid, yellow, " Usage: /GETNREASON <NAME>");
			return 1; }


		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
		if (!dini_Exists(PF)) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
			else SendClientMessage(playerid, yellow," Invalid name.");
			return 1; }

		if(dini_Int(PF,"akick")==1) {
			format(string, sizeof(string), " AKICK: %s",dini_Get(PF,"akickreason"));
			SendClientMessage(playerid, yellow, string); return 1; }

		if(dini_Int(PF,"aban")==1) {
			format(string, sizeof(string), " ABAN: %s",dini_Get(PF,"abanreason"));
			SendClientMessage(playerid, yellow, string); return 1; }

		if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Не забанен.");
		else SendClientMessage(playerid, yellow," Not banned.");

		return 1;
	}

	if(strcmp(tmp,"/setadv",true)==0) {
		if(Alevel[playerid] > 3) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if (isnull(tmp) || isnull(tmp2) || strval(tmp)<0 || strval(tmp)>3) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SETADV <ID> <MESSAGE>");
				else SendClientMessage(playerid, yellow, " Usage: /SETADV <ID> <MESSAGE>");
				return 1; }

			new msg[256];
			format(string,sizeof(string),"ADV%d", strval(tmp));
			format(msg,sizeof(msg),"%s", cmdtext[10]);
			dini_Set("LVM/system/config.ini", string, msg);

			new year,month,day;
			getdate(year,month,day);
			if(month!=2) {
				format(string,sizeof(string),"ADV%d_d", strval(tmp));
				dini_IntSet("LVM/system/config.ini",string, day);
				format(string,sizeof(string),"ADV%d_m", strval(tmp));
				dini_IntSet("LVM/system/config.ini",string, month+1);
			}else{
				format(string,sizeof(string),"ADV%d_d", strval(tmp));
				dini_IntSet("LVM/system/config.ini",string, day+2);
				format(string,sizeof(string),"ADV%d_m", strval(tmp));
				dini_IntSet("LVM/system/config.ini",string, month+1); }

			ADV[strval(tmp)]=msg;

			format(msg,sizeof(msg)," ***A*** %s", msg);
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, yellow, msg);

			format(string, sizeof(string), "14%s",msg);
			IRC_Say(EchoConnection2, EchoChan, string);

		}else Errorm(playerid);
		return 1;
	}



	if(strcmp(tmp,"/setstatus",true)==0) {
		if(Alevel[playerid] > 3) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if (isnull(tmp) || isnull(tmp2)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SETSTATUS <NAME/ID> <TEXT>");
				else SendClientMessage(playerid, yellow, " Usage: /SETSTATUS <NAME/ID> <TEXT>");
				return 1; }

			new lent=12;
			lent+=strlen(tmp);

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
					if (!dini_Exists(PF)) {
						if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
						else SendClientMessage(playerid, yellow," Invalid name.");
						return 1; }

					format(string,sizeof(string)," ([offline] %s) - %s - setstatus",tmp,name);
					SendMessageToAdminEx(playerid,string);
					format(string,sizeof(string),"NOTICE +%s :3([offline] %s) - %s - setstatus",EchoChan,tmp,name);
					IRC_SendRaw(EchoConnection1, string);
					if(Lang[playerid]==0) format(string, sizeof(string), " Статус назначен: %s",cmdtext[lent]);
					else format(string, sizeof(string), " Status set to: %s",cmdtext[lent]);
					SendClientMessage(playerid, cyan, string);

					dini_Set(PF,"playerstatus", cmdtext[lent]);

					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1; }

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
			format(string,sizeof(string)," ([%d] %s) - %s - setstatus",plid,ref,name);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :3([%d] %s) - %s - setstatus",EchoChan,plid,ref,name);
			IRC_SendRaw(EchoConnection1, string);
			if(Lang[plid]==0) format(string, sizeof(string), " Статус назначен: %s",cmdtext[lent]);
			else format(string, sizeof(string), " Status set to: %s",cmdtext[lent]);
			SendClientMessage(plid, cyan, string);
			if(Lang[playerid]==0) format(string, sizeof(string), " Статус назначен: %s",cmdtext[lent]);
			else format(string, sizeof(string), " Status set to: %s",cmdtext[lent]);
			SendClientMessage(playerid, cyan, string);
			format(string,sizeof(string), "%s",cmdtext[lent]); PlayerStatus[plid]=string;
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
			dini_Set(PF,"playerstatus", cmdtext[lent]);

		}else Errorm(playerid);
		return 1;
	}



	if(strcmp(tmp,"/setsponsor",true)==0) {
		if(Alevel[playerid] > 3) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SETSPONSOR <NAME/ID>");
				else SendClientMessage(playerid, yellow, " Usage: /SETSPONSOR <NAME/ID>");
				return 1; }


			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
					if (!dini_Exists(PF)) {
						if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
						else SendClientMessage(playerid, yellow," Invalid name.");
						return 1; }

					format(string,sizeof(string)," ([offline] %s) - %s - sponsor",tmp,name);
					SendMessageToAdminEx(playerid,string);
					format(string,sizeof(string),"NOTICE +%s :3([offline] %s) - %s - sponsor",EchoChan,tmp,name);
					IRC_SendRaw(EchoConnection1, string);
					if(Lang[playerid]==0) format(string, sizeof(string), " Спонсор назначен.");
					else format(string, sizeof(string), " Player is sponsor now.");
					SendClientMessage(playerid, cyan, string);

					dini_IntSet(PF,"sponsor", 1);
					dini_IntSet(PF,"cash", dini_Int(PF,"cash")+1000000);

					new year,month,day;
					getdate(year,month,day);
					if(month!=2) {
						dini_IntSet(PF,"sponsortimed", day);
						dini_IntSet(PF,"sponsortimem", month+1);
					}else{
						dini_IntSet(PF,"sponsortimed", day+2);
						dini_IntSet(PF,"sponsortimem", month+1); }
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1; }

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
			format(string,sizeof(string)," ([%d] %s) - %s - sponsor",plid,ref,name);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :3([%d] %s) - %s - sponsor",EchoChan,plid,ref,name);
			IRC_SendRaw(EchoConnection1, string);
			if(Lang[plid]==0) format(string, sizeof(string), " Ваш аккаунт теперь имеет статус 'спонсор' в течении 30 дней.");
			else format(string, sizeof(string), " Your account now has the 'sponsor' status during next 30 days.");
			SendClientMessage(plid, cyan, string);
			Givemoney(plid, 1000000);
			if(Lang[playerid]==0) format(string, sizeof(string), " Спонсор назначен.");
			else format(string, sizeof(string), " Player is sponsor now.");
			SendClientMessage(playerid, cyan, string);
			Sponsor[plid]=1;
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
			dini_IntSet(PF,"sponsor", 1);
			new year,month,day;
			getdate(year,month,day);
			if(month!=2) {
				dini_IntSet(PF,"sponsortimed", day);
				dini_IntSet(PF,"sponsortimem", month+1);
			}else{
				dini_IntSet(PF,"sponsortimed", day+2);
				dini_IntSet(PF,"sponsortimem", month+1); }

		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/mainnoob",true)==0) {
		if(Alevel[playerid] > 3) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if ((isnull(tmp)) || (isnull(tmp2))) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /MAINNOOB <ID> <NUM>");
				else SendClientMessage(playerid, yellow, " Usage: /MAINNOOB <ID> <NUM>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
			dini_IntSet(PF,"noob",strval(tmp2)); MainNoob[plid]=1;
			format(string,sizeof(string)," ([%d] %s) - %s: MainNoob",plid,ref,name);
			SendMessageToAdmins(string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: MainNoob",EchoChan,plid,ref,name);
			IRC_SendRaw(EchoConnection2, string);


		}else Errorm(playerid);
		return 1;
	}



	// HANDSUP
	if(strcmp(tmp, "/surrender", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
			return 1; }
	}

	// Drunk
	if(strcmp(tmp, "/drunk", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			ApplyAnimation(playerid,"PED", "WALK_DRUNK",4, 1, 1, 0, 0, -1);
			SendClientMessage(playerid,yellow," You are now walking like a drunk man"); // Walk Drunk
			return 1;
		}
	}
	// Place a Bomb
	if (strcmp(tmp, "/bomb", true) == 0) {
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4, 1, 0, 0, 0, -1); // Place Bomb
		SendClientMessage(playerid,yellow," You are planting a bomb");
		return 1;
	}
	// Police Arrest
	if (strcmp(tmp, "/arrest", true, 7) == 0) {
		ApplyAnimation( playerid,"ped", "ARRESTgun", 4, 1, 0, 0, 0, -1); // Gun Arrest
		SendClientMessage(playerid,yellow," You are arresting someone with your gun");
		return 1;
	}
	// Laugh
	if (strcmp(tmp, "/laugh", true) == 0) {
		ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4, 1, 0, 0, 0, -1); // Laugh
		SendClientMessage(playerid,yellow," You are laughing");
		return 1;
	}
	// Rob Lookout
	if (strcmp(tmp, "/lookout", true) == 0) {
		ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4, 1, 0, 0, 0, -1); // Rob Lookout
		SendClientMessage(playerid,yellow," You are looking out for cops");
		return 1;
	}
	// Rob Threat
	if (strcmp(tmp, "/rob", true) == 0) {
		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4, 1, 0, 0, 0, -1); // Rob
		SendClientMessage(playerid,yellow," You are robbing the place");
		return 1;
	}
	// Wank Out
	if (strcmp(tmp, "/wankin", true) == 0) {
		ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4, 1, 0, 0, 0, -1); // Wank In
		SendClientMessage(playerid,yellow," You are wanking");
		return 1;
	}
	// Police Arrest
	if (strcmp(tmp, "/coparrest", true) == 0) {
		ApplyAnimation(playerid, "POLICE", "plc_drgbst_01", 4, 1, 0, 0, 0, -1); // Arrest
		SendClientMessage(playerid,yellow," You are arresting someone");
		return 1;
	}
	// Wank In
	if (strcmp(tmp, "/wankout", true) == 0) {
		ApplyAnimation(playerid, "PAULNMAC", "wank_out", 4, 1, 0, 0, 0, -1); // Wank Out
		SendClientMessage(playerid,yellow," You are wanking out");
		return 1;
	}
	// Arrested
	if (strcmp(tmp, "/arrested", true) == 0) {
		ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4, 1, 0, 0, 0, -1); // Arrested
		SendClientMessage(playerid,yellow," You are getting arrested");
		return 1;
	}
	// Injury
	if (strcmp(tmp, "/injured", true) == 0) {
		ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4, 1, 0, 0, 0, -1); // Injured
		SendClientMessage(playerid,yellow," You are injured");
		return 1;
	}
	// Ass Slapped
	if (strcmp(tmp, "/slapped", true) == 0) {
		ApplyAnimation(playerid, "SWEET", "ho_ass_slapped", 4, 1, 0, 0, 0, -1); // Ass Slapped
		SendClientMessage(playerid,yellow," You are getting slapped");
		return 1;
	}
	// Female Smoking
	if (strcmp(tmp, "/fsmoking", true) == 0) {
		ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4, 1, 0, 0, 0, -1); // Female Smoking
		SendClientMessage(playerid,yellow," You are smoking");
		return 1;
	}
	// Cop Look
	if (strcmp(tmp, "/coplook", true) == 0) {
		ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4, 1, 0, 0, 0, -1); // Cop Looking
		SendClientMessage(playerid,yellow," You are looking");
		return 1;
	}
	// Lay Down
	if (strcmp(tmp, "/lay", true) == 0) {
		ApplyAnimation(playerid,"BEACH", "bather", 4, 1, 0, 0, 0, -1); // Lay down
		SendClientMessage(playerid,yellow," You are laying down");
		return 1;
	}
	// Take Cover
	if (strcmp(tmp, "/cover", true) == 0) {
		ApplyAnimation(playerid, "ped", "cower", 3, 1, 0, 0, 0, -1); // Taking Cover
		SendClientMessage(playerid,yellow," You are taking cover");
		return 1;
	}
	// Vomit
	if (strcmp(tmp, "/vomit", true) == 0) {
		ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3, 1, 0, 0, 0, -1); // Vomit BAH!
		SendClientMessage(playerid,yellow," You are 1puking :S");
		return 1;
	}
	// Eat Burger
	if (strcmp(tmp, "/eat", true) == 0) {
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3, 1, 0, 0, 0, -1); // Eat Burger
		SendClientMessage(playerid,yellow," You are eating a burger");
		return 1;
	}
	// Wave
	if (strcmp(tmp, "/wave", true) == 0) {
		ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3, 1, 0, 0, 0, -1); // Wave
		SendClientMessage(playerid,yellow," You are waving");
		return 1;
	}
	// Slap Ass
	if (strcmp(tmp, "/slapass", true) == 0) {
		ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4, 1, 0, 0, 0, -1); // Ass Slapping
		SendClientMessage(playerid,yellow," You are slapping someone's ass");
		return 1;
	}
	// Death Crawling
	if (strcmp(tmp, "/death", true) == 0) {
		ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4, 1, 0, 0, 0, -1); // Dead Crawling
		SendClientMessage(playerid,yellow," You are crawling dead");
		return 1;
	}
	// Dealer
	if (strcmp(tmp, "/deal", true) == 0) {
		ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4, 1, 0, 0, 0, -1); // Deal Drugs
		SendClientMessage(playerid,yellow," You are drug dealing");
		return 1;
	}
	// Kiss
	if (strcmp(tmp, "/kiss", true) == 0) {
		ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 3, 1, 0, 0, 0, -1); // Kiss
		SendClientMessage(playerid,yellow," You are kissing someone");
		return 1;
	}
	// Crack Dieing
	if (strcmp(tmp, "/crack", true) == 0) {
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4, 1, 0, 0, 0, -1); // Dieing of Crack
		SendClientMessage(playerid,yellow," You are trippin");
		return 1;
	}
	// Piss
	if (strcmp(tmp, "/piss", true) == 0) {
		ApplyAnimation(playerid, "PAULNMAC", "Piss_in", 3, 1, 0, 0, 0, -1); // Pissing
		SendClientMessage(playerid,yellow," You are pissing");
		return 1;
	}
	// Male Smoking
	if (strcmp(tmp, "/smoke", true) == 0) {
		ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4, 1, 0, 0, 0, -1); // Smoke
		SendClientMessage(playerid,yellow," You are smoking");
		return 1;
	}
	// Sit
	if (strcmp(tmp, "/sit", true) == 0) {
		ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4, 1, 0, 0, 0, -1); // Sit
		SendClientMessage(playerid,yellow," You are sitting down");
		return 1;
	}
	// Fuck U
	if (strcmp(tmp, "/fu", true) == 0) {
		ApplyAnimation( playerid,"ped", "fucku", 4.1, 0, 1, 1, 1, -1 ); // Wave fist / Pull fingers (with block hands)
		SendClientMessage(playerid,yellow," You are now pulling your fingers up");
		return 1;
	}
	// Strip-Tease
	if (strcmp(tmp, "/strip", true) == 0)
	{
		switch (cmdtext[7])
		{
		case 'a', 'A':{ ApplyAnimation( playerid,"STRIP", "strip_A", 4.1, 0, 1, 1, 1, -1 ); return 1; } // Strip
		case 'b', 'B':{ ApplyAnimation( playerid,"STRIP", "strip_B", 4.1, 0, 1, 1, 1, -1 ); return 1; } // Strip
		case 'c', 'C':{ ApplyAnimation( playerid,"STRIP", "strip_C", 4.1, 0, 1, 1, 1, -1 ); return 1; } // Strip
		case 'd', 'D':{ ApplyAnimation( playerid,"STRIP", "strip_D", 4.1, 0, 1, 1, 1, -1 ); return 1; } // Strip
		case 'e', 'E':{ ApplyAnimation( playerid,"STRIP", "strip_E", 4.1, 0, 1, 1, 1, -1 ); return 1; } // Strip
		case 'f', 'F':{ ApplyAnimation( playerid,"STRIP", "strip_F", 4.1, 0, 1, 1, 1, -1 ); return 1; } // Strip
		case 'g', 'G':{ ApplyAnimation( playerid,"STRIP", "strip_G", 4.1, 0, 1, 1, 1, -1 ); return 1; } // Strip
		}   SendClientMessage(playerid,yellow," You are now stripping you pervert");
		return 1;
	}
	// Idle Chat
	if(strcmp(tmp, "/chat", true) == 0)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,-1);
			SendClientMessage(playerid,yellow," You are now talking"); // Chat
			return 1;
		}
	}
	// START DANCING
	if(strcmp(tmp, "/dance", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			// Get the dance style param
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid,yellow," Usage: /dance [style 1-3]");
				return 1; }

			if(strval(tmp) < 1 || strval(tmp) > 3) {
				SendClientMessage(playerid,yellow," Usage: /dance [style 1-3]");
				return 1; }

			if(strval(tmp) == 1) {
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
			} else if(strval(tmp) == 2) {
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
			} else if(strval(tmp) == 3) {
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
			}
			return 1; }
	}

	if(strcmp(tmp, "/dance2", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			// Get the dance style param
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid,yellow," Usage: /dance2 [style 1-13]");
				return 1; }

			switch(strval(tmp)) {
			case 1: ApplyAnimation(playerid, "DANCING", "bd_clap", 4.0,1,1,0,0,0);
			case 2: ApplyAnimation(playerid, "DANCING", "bd_clap1", 4.0,1,1,0,0,0);
			case 3: ApplyAnimation(playerid, "DANCING", "dance_loop", 4.0,1,1,0,0,0);
			case 4: ApplyAnimation(playerid, "DANCING", "DAN_Down_A", 4.0,1,1,0,0,0);
			case 5: ApplyAnimation(playerid, "DANCING", "DAN_Left_A", 4.0,1,1,0,0,0);
			case 6: ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 4.0,1,1,0,0,0);
			case 7: ApplyAnimation(playerid, "DANCING", "DAN_Right_A", 4.0,1,1,0,0,0);
			case 8: ApplyAnimation(playerid, "DANCING", "DAN_Up_A", 4.0,1,1,0,0,0);
			case 9: ApplyAnimation(playerid, "DANCING", "dnce_M_a", 4.0,1,1,0,0,0);
			case 10: ApplyAnimation(playerid, "DANCING", "dnce_M_b", 4.0,1,1,0,0,0);
			case 11: ApplyAnimation(playerid, "DANCING", "dnce_M_c", 4.0,1,1,0,0,0);
			case 12: ApplyAnimation(playerid, "DANCING", "dnce_M_d", 4.0,1,1,0,0,0);
			case 13: ApplyAnimation(playerid, "DANCING", "dnce_M_e", 4.0,1,1,0,0,0);
			}

			return 1; }
	}



	if(strcmp(tmp,"/stopan",true)==0) {
		SendClientMessage(playerid, yellow, "Stoped");
		ClearAnimations(playerid);
		return 1;
	}

	if(strcmp(tmp, "/animbar", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbar [1-12]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 12) {
			SendClientMessage(playerid, yellow, " Usage: /animbar [1-12]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BAR","Barcustom_get",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"BAR","Barcustom_loop",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"BAR","Barcustom_order",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"BAR","Barserve_bottle",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"BAR","Barserve_glass",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"BAR","Barserve_in",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"BAR","Barserve_loop",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"BAR","Barserve_order",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"BAR","BARman_idle",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animball", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animball [1-11]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 11) {
			SendClientMessage(playerid, yellow, " Usage: /animball [1-11]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BASEBALL","Bat_1",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"BASEBALL","Bat_2",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"BASEBALL","Bat_2",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"BASEBALL","Bat_block",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"BASEBALL","Bat_Hit_1",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"BASEBALL","Bat_Hit_2",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"BASEBALL","Bat_Hit_3",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"BASEBALL","Bat_IDLE",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"BASEBALL","Bat_M",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"BASEBALL","BAT_PART",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animfire", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfire [1-13]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 13) {
			SendClientMessage(playerid, yellow, " Usage: /animfire [1-13]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Fire1",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Fire2",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Fire3",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"BD_FIRE","BD_GF_Wave",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_01",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_02",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_03",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_04",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"BD_FIRE","BD_Panic_Loop",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
		} else if(animationped == 13) {
			ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbeach", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbeach [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animbeach [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BEACH","bather",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"BEACH","BD_Fire3",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"BEACH","ParkSit_W_loop",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animinf", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animinf [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animinf [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BF_injection","BF_getin_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"BF_injection","BF_getin_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"BF_injection","BF_getout_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"BF_injection","BF_getout_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbiked", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbiked [1-18]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 18) {
			SendClientMessage(playerid, yellow, " Usage: /animbiked [1-18]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Back",4.1,0,1,1,1,1);
		}else if(animationped == 1) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BIKED","BIKEd_hit",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BIKED","BIKEd_jumponL",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"BIKED","BIKEd_jumponR",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"BIKED","BIKEd_kick",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Left",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"BIKED","BIKEd_passenger",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"BIKED","BIKEd_pushes",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Ride",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Right",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"BIKED","BIKEd_shuffle",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbp", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbp [1-7]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 7) {
			SendClientMessage(playerid, yellow, " Usage: /animbp [1-7]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"benchpress","gym_bp_down",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"benchpress","gym_bp_getoff",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"benchpress","gym_bp_geton",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"benchpress","gym_bp_up_A",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"benchpress","gym_bp_up_B",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"benchpress","gym_bp_up_smooth",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbh", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbh [1-18]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 18) {
			SendClientMessage(playerid, yellow, " Usage: /animbh [1-18]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Back",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_hit",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_jumponL",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_jumponR",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_kick",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Left",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_passenger",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_pushes",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Ride",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Right",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animms", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animms [1-8]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 8) {
			SendClientMessage(playerid, yellow, " Usage: /animms [1-8]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Back",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BIKEH","BIKEh_getoffRHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animfood", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfood [1-33]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 33) {
			SendClientMessage(playerid, yellow, " Usage: /animfood [1-33]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"FOOD","EAT_Chicken",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"FOOD","EAT_Vomit_P",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Left",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Right",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Bkw",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Left",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Right",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Eat1",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Eat2",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Eat3",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_In",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_In_L",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_In_R",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Look",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Out_180",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Out_L_180",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Out_R_180",4.1,0,1,1,1,1);
		}else if(animationped == 25) {
			ApplyAnimation(playerid,"FOOD","SHP_Thank",4.1,0,1,1,1,1);
		}else if(animationped == 26) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_In",4.1,0,1,1,1,1);
		}else if(animationped == 27) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift",4.1,0,1,1,1,1);
		}else if(animationped == 28) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_In",4.1,0,1,1,1,1);
		}else if(animationped == 29) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 30) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Out",4.1,0,1,1,1,1);
		}else if(animationped == 31) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Out",4.1,0,1,1,1,1);
		}else if(animationped == 32) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Pose",4.1,0,1,1,1,1);
		}else if(animationped == 33) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Return",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animms", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animms [1-41]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 41) {
			SendClientMessage(playerid, yellow, " Usage: /animms [1-41]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"MISC","bitchslap",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"MISC","BMX_celebrate",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"MISC","BMX_comeon",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"MISC","bmx_idleloop_01",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"MISC","bmx_idleloop_02",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"MISC","bmx_talkleft_in",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"MISC","bmx_talkleft_loop",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"MISC","bmx_talkleft_out",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"MISC","bmx_talkright_in",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"MISC","bmx_talkright_loop",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"MISC","bmx_talkright_out",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"MISC","bng_wndw",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"MISC","bng_wndw_02",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"MISC","Case_pickup",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"MISC","door_jet",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"MISC","GRAB_L",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"MISC","GRAB_R",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"MISC","Hiker_Pose",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"MISC","Hiker_Pose_L",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"MISC","Idle_Chat_02",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"MISC","KAT_Throw_K",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"MISC","KAT_Throw_O",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"MISC","KAT_Throw_P",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"MISC","PASS_Rifle_O",4.1,0,1,1,1,1);
		}else if(animationped == 25) {
			ApplyAnimation(playerid,"MISC","PASS_Rifle_Ped",4.1,0,1,1,1,1);
		}else if(animationped == 26) {
			ApplyAnimation(playerid,"MISC","PASS_Rifle_Ply",4.1,0,1,1,1,1);
		}else if(animationped == 27) {
			ApplyAnimation(playerid,"MISC","pickup_box",4.1,0,1,1,1,1);
		}else if(animationped == 28) {
			ApplyAnimation(playerid,"MISC","Plane_door",4.1,0,1,1,1,1);
		}else if(animationped == 29) {
			ApplyAnimation(playerid,"MISC","Plane_exit",4.1,0,1,1,1,1);
		}else if(animationped == 30) {
			ApplyAnimation(playerid,"MISC","Plane_hijack",4.1,0,1,1,1,1);
		}else if(animationped == 31) {
			ApplyAnimation(playerid,"MISC","Plunger_01",4.1,0,1,1,1,1);
		}else if(animationped == 32) {
			ApplyAnimation(playerid,"MISC","Plyrlean_loop",4.1,0,1,1,1,1);
		}else if(animationped == 33) {
			ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,1,1,1,1);
		}else if(animationped == 34) {
			ApplyAnimation(playerid,"MISC","Run_Dive",4.1,0,1,1,1,1);
		}else if(animationped == 35) {
			ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,0,1,1,1,1);
		}else if(animationped == 36) {
			ApplyAnimation(playerid,"MISC","SEAT_LR",4.1,0,1,1,1,1);
		}else if(animationped == 37) {
			ApplyAnimation(playerid,"MISC","Seat_talk_01",4.1,0,1,1,1,1);
		}else if(animationped == 38) {
			ApplyAnimation(playerid,"MISC","Seat_talk_02",4.1,0,1,1,1,1);
		}else if(animationped == 39) {
			ApplyAnimation(playerid,"MISC","SEAT_watch",4.1,0,1,1,1,1);
		}else if(animationped == 40) {
			ApplyAnimation(playerid,"MISC","smalplane_door",4.1,0,1,1,1,1);
		}else if(animationped == 41) {
			ApplyAnimation(playerid,"MISC","smlplane_door",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbikelp", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbikelp [1-9]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 9) {
			SendClientMessage(playerid, yellow, " Usage: /animbikelp [1-9]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BIKELEAP","bk_blnce_in",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BIKELEAP","bk_blnce_out",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BIKELEAP","bk_jmp",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BIKELEAP","bk_rdy_in",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BIKELEAP","bk_rdy_out",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BIKELEAP","struggle_cesar",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BIKELEAP","struggle_driver",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BIKELEAP","truck_driver",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BIKELEAP","truck_getin",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbikes", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbikes [1-18]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 18) {
			SendClientMessage(playerid, yellow, " Usage: /animbikes [1-18]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Back",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BIKES","BIKEs_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BIKES","BIKEs_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BIKES","BIKEs_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BIKES","BIKEs_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BIKES","BIKEs_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BIKES","BIKEs_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BIKES","BIKEs_hit",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"BIKES","BIKEs_jumponL",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"BIKES","BIKEs_jumponR",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"BIKES","BIKEs_kick",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Left",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"BIKES","BIKEs_passenger",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"BIKES","BIKEs_pushes",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Ride",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Right",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"BIKES","BIKEs_Still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbikev", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbikev [1-18]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 18) {
			SendClientMessage(playerid, yellow, " Usage: /animbikev [1-18]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Back",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_hit",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_jumponL",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_jumponR",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_kick",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Left",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_passenger",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_pushes",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Ride",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Right",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"BIKEV","BIKEv_Still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbmx", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbmx [1-18]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 18) {
			SendClientMessage(playerid, yellow, " Usage: /animbmx [1-18]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BMX","BMX_back",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BMX","BMX_bunnyhop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BMX","BMX_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BMX","BMX_driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BMX","BMX_driveby_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BMX","BMX_fwd",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BMX","BMX_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BMX","BMX_pushes",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BMX","BMX_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"BMX","BMX_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"BMX","BMX_jumponL",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"BMX","BMX_jumponR",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"BMX","BMX_Left",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"BMX","BMX_pedal",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"BMX","BMX_Ride",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"BMX","BMX_Right",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"BMX","BMX_sprint",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"BMX","BMX_still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbikedbz", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbikedbz [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animbikedbz [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animchase", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animchase [1-25]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 25) {
			SendClientMessage(playerid, yellow, " Usage: /animchase [1-25]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"MD_CHASE","Carhit_Hangon",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"MD_CHASE","Carhit_Tumble",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"MD_CHASE","donutdrop",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L1",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L2",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L3",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R1",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R2",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R3",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"MD_CHASE","Hangon_Stun_loop",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"MD_CHASE","Hangon_Stun_Turn",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_2_HANG",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Jmp_BL",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Jmp_F",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_BL",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_BL",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_F",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_F",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll_F",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Punch",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Punch_F",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Shot_F",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,1);
		}else if(animationped == 25) {
			ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Loop",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbox", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbox [1-10]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 10) {
			SendClientMessage(playerid, yellow, " Usage: /animbox [1-10]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BOX","boxhipin",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BOX","boxhipup",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BOX","boxshdwn",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BOX","boxshup",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BOX","bxhipwlk",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BOX","bxhwlki",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BOX","bxshwlk",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BOX","bxshwlki",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BOX","bxwlko",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"BOX","catch_box",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbomber", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbomber [1-6]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 6) {
			SendClientMessage(playerid, yellow, " Usage: /animbomber [1-6]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_2Idle",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_In",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbsp", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbsp [1-41]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 41) {
			SendClientMessage(playerid, yellow, " Usage: /animbsp [1-41]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_def_jump_shot",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_def_stepL",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_def_stepR",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Gli",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Gli_O",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnch",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnch_O",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnd",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_O",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idle",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idle2",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idle2_O",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop_O",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_idle_O",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Cancel",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Cancel_0",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_End",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot_O",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Net_Dnk_O",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,1,1,1,1);
		}else if(animationped == 25) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup_O",4.1,0,1,1,1,1);
		}else if(animationped == 26) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_react_miss",4.1,0,1,1,1,1);
		}else if(animationped == 27) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_react_score",4.1,0,1,1,1,1);
		}else if(animationped == 28) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_run",4.1,0,1,1,1,1);
		}else if(animationped == 29) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_run_O",4.1,0,1,1,1,1);
		}else if(animationped == 30) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_L",4.1,0,1,1,1,1);
		}else if(animationped == 31) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_L_O",4.1,0,1,1,1,1);
		}else if(animationped == 32) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_R",4.1,0,1,1,1,1);
		}else if(animationped == 33) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_R_O",4.1,0,1,1,1,1);
		}else if(animationped == 34) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_walk",4.1,0,1,1,1,1);
		}else if(animationped == 35) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_L",4.1,0,1,1,1,1);
		}else if(animationped == 36) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_L_O",4.1,0,1,1,1,1);
		}else if(animationped == 37) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_R",4.1,0,1,1,1,1);
		}else if(animationped == 38) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_R_O",4.1,0,1,1,1,1);
		}else if(animationped == 39) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_O",4.1,0,1,1,1,1);
		}else if(animationped == 40) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_start",4.1,0,1,1,1,1);
		}else if(animationped == 41) {
			ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_start_O",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcamera", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcamera [1-14]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 14) {
			SendClientMessage(playerid, yellow, " Usage: /animcamera [1-14]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CAMERA","camcrch_cmon",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"CAMERA","camcrch_idleloop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"CAMERA","camcrch_stay",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"CAMERA","camcrch_to_camstnd",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"CAMERA","camstnd_idleloop",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"CAMERA","camstnd_lkabt",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"CAMERA","camstnd_to_camcrch",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"CAMERA","piccrch_in",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"CAMERA","piccrch_out",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"CAMERA","piccrch_take",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"CAMERA","picstnd_in",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"CAMERA","picstnd_out",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"CAMERA","picstnd_take",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animgym", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animgym [1-24]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 24) {
			SendClientMessage(playerid, yellow, " Usage: /animgym [1-24]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_celebrate",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_faster",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_getoff",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_geton",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_pedal",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_slow",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_bike_still",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_jog_falloff",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_shadowbox",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_celebrate",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_falloff",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_getoff",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_geton",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_jog",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_sprint",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_tired",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_tread_walk",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"GYMNASIUM","gym_walk_falloff",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"GYMNASIUM","Pedals_fast",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"GYMNASIUM","Pedals_med",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"GYMNASIUM","Pedals_slow",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"GYMNASIUM","Pedals_still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animpara", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animpara [1-22]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 22) {
			SendClientMessage(playerid, yellow, " Usage: /animpara [1-22]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_skyDive",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_Accel",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_skyDive_DIE",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_L",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_R",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_decel",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_decel_O",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_float",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_float_O",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Land",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Land_O",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Land_Water",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Land_Water_O",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_open",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_open_O",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_Land_O",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_Loop_O",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_O",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_steerL",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_steerL_O",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"PARACHUTE","PARA_steerR_O",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animgangs", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animgangs [1-22]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 22) {
			SendClientMessage(playerid, yellow, " Usage: /animgangs [1-22]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"GANGS","DEALER_IDLE",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"GANGS","drnkbr_prtl",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"GANGS","drnkbr_prtl_F",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"GANGS","DRUGS_BUY",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"GANGS","hndshkcb",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"GANGS","hndshkda",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"GANGS","hndshkea",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"GANGS","Invite_No",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"GANGS","Invite_Yes",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"GANGS","leanIDLE",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"GANGS","leanIN",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"GANGS","leanOUT",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkA",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkB",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkCt",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkD",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkE",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkF",4.1,0,1,1,1,1);
		}else if(animationped == 25) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkG",4.1,0,1,1,1,1);
		}else if(animationped == 26) {
			ApplyAnimation(playerid,"GANGS","prtial_gngtlkH",4.1,0,1,1,1,1);
		}else if(animationped == 27) {
			ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.1,0,1,1,1,1);
		}else if(animationped == 28) {
			ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01",4.1,0,1,1,1,1);
		}else if(animationped == 29) {
			ApplyAnimation(playerid,"GANGS","shake_cara",4.1,0,1,1,1,1);
		}else if(animationped == 30) {
			ApplyAnimation(playerid,"GANGS","shake_carK",4.1,0,1,1,1,1);
		}else if(animationped == 31) {
			ApplyAnimation(playerid,"GANGS","shake_carSH",4.1,0,1,1,1,1);
		}else if(animationped == 32) {
			ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.1,0,1,1,1,1);
		}else if(animationped == 33) {
			ApplyAnimation(playerid,"GANGS","smkcig_prtl_F",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animlowrider", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animlowrider [1-39]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 39) {
			SendClientMessage(playerid, yellow, " Usage: /animlowrider [1-39]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"LOWRIDER","F_smklean_loop",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_bdbnce",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_hair",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_hurry",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_idleloop",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_idle_to_l0",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_bnce",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_loop",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_to_l1",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l12_to_l0",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_bnce",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_loop",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_to_l2",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_bnce",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_loop",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_to_l3",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l345_to_l1",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_bnce",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_loop",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_to_l4",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_bnce",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_loop",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_to_l5",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l5_bnce",4.1,0,1,1,1,1);
		}else if(animationped == 25) {
			ApplyAnimation(playerid,"LOWRIDER","lrgirl_l5_loop",4.1,0,1,1,1,1);
		}else if(animationped == 26) {
			ApplyAnimation(playerid,"LOWRIDER","M_smklean_loop",4.1,0,1,1,1,1);
		}else if(animationped == 27) {
			ApplyAnimation(playerid,"LOWRIDER","M_smkstnd_loop",4.1,0,1,1,1,1);
		}else if(animationped == 28) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkB",4.1,0,1,1,1,1);
		}else if(animationped == 29) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkC",4.1,0,1,1,1,1);
		}else if(animationped == 30) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkD",4.1,0,1,1,1,1);
		}else if(animationped == 31) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkE",4.1,0,1,1,1,1);
		}else if(animationped == 32) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkF",4.1,0,1,1,1,1);
		}else if(animationped == 33) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkG",4.1,0,1,1,1,1);
		}else if(animationped == 34) {
			ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkH",4.1,0,1,1,1,1);
		}else if(animationped == 35) {
			ApplyAnimation(playerid,"LOWRIDER","RAP_A_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 36) {
			ApplyAnimation(playerid,"LOWRIDER","RAP_B_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 37) {
			ApplyAnimation(playerid,"LOWRIDER","RAP_C_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 38) {
			ApplyAnimation(playerid,"LOWRIDER","Sit_relaxed",4.1,0,1,1,1,1);
		}else if(animationped == 39) {
			ApplyAnimation(playerid,"LOWRIDER","Tap_hand",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animlookers", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animlookers [1-25]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 25) {
			SendClientMessage(playerid, yellow, " Usage: /animlookers [1-25]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkaround_in",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkaround_loop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkaround_out",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkup_in",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkup_loop",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkup_out",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"ON_LOOKERS","lkup_point",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_cower",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_hide",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_in",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_loop",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_out",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_point",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"ON_LOOKERS","panic_shout",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"ON_LOOKERS","Pointup_in",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"ON_LOOKERS","Pointup_loop",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"ON_LOOKERS","Pointup_out",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"ON_LOOKERS","Pointup_shout",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"ON_LOOKERS","point_in",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"ON_LOOKERS","point_loop",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"ON_LOOKERS","point_out",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_01",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_in",4.1,0,1,1,1,1);
		}else if(animationped == 25) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_loop",4.1,0,1,1,1,1);
		}else if(animationped == 26) {
			ApplyAnimation(playerid,"ON_LOOKERS","shout_out",4.1,0,1,1,1,1);
		}else if(animationped == 27) {
			ApplyAnimation(playerid,"ON_LOOKERS","wave_in",4.1,0,1,1,1,1);
		}else if(animationped == 28) {
			ApplyAnimation(playerid,"ON_LOOKERS","wave_loop",4.1,0,1,1,1,1);
		}else if(animationped == 25) {
			ApplyAnimation(playerid,"ON_LOOKERS","wave_out",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcarchat", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcarchat [1-20]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 20) {
			SendClientMessage(playerid, yellow, " Usage: /animcarchat [1-20]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_in",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_loopA",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_loopA_to_B",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_loopB",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_loopB_to_A",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"CAR_CHAT","carfone_out",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_BR",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_FL",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_FR",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc2_FL",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_BR",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_FL",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_FR",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BL",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BR",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_FL",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_FR",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"CAR_CHAT","car_talkm_in",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"CAR_CHAT","car_talkm_loop",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"CAR_CHAT","car_talkm_out",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcasino", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcasino [1-23]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 23) {
			SendClientMessage(playerid, yellow, " Usage: /animcasino [1-23]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CASINO","cards_in",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"CASINO","cards_loop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"CASINO","cards_lose",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"CASINO","cards_out",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"CASINO","cards_pick_01",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"CASINO","cards_pick_02",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"CASINO","cards_raise",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"CASINO","cards_win",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"CASINO","manwinb",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"CASINO","manwind",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"CASINO","Roulette_in",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"CASINO","Roulette_loop",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"CASINO","Roulette_lose",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"CASINO","Roulette_out",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"CASINO","Roulette_win",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"CASINO","Slot_bet_02",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"CASINO","Slot_in",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"CASINO","Slot_lose_out",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"CASINO","Slot_Plyr",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"CASINO","Slot_wait",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"CASINO","Slot_win_out",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"CASINO","wof",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbuddy", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbuddy [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animbuddy [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BUDDY","buddy_crouchfire",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BUDDY","buddy_crouchreload",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BUDDY","buddy_fire",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BUDDY","buddy_fire_poor",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BUDDY","buddy_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbus", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbus [1-9]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 9) {
			SendClientMessage(playerid, yellow, " Usage: /animbus [1-9]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BUS","BUS_close",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BUS","BUS_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BUS","BUS_getin_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BUS","BUS_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BUS","BUS_getout_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BUS","BUS_jacked_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BUS","BUS_open",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BUS","BUS_open_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BUS","BUS_pullout_LHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcar", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcar [1-11]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 11) {
			SendClientMessage(playerid, yellow, " Usage: /animcar [1-11]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CAR","Fixn_Car_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"CAR","Fixn_Car_Out",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"CAR","flag_drop",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"CAR","Sit_relaxed",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"CAR","Tap_hand",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"CAR","Tyd2car_bump",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"CAR","Tyd2car_high",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"CAR","Tyd2car_low",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"CAR","Tyd2car_med",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"CAR","Tyd2car_TurnL",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"CAR","Tyd2car_TurnR",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcarry", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcarry [1-7]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 7) {
			SendClientMessage(playerid, yellow, " Usage: /animcarry [1-7]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"CARRY","liftup",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"CARRY","liftup05",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"CARRY","liftup105",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"CARRY","putdwn",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"CARRY","putdwn05",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"CARRY","putdwn105",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animintshop", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animintshop [1-8]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 8) {
			SendClientMessage(playerid, yellow, " Usage: /animintshop [1-8]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"INT_SHOP","shop_cashier",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"INT_SHOP","shop_in",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"INT_SHOP","shop_lookA",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"INT_SHOP","shop_lookB",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"INT_SHOP","shop_loop",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"INT_SHOP","shop_out",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"INT_SHOP","shop_pay",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animjst", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animjst [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animjst [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"JST_BUISNESS","girl_01",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"JST_BUISNESS","girl_02",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"JST_BUISNESS","player_01",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"JST_BUISNESS","smoke_01",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animkart", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animkart [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animkart [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"KART","KART_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"KART","KART_getin_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"KART","KART_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"KART","KART_getout_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animkissing", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animkissing [1-14]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 14) {
			SendClientMessage(playerid, yellow, " Usage: /animkissing [1-14]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"KISSING","BD_GF_Wave",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"KISSING","gfwave2",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"KISSING","GF_CarArgue_01",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"KISSING","GF_CarArgue_02",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"KISSING","GF_CarSpot",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"KISSING","GF_StreetArgue_01",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"KISSING","GF_StreetArgue_02",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"KISSING","gift_give",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_01",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_02",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_03",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"KISSING","Playa_Kiss_02",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"KISSING","Playa_Kiss_03",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animknife", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animknife [1-14]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 14) {
			SendClientMessage(playerid, yellow, " Usage: /animknife [1-14]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Die",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"KNIFE","KILL_Knife_Player",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"KNIFE","KILL_Partial",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"KNIFE","knife_2",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"KNIFE","knife_3",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"KNIFE","knife_4",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"KNIFE","Knife_G",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"KNIFE","knife_hit_1",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"KNIFE","knife_hit_2",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"KNIFE","knife_IDLE",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"KNIFE","knife_hit_3",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"KNIFE","knife_part",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"KNIFE","WEAPON_knifeidle",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animlapdan", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animlapdan [1-6]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 6) {
			SendClientMessage(playerid, yellow, " Usage: /animlapdan [1-6]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"LAPDAN1","LAPDAN_D",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"LAPDAN1","LAPDAN_P",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"LAPDAN2","LAPDAN_D",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"LAPDAN2","LAPDAN_P",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"LAPDAN3","LAPDAN_D",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"LAPDAN3","LAPDAN_P",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animdend", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animdend [1-8]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 8) {
			SendClientMessage(playerid, yellow, " Usage: /animdend [1-8]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"MD_END","END_SC1_PLY",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"MD_END","END_SC1_RYD",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"MD_END","END_SC1_SMO",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"MD_END","END_SC1_SWE",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"MD_END","END_SC2_PLY",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"MD_END","END_SC2_RYD",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"MD_END","END_SC2_SMO",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"MD_END","END_SC2_SWE",4.1,0,1,1,1,1);
		}
		return 1;
	}

	if(strcmp(tmp, "/animmedic", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animmedic [1]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 1) {
			SendClientMessage(playerid, yellow, " Usage: /animmedic [1]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animmtb", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animmtb [1-18]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 18) {
			SendClientMessage(playerid, yellow, " Usage: /animmtb [1-18]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"MTB","MTB_back",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"MTB","MTB_bunnyhop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"MTB","MTB_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"MTB","MTB_driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"MTB","MTB_driveby_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"MTB","MTB_fwd",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"MTB","MTB_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"MTB","MTB_pushes",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"MTB","MTB_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"MTB","MTB_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"MTB","MTB_jumponL",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"MTB","MTB_jumponR",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"MTB","MTB_Left",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"MTB","MTB_pedal",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"MTB","MTB_Ride",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"MTB","MTB_Right",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"MTB","MTB_sprint",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"MTB","MTB_still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animmusc", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animmusc [1-17]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 17) {
			SendClientMessage(playerid, yellow, " Usage: /animmusc [1-17]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"MUSCULAR","MscleWalkst_armed",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"MUSCULAR","MscleWalkst_Csaw",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"MUSCULAR","Mscle_rckt_run",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"MUSCULAR","Mscle_rckt_walkst",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"MUSCULAR","Mscle_run_Csaw",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleIdle",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_armed",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_Csaw",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_rocket",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleRun",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleRun_armed",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleSprint",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleWalk",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleWalkstart",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"MUSCULAR","MuscleWalk_armed",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"MUSCULAR","Musclewalk_Csaw",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"MUSCULAR","Musclewalk_rocket",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animotb", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animotb [1-11]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 11) {
			SendClientMessage(playerid, yellow, " Usage: /animotb [1-11]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"OTB","betslp_in",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"OTB","betslp_loop",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"OTB","betslp_out",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"OTB","betslp_tnk",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"OTB","wtchrace_cmon",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"OTB","wtchrace_in",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"OTB","wtchrace_loop",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"OTB","wtchrace_lose",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"OTB","wtchrace_out",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"OTB","wtchrace_win",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animnevada", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animnevada [1-2]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 2) {
				SendClientMessage(playerid, yellow, " Usage: /animnevada [1-2]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"NEVADA","NEVADA_getin",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"NEVADA","NEVADA_getout",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animpark", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animpark [1-3]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 3) {
				SendClientMessage(playerid, yellow, " Usage: /animpark [1-3]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"PARK","Tai_Chi_in",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.1,0,1,1,1,1);
			} else if(animationped == 3) {
				ApplyAnimation(playerid,"PARK","Tai_Chi_Out",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animpaul", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animpaul [1-12]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 12) {
			SendClientMessage(playerid, yellow, " Usage: /animpaul [1-12]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"PAULNMAC","Piss_loop",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"PAULNMAC","Piss_out",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Argue1_A",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Argue1_B",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Argue2_A",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Argue2_B",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Loop_A",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"PAULNMAC","PnM_Loop_B",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"PAULNMAC","wank_in",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"PAULNMAC","wank_loop",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"PAULNMAC","wank_out",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animsaw", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animsaw [1-10]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 12) {
			SendClientMessage(playerid, yellow, " Usage: /animsaw [1-10]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_1",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_2",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_3",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_G",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_1",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_2",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_3",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"CHAINSAW","IDLE_csaw",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"CHAINSAW","WEAPON_csawlo",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animchoppa", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animchoppa [1-18]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 18) {
			SendClientMessage(playerid, yellow, " Usage: /animchoppa [1-18]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_back",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_bunnyhop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_driveby_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_fwd",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_jumponL",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_jumponR",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_Left",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_pedal",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_Pushes",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_ride",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_Right",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_sprint",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"CHOPPA","CHOPPA_Still",4.1,0,1,1,1,1);
		}
		return 1;
	}

	if(strcmp(tmp, "/animclothes", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animclothes [1-13]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 13) {
			SendClientMessage(playerid, yellow, " Usage: /animclothes [1-13]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Buy",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"CLOTHES","CLO_In",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Out",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Hat",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_In",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_In_O",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Legs",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Loop",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Out",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Out_O",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Shoes",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Torso",4.1,0,1,1,1,1);
		} else if(animationped == 13) {
			ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Watch",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcoach", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcoach [1-6]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 6) {
			SendClientMessage(playerid, yellow, " Usage: /animcoach [1-6]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"COACH","COACH_inL",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"COACH","COACH_inR",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"COACH","COACH_opnL",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"COACH","COACH_opnR",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"COACH","COACH_outL",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"COACH","COACH_outR",4.1,0,1,1,1,1);
		}
		return 1;
	}

	if(strcmp(tmp, "/animcolt", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcolt [1-7]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 7) {
			SendClientMessage(playerid, yellow, " Usage: /animcolt [1-7]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"COLT45","2guns_crouchfire",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"COLT45","colt45_crouchfire",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"COLT45","colt45_crouchreload",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"COLT45","colt45_fire",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"COLT45","colt45_fire_2hands",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"COLT45","colt45_reload",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"COLT45","sawnoff_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcopa", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcopa [1-12]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 12) {
			SendClientMessage(playerid, yellow, " Usage: /animcopa[1-12]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_in",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_loop",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_nod",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_out",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_shake",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_in",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_loop",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_nod",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_out",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_shake",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcod", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcod [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animcod [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_B",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_FT",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_L",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_R",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcrack", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcrack[1-9]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 9) {
			SendClientMessage(playerid, yellow, " Usage: /animcrack [1-9]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"CRACK","crckdeth1",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"CRACK","crckdeth3",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"CRACK","crckdeth4",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"CRACK","crckidle1",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"CRACK","crckidle3",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animcrib", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animcrib [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animcrib [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"CRIB","CRIB_Console_Loop",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"CRIB","PED_Console_Loop",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"CRIB","PED_Console_Loose",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"CRIB","PED_Console_Win",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animjump", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animjump [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animjump [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"DAM_JUMP","DAM_Dive_Loop",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"DAM_JUMP","DAM_Land",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"DAM_JUMP","DAM_Launch",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"DAM_JUMP","Jump_Roll",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"DAM_JUMP","SF_JumpWall",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animdance", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animdance [1-13]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 13) {
			SendClientMessage(playerid, yellow, " Usage: /animdance [1-13]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"DANCING","bd_clap",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"DANCING","dance_loop",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,0,1,1,1,1);
		} else if(animationped == 13) {
			ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animdealer", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animdealer [1-7]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 7) {
			SendClientMessage(playerid, yellow, " Usage: /animdealer [1-7]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"DEALER","DEALER_DEAL",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"DEALER","DEALER_IDLE",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"DEALER","DEALER_IDLE_01",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"DEALER","DEALER_IDLE_02",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"DEALER","DEALER_IDLE_03",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animdildo", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animdildo [1-9]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 9) {
			SendClientMessage(playerid, yellow, " Usage: /animdildo [1-9]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"DILDO","DILDO_1",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"DILDO","DILDO_2",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"DILDO","DILDO_3",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"DILDO","DILDO_block",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"DILDO","DILDO_G",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"DILDO","DILDO_Hit_1",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"DILDO","DILDO_Hit_2",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"DILDO","DILDO_Hit_3",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"DILDO","DILDO_IDLE",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animdodge", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animdodge [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animdodge [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"DODGE","Cover_Dive_01",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"DODGE","Cover_Dive_02",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"DODGE","Crushed",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"DODGE","Crush_Jump",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animdozer", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animdozer [1-9]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 9) {
			SendClientMessage(playerid, yellow, " Usage: /animdozer [1-9]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"DOZER","DOZER_Align_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"DOZER","DOZER_Align_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"DOZER","DOZER_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"DOZER","DOZER_getin_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"DOZER","DOZER_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"DOZER","DOZER_getout_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"DOZER","DOZER_Jacked_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"DOZER","DOZER_Jacked_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"DOZER","DOZER_pullout_LHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animdrivebys", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animdrivebys [1-8]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 8) {
			SendClientMessage(playerid, yellow, " Usage: /animdrivebys [1-8]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS_Bwd",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS_Bwd",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyTop_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyTop_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animfat", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfat [1-17]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 17) {
			SendClientMessage(playerid, yellow, " Usage: /animfat [1-17]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"FAT","FatIdle",4.1,0,1,1,1,1);
		}else if(animationped == 1) {
			ApplyAnimation(playerid,"FAT","FatIdle_armed",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"FAT","FatIdle_Csaw",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"FAT","FatIdle_Rocket",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"FAT","FatRun",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"FAT","FatRun_armed",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"FAT","FatRun_Csaw",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"FAT","FatRun_Rocket",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"FAT","FatSprint",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"FAT","FatWalk",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"FAT","FatWalkstart",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"FAT","FatWalkstart_Csaw",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"FAT","FatWalkSt_armed",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"FAT","FatWalkSt_Rocket",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"FAT","FatWalk_armed",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"FAT","FatWalk_Csaw",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"FAT","FatWalk_Rocket",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"FAT","IDLE_tired",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animfightb", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfightb [1-10]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 10) {
			SendClientMessage(playerid, yellow, " Usage: /animfightb [1-10]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_1",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_2",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_3",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_block",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_G",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_IDLE",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"FIGHT_B","FightB_M",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"FIGHT_B","HitB_1",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"FIGHT_B","HitB_2",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"FIGHT_B","HitB_3",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animfightc", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfightc [1-12]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 12) {
			SendClientMessage(playerid, yellow, " Usage: /animfightc [1-12]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_1",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_2",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_3",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_block",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_blocking",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_G",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_IDLE",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_M",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"FIGHT_C","FightC_Spar",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"FIGHT_C","HitC_1",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"FIGHT_C","HitC_2",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"FIGHT_C","HitC_3",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animfightd", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfightd [1-10]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 10) {
			SendClientMessage(playerid, yellow, " Usage: /animfightd [1-10]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_1",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_2",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_block",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_G",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_IDLE",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"FIGHT_D","FightD_M",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"FIGHT_D","HitD_1",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"FIGHT_D","HitD_2",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"FIGHT_D","HitD_3",4.1,0,1,1,1,1);
		}
		return 1;
	}

	if(strcmp(tmp, "/animfighte", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfighte [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animfighte [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"FIGHT_E","FightKick",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"FIGHT_E","FightKick_B",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick_B",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animfinale", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfinale [1-15]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 15) {
			SendClientMessage(playerid, yellow, " Usage: /animfinale [1-15]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"FINALE","FIN_Climb_In",4.1,0,1,1,1,1);
		}else if(animationped == 1) {
			ApplyAnimation(playerid,"FINALE","FIN_Cop1_ClimbOut2",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"FINALE","FIN_Cop1_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"FINALE","FIN_Cop1_Stomp",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"FINALE","FIN_Hang_L",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"FINALE","FIN_Hang_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"FINALE","FIN_Hang_R",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"FINALE","FIN_Hang_L",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"FINALE","FIN_Jump_On",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"FINALE","FIN_Land_Die",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"FINALE","FIN_LegsUp",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"FINALE","FIN_LegsUp_L",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"FINALE","FIN_LegsUp_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"FINALE","FIN_LegsUp_R",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"FINALE","FIN_Let_Go",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animfinale2", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfinale2 [1-8]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 8) {
			SendClientMessage(playerid, yellow, " Usage: /animfinale2 [1-8]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_ClimbOut",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Fall",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Shot",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Swing",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"FINALE2","FIN_Cop2_ClimbOut",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"FINALE2","FIN_Switch_P",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"FINALE2","FIN_Switch_S",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animflamef", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animflamef [1-1]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 1) {
			SendClientMessage(playerid, yellow, " Usage: /animflamef [1-1]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"FLAME","FLAME_fire",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animflowers", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animflowers [1-3]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 3) {
				SendClientMessage(playerid, yellow, " Usage: /animflowers [1-3]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"Flowers","Flower_attack",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"Flowers","Flower_attack_M",4.1,0,1,1,1,1);
			} else if(animationped == 3) {
				ApplyAnimation(playerid,"Flowers","Flower_Hit",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animghands", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animghands [1-20]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 20) {
			SendClientMessage(playerid, yellow, " Usage: /animghands [1-20]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"GHANDS","gsign3LH",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"GHANDS","LHGsign1",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"GHANDS","LHGsign2",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"GHANDS","LHGsign3",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"GHANDS","LHGsign4",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"GHANDS","LHGsign5",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"GHANDS","RHGsign1",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"GHANDS","RHGsign2",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"GHANDS","RHGsign3",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"GHANDS","RHGsign4",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"GHANDS","RHGsign5",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animfw", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animfw [1-9]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 9) {
			SendClientMessage(playerid, yellow, " Usage: /animfw [1-9]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"Freeweights","gym_barbell",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"Freeweights","gym_free_A",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"Freeweights","gym_free_B",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"Freeweights","gym_free_celebrate",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"Freeweights","gym_free_down",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"Freeweights","gym_free_loop",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"Freeweights","gym_free_pickup",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"Freeweights","gym_free_putdown",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"Freeweights","gym_free_up_smooth",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animghetto", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animghetto [1-7]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 7) {
			SendClientMessage(playerid, yellow, " Usage: /animghetto [1-7]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_PLY",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_SMO",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_SWE",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_PLY",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_RYD",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_SMO",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_SWE",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animgog", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animgog [1-1]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 1) {
			SendClientMessage(playerid, yellow, " Usage: /animgog [1-1]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animgraffity", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animgraffity [1-2]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 2) {
				SendClientMessage(playerid, yellow, " Usage: /animgraffity [1-2]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"GRAFFITI","graffiti_Chkout",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"GRAFFITI","spraycan_fire",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animgreya", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animgreya [1-3]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 3) {
				SendClientMessage(playerid, yellow, " Usage: /animgreya [1-3]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"GRAVEYARD","mrnM_loop",4.1,0,1,1,1,1);
			} else if(animationped == 3) {
				ApplyAnimation(playerid,"GRAVEYARD","prst_loopa",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animgren", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animgren [1-3]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 3) {
				SendClientMessage(playerid, yellow, " Usage: /animgren [1-3]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"GRENADE","WEAPON_start_throw",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"GRENADE","WEAPON_throw",4.1,0,1,1,1,1);
			} else if(animationped == 3) {
				ApplyAnimation(playerid,"GRENADE","WEAPON_throwu",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animhaircut", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animhaircut [1-13]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 13) {
			SendClientMessage(playerid, yellow, " Usage: /animhaircut [1-13]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Beard_01",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Buy",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut_In",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut_Out",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Hair_01",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Hair_02",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_In",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Out",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Loop",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_In",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_Loop",4.1,0,1,1,1,1);
		} else if(animationped == 13) {
			ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_Out",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animheist", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animheist [1-10]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 10) {
			SendClientMessage(playerid, yellow, " Usage: /animheist [1-10]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"HEIST9","CAS_G2_GasKO",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"HEIST9","swt_wllpk_L",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"HEIST9","swt_wllpk_L_back",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"HEIST9","swt_wllpk_R",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"HEIST9","swt_wllpk_R_back",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"HEIST9","swt_wllshoot_in_L",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"HEIST9","swt_wllshoot_in_R",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"HEIST9","swt_wllshoot_out_L",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"HEIST9","swt_wllshoot_out_R",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"HEIST9","Use_SwipeCard",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animinthouse", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animinthouse [1-10]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 10) {
			SendClientMessage(playerid, yellow, " Usage: /animinthouse [1-10]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_In_L",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_L",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_R",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_Out_L",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"INT_HOUSE","BED_Out_R",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"INT_HOUSE","LOU_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"INT_HOUSE","LOU_Out",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"INT_HOUSE","wash_up",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animintoffice", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animintoffice [1-10]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 10) {
			SendClientMessage(playerid, yellow, " Usage: /animintoffice [1-10]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"INT_OFFICE","FF_Dam_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_2Idle_180",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Bored_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Crash",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Drink",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Idle_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_In",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Read",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Watch",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animplayerdbf", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animplayerdbf [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animplayerdbf [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyBwd",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyFwd",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyLHS",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyRHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animplayidles", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animplayidles [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animplayidles [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"PLAYIDLES","shift",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"PLAYIDLES","shldr",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"PLAYIDLES","strleg",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"PLAYIDLES","time",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animpolice", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animpolice [1-10]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 10) {
			SendClientMessage(playerid, yellow, " Usage: /animpolice [1-10]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"POLICE","CopTraf_Away",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"POLICE","CopTraf_Come",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"POLICE","CopTraf_Left",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"POLICE","COP_getoutcar_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"POLICE","Cop_move_FWD",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"POLICE","crm_drgbst_01",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"POLICE","Door_Kick",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"POLICE","plc_drgbst_01",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"POLICE","plc_drgbst_02",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animpool", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animpool [1-21]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 21) {
			SendClientMessage(playerid, yellow, " Usage: /animpool [1-21]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"POOL","POOL_ChalkCue",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"POOL","POOL_Idle_Stance",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"POOL","POOL_Long_Shot",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"POOL","POOL_Long_Shot_O",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"POOL","POOL_Long_Start",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"POOL","POOL_Long_Start_O",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"POOL","POOL_Med_Shot",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"POOL","POOL_Med_Shot_O",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"POOL","POOL_Med_Start",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"POOL","POOL_Med_Start_O",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"POOL","POOL_Place_White",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"POOL","POOL_Short_Shot",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"POOL","POOL_Short_Shot_O",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"POOL","POOL_Short_Start",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"POOL","POOL_Short_Start_O",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"POOL","POOL_Walk",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"POOL","POOL_Walk_Start",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"POOL","POOL_XLong_Shot",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"POOL","POOL_XLong_Shot_O",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"POOL","POOL_XLong_Start",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"POOL","POOL_XLong_Start_O",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animpoor", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animpoor [1-2]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 2) {
			SendClientMessage(playerid, yellow, " Usage: /animpoor [1-2]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"POOR","WINWASH_Start",4.1,0,1,1,1,1);
		}else if(animationped == 1) {
			ApplyAnimation(playerid,"POOR","WINWASH_Wash2Beg",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animpython", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animpython [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animpython [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"PYTHON","python_crouchfire",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"PYTHON","python_crouchreload",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"PYTHON","python_fire",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"PYTHON","python_fire_poor",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"PYTHON","python_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animquad", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animquad [1-17]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 17) {
			SendClientMessage(playerid, yellow, " Usage: /animquad [1-17]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"QUAD","QUAD_back",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"QUAD","QUAD_driveby_FT",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"QUAD","QUAD_driveby_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"QUAD","QUAD_driveby_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"QUAD","QUAD_FWD",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"QUAD","QUAD_getoff_B",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"QUAD","QUAD_getoff_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"QUAD","QUAD_getoff_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"QUAD","QUAD_geton_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"QUAD","QUAD_geton_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"QUAD","QUAD_hit",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"QUAD","QUAD_kick",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"QUAD","QUAD_Left",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"QUAD","QUAD_passenger",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"QUAD","QUAD_reverse",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"QUAD","QUAD_ride",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"QUAD","QUAD_Right",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animquadbz", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animquadbz [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animquadbz [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animrapping", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animrapping [1-8]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 8) {
			SendClientMessage(playerid, yellow, " Usage: /animrapping [1-8]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"RAPPING","Laugh_01",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"RAPPING","RAP_A_IN",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"RAPPING","RAP_A_OUT",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"RAPPING","RAP_B_IN",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"RAPPING","RAP_B_OUT",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"RAPPING","RAP_C_Loop",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animrifle", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animrifle [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animrifle [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_crouchfire",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_crouchload",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_fire",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"RIFLE","RIFLE_load",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animriot", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animriot [1-7]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 7) {
			SendClientMessage(playerid, yellow, " Usage: /animriot [1-7]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"RIOT","RIOT_ANGRY_B",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"RIOT","RIOT_challenge",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"RIOT","RIOT_CHANT",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"RIOT","RIOT_FUKU",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"RIOT","RIOT_PUNCHES",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"RIOT","RIOT_shout",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animrobbank", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animrobbank [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animrobbank [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open_O",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animrocket", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animrocket [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animrocket [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"ROCKET","idle_rocket",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"ROCKET","RocketFire",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"ROCKET","run_rocket",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"ROCKET","walk_rocket",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"ROCKET","WALK_start_rocket",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animrustler", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animrustler [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animrustler [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"RUSTLER","Plane_align_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"RUSTLER","Plane_close",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"RUSTLER","Plane_getin",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"RUSTLER","Plane_getout",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"RUSTLER","Plane_open",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbiked", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbiked [1-18]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 18) {
			SendClientMessage(playerid, yellow, " Usage: /animbiked [1-18]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Back",4.1,0,1,1,1,1);
		}else if(animationped == 1) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"BIKED","BIKEd_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"BIKED","BIKEd_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"BIKED","BIKEd_hit",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"BIKED","BIKEd_jumponL",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"BIKED","BIKEd_jumponR",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"BIKED","BIKEd_kick",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Left",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"BIKED","BIKEd_passenger",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"BIKED","BIKEd_pushes",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Ride",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Right",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"BIKED","BIKEd_shuffle",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"BIKED","BIKEd_Still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animryder", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animryder [1-14]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 14) {
			SendClientMessage(playerid, yellow, " Usage: /animryder [1-14]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"RYDER","RYD_Beckon_01",4.1,0,1,1,1,1);
		}else if(animationped == 1) {
			ApplyAnimation(playerid,"RYDER","RYD_Beckon_02",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"RYDER","RYD_Beckon_03",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"RYDER","RYD_Die_PT1",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"RYDER","RYD_Die_PT2",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"RYDER","Van_Crate_L",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"RYDER","Van_Crate_R",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"RYDER","Van_Fall_L",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"RYDER","Van_Fall_R",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"RYDER","Van_Lean_L",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"RYDER","Van_Lean_R",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"RYDER","VAN_PickUp_S",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"RYDER","Van_Stand",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"RYDER","Van_Stand_Crate",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"RYDER","Van_Throw",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animscrat", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animscrat [1-12]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 12) {
			SendClientMessage(playerid, yellow, " Usage: /animscrat [1-12]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SCRATCHING","scdldlp",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"SCRATCHING","scdlulp",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"SCRATCHING","scdrdlp",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"SCRATCHING","scdrulp",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"SCRATCHING","sclng_l",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"SCRATCHING","sclng_r",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"SCRATCHING","scmid_l",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"SCRATCHING","scmid_r",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"SCRATCHING","scshrtl",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"SCRATCHING","scshrtr",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"SCRATCHING","sc_ltor",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"SCRATCHING","sc_rtol",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animshamal", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animshamal [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animshamal [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SHAMAL","SHAMAL_align",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"SHAMAL","SHAMAL_getin_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"SHAMAL","SHAMAL_getout_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"SHAMAL","SHAMAL_open",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animshop", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animshop [1-24]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 24) {
			SendClientMessage(playerid, yellow, " Usage: /animshop [1-24]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SHOP","ROB_2Idle",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"SHOP","ROB_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"SHOP","donutdrop",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"SHOP","ROB_Shifty",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"SHOP","ROB_StickUp_In",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"SHOP","SHP_Duck_Fire",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Aim",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Duck",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Fire",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Grab",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"SHOP","SHP_Gun_Threat",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"SHOP","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"SHOP","SHP_Jump_Glide",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"SHOP","SHP_Jump_Land",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"SHOP","SHP_Jump_Launch",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"SHOP","SHP_Rob_GiveCash",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"SHOP","SHP_Rob_HandsUp",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"SHOP","SHP_Rob_React",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"SHOP","SHP_Serve_End",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"SHOP","SHP_Serve_Idle",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"SHOP","SHP_Serve_Loop",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"SHOP","SHP_Serve_Start",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"SHOP","Smoke_RYD",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animshotgun", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animshotgun [1-3]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 3) {
				SendClientMessage(playerid, yellow, " Usage: /animshotgun [1-3]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"SHOTGUN","shotgun_crouchfire",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"SHOTGUN","shotgun_fire",4.1,0,1,1,1,1);
			} else if(animationped == 3) {
				ApplyAnimation(playerid,"SHOTGUN","shotgun_fire_poor",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animskate", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animskate [1-3]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 3) {
				SendClientMessage(playerid, yellow, " Usage: /animskate [1-3]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"SKATE","skate_idle",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"SKATE","skate_run",4.1,0,1,1,1,1);
			} else if(animationped == 3) {
				ApplyAnimation(playerid,"SKATE","skate_sprint",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animvortex", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animvortex [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animvortex [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"VORTEX","CAR_jumpin_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"VORTEX","CAR_jumpin_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"VORTEX","vortex_getout_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"VORTEX","vortex_getout_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animtec", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animtec [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animtec [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"TEC","TEC_crouchfire",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"TEC","TEC_crouchreload",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"TEC","TEC_fire",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"TEC","TEC_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animtrain", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animtrain [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animtrain [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"TRAIN","tran_gtup",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"TRAIN","tran_hng",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"TRAIN","tran_ouch",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"TRAIN","tran_stmb",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animsil", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animsil [1-4]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 4) {
			SendClientMessage(playerid, yellow, " Usage: /animsil [1-4]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SILENCED","CrouchReload",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"SILENCED","SilenceCrouchfire",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"SILENCED","Silence_fire",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"SILENCED","Silence_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animtattoo", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animtattoo [1-56]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 56) {
			SendClientMessage(playerid, yellow, " Usage: /animtattoo [1-56]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_O",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_P",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_T",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Out_O",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"TATTOOS","TA_ArmL_Out_P",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Out_T",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_O",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_P",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_T",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_O",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_P",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_T",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_O",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_P",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_T",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_O",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_P",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_T",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_O",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_P",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_T",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_O",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_P",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_T",4.1,0,1,1,1,1);
		}else if(animationped == 25) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_O",4.1,0,1,1,1,1);
		}else if(animationped == 26) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_P",4.1,0,1,1,1,1);
		}else if(animationped == 27) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_T",4.1,0,1,1,1,1);
		}else if(animationped == 28) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_In_P",4.1,0,1,1,1,1);
		}else if(animationped == 29) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_Loop_P",4.1,0,1,1,1,1);
		}else if(animationped == 30) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_Out_P",4.1,0,1,1,1,1);
		}else if(animationped == 31) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_In_O",4.1,0,1,1,1,1);
		}else if(animationped == 32) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_In_T",4.1,0,1,1,1,1);
		}else if(animationped == 33) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Out_O",4.1,0,1,1,1,1);
		}else if(animationped == 34) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Out_T",4.1,0,1,1,1,1);
		}else if(animationped == 35) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Pose_O",4.1,0,1,1,1,1);
		}else if(animationped == 36) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Pose_T",4.1,0,1,1,1,1);
		}else if(animationped == 37) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_O",4.1,0,1,1,1,1);
		}else if(animationped == 38) {
			ApplyAnimation(playerid,"TATTOOS","Sit_relaxed",4.1,0,1,1,1,1);
		}else if(animationped == 39) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_P",4.1,0,1,1,1,1);
		}else if(animationped == 40) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_T",4.1,0,1,1,1,1);
		}else if(animationped == 41) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_O",4.1,0,1,1,1,1);
		}else if(animationped == 41) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_P",4.1,0,1,1,1,1);
		}else if(animationped == 42) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_T",4.1,0,1,1,1,1);
		}else if(animationped == 43) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_O",4.1,0,1,1,1,1);
		}else if(animationped == 44) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_P",4.1,0,1,1,1,1);
		}else if(animationped == 45) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_T",4.1,0,1,1,1,1);
		}else if(animationped == 46) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Idle_Loop_O",4.1,0,1,1,1,1);
		}else if(animationped == 47) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Idle_Loop_T",4.1,0,1,1,1,1);
		}else if(animationped == 48) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_O",4.1,0,1,1,1,1);
		}else if(animationped == 49) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_P",4.1,0,1,1,1,1);
		}else if(animationped == 50) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_T",4.1,0,1,1,1,1);
		}else if(animationped == 51) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_O",4.1,0,1,1,1,1);
		}else if(animationped == 52) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_P",4.1,0,1,1,1,1);
		}else if(animationped == 53) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_T",4.1,0,1,1,1,1);
		}else if(animationped == 54) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_O",4.1,0,1,1,1,1);
		}else if(animationped == 55) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_P",4.1,0,1,1,1,1);
		}else if(animationped == 56) {
			ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_T",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animsmoking", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animsmoking [1-8]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 8) {
			SendClientMessage(playerid, yellow, " Usage: /animsmoking [1-8]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SMOKING","F_smklean_loop",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"SMOKING","M_smk_in",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"SMOKING","M_smk_loop",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"SMOKING","M_smk_out",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"SMOKING","M_smk_tap",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animsniper", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animsniper [1-1]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 1) {
			SendClientMessage(playerid, yellow, " Usage: /animsniper [1-1]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SNIPER","WEAPON_sniper",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animspray", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animspray [1-2]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 2) {
				SendClientMessage(playerid, yellow, " Usage: /animspray [1-2]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"SPRAYCAN","spraycan_fire",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animstrip", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animstrip [1-20]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 20) {
			SendClientMessage(playerid, yellow, " Usage: /animstrip [1-20]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"STRIP","PLY_CASH",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"STRIP","PUN_LOOP",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"STRIP","strip_A",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"STRIP","strip_B",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"STRIP","strip_C",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"STRIP","strip_D",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"STRIP","strip_E",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"STRIP","strip_F",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"STRIP","strip_G",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"STRIP","STR_A2B",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"STRIP","STR_B2C",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"STRIP","STR_C1",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"STRIP","STR_C2",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"STRIP","STR_C2B",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"STRIP","STR_Loop_A",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"STRIP","STR_Loop_B",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"STRIP","STR_Loop_C",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animbath", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animbath [1-17]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 18) {
			SendClientMessage(playerid, yellow, " Usage: /animbath [1-17]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SUNBATHE","batherdown",4.1,0,1,1,1,1);
		}else if(animationped == 1) {
			ApplyAnimation(playerid,"SUNBATHE","batherup",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_in",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_out",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleA",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleB",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleC",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_in",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_out",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleB",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleC",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_in",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_out",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"SUNBATHE","SBATHE_F_LieB2Sit",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"SUNBATHE","SBATHE_F_Out",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"SUNBATHE","SitnWait_out_W",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animswat", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animswat [1-24]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 24) {
			SendClientMessage(playerid, yellow, " Usage: /animswat [1-24]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SWAT","gnstwall_injurd",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"SWAT","JMP_Wall1m_180",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"SWAT","Rail_fall",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"SWAT","Rail_fall_crawl",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"SWAT","swt_breach_01",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"SWAT","cards_pick_02",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"SWAT","swt_breach_02",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"SWAT","swt_breach_03",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"SWAT","swt_go",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"SWAT","swt_lkt",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"SWAT","swt_sty",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"SWAT","swt_vent_01",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"SWAT","swt_vent_02",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"SWAT","swt_vnt_sht_die",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"SWAT","swt_vnt_sht_in",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"SWAT","swt_vnt_sht_loop",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"SWAT","swt_wllpk_L",4.1,0,1,1,1,1);
		}else if(animationped == 18) {
			ApplyAnimation(playerid,"SWAT","swt_wllpk_L_back",4.1,0,1,1,1,1);
		}else if(animationped == 19) {
			ApplyAnimation(playerid,"SWAT","swt_wllpk_R",4.1,0,1,1,1,1);
		}else if(animationped == 20) {
			ApplyAnimation(playerid,"SWAT","swt_wllpk_R_back",4.1,0,1,1,1,1);
		}else if(animationped == 21) {
			ApplyAnimation(playerid,"SWAT","swt_wllshoot_in_L",4.1,0,1,1,1,1);
		}else if(animationped == 22) {
			ApplyAnimation(playerid,"SWAT","swt_wllshoot_in_R",4.1,0,1,1,1,1);
		}else if(animationped == 23) {
			ApplyAnimation(playerid,"SWAT","swt_wllshoot_out_L",4.1,0,1,1,1,1);
		}else if(animationped == 24) {
			ApplyAnimation(playerid,"SWAT","swt_wllshoot_out_R",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animsweet", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animsweet [1-7]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 7) {
			SendClientMessage(playerid, yellow, " Usage: /animsweet [1-7]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SWEET","ho_ass_slapped",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"SWEET","LaFin_Player",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"SWEET","LaFin_Sweet",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"SWEET","plyr_hndshldr_01",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"SWEET","sweet_hndshldr_01",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"SWEET","Sweet_injuredloop",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animswim", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animswim [1-7]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 7) {
			SendClientMessage(playerid, yellow, " Usage: /animswim [1-7]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SWIM","Swim_Breast",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"SWIM","SWIM_crawl",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"SWIM","Swim_Dive_Under",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"SWIM","Swim_Glide",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"SWIM","Swim_jumpout",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"SWIM","Swim_Tread",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"SWIM","Swim_Under",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animsword", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animsword [1-10]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 10) {
			SendClientMessage(playerid, yellow, " Usage: /animsword [1-10]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"SWORD","sword_1",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"SWORD","sword_2",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"SWORD","sword_3",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"SWORD","sword_4",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"SWORD","Sword_Hit_1",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"SWORD","Sword_Hit_2",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"SWORD","Sword_Hit_3",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"SWORD","sword_IDLE",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"SWORD","sword_part",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animtank", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animtank [1-6]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 6) {
			SendClientMessage(playerid, yellow, " Usage: /animtank [1-6]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"TANK","TANK_align_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"TANK","TANK_close_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"TANK","TANK_doorlocked",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"TANK","TANK_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"TANK","TANK_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"TANK","TANK_open_LHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animtruck", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animtruck [1-17]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 17) {
			SendClientMessage(playerid, yellow, " Usage: /animtruck [1-17]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_ALIGN_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_ALIGN_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_closedoor_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_closedoor_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_close_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_close_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_getin_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_getin_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_getout_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_getout_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_jackedLHS",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_jackedRHS",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_open_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_open_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_pullout_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_pullout_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"TRUCK","TRUCK_Shuffle",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animuzi", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animuzi [1-5]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 5) {
			SendClientMessage(playerid, yellow, " Usage: /animuzi [1-5]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"UZI","UZI_crouchfire",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"UZI","UZI_crouchreload",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"UZI","UZI_fire",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"UZI","UZI_fire_poor",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"UZI","UZI_reload",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animvan", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animvan [1-8]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 8) {
			SendClientMessage(playerid, yellow, " Usage: /animvan [1-8]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"VAN","VAN_close_back_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"VAN","VAN_close_back_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"VAN","VAN_getin_Back_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"VAN","VAN_getin_Back_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"VAN","VAN_getout_back_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"VAN","VAN_getout_back_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"VAN","VAN_open_back_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"VAN","VAN_open_back_RHS",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animvending", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animvending [1-6]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 6) {
			SendClientMessage(playerid, yellow, " Usage: /animvending [1-6]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"VENDING","vend_eat1_P",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"VENDING","VEND_Eat_P",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"VENDING","VEND_Use",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"VENDING","VEND_Use_pt2",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animway", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animway [1-17]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 17) {
			SendClientMessage(playerid, yellow, " Usage: /animway [1-17]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"WAYFARER","WF_Back",4.1,0,1,1,1,1);
		}else if(animationped == 1) {
			ApplyAnimation(playerid,"WAYFARER","WF_drivebyFT",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"WAYFARER","WF_drivebyLHS",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"WAYFARER","WF_drivebyRHS",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"WAYFARER","WF_Fwd",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"WAYFARER","WF_getoffBACK",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"WAYFARER","WF_getoffLHS",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"WAYFARER","WF_getoffRHS",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"WAYFARER","WF_hit",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"WAYFARER","WF_jumponL",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"WAYFARER","WF_jumponR",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"WAYFARER","WF_kick",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"WAYFARER","WF_Left",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"WAYFARER","WF_passenger",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"WAYFARER","WF_pushes",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"WAYFARER","WF_Ride",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"WAYFARER","WF_Right",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"WAYFARER","WF_Still",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animweap", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animweap [1-17]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 17) {
			SendClientMessage(playerid, yellow, " Usage: /animweap [1-17]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"WEAPONS","SHP_1H_Lift",4.1,0,1,1,1,1);
		}else if(animationped == 2) {
			ApplyAnimation(playerid,"WEAPONS","SHP_1H_Lift_End",4.1,0,1,1,1,1);
		}else if(animationped == 3) {
			ApplyAnimation(playerid,"WEAPONS","SHP_1H_Ret",4.1,0,1,1,1,1);
		}else if(animationped == 4) {
			ApplyAnimation(playerid,"WEAPONS","SHP_1H_Ret_S",4.1,0,1,1,1,1);
		}else if(animationped == 5) {
			ApplyAnimation(playerid,"WEAPONS","SHP_2H_Lift",4.1,0,1,1,1,1);
		}else if(animationped == 6) {
			ApplyAnimation(playerid,"WEAPONS","SHP_2H_Lift_End",4.1,0,1,1,1,1);
		}else if(animationped == 7) {
			ApplyAnimation(playerid,"WEAPONS","SHP_2H_Ret",4.1,0,1,1,1,1);
		}else if(animationped == 8) {
			ApplyAnimation(playerid,"WEAPONS","SHP_2H_Ret_S",4.1,0,1,1,1,1);
		}else if(animationped == 9) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Lift",4.1,0,1,1,1,1);
		}else if(animationped == 10) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Lift_End",4.1,0,1,1,1,1);
		}else if(animationped == 11) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Ret",4.1,0,1,1,1,1);
		}else if(animationped == 12) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Ret_S",4.1,0,1,1,1,1);
		}else if(animationped == 13) {
			ApplyAnimation(playerid,"WEAPONS","SHP_G_Lift_In",4.1,0,1,1,1,1);
		}else if(animationped == 14) {
			ApplyAnimation(playerid,"WEAPONS","SHP_G_Lift_Out",4.1,0,1,1,1,1);
		}else if(animationped == 15) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Tray_In",4.1,0,1,1,1,1);
		}else if(animationped == 16) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Tray_Out",4.1,0,1,1,1,1);
		}else if(animationped == 17) {
			ApplyAnimation(playerid,"WEAPONS","SHP_Tray_Pose",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animwuzi", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animwuzi [1-12]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 12) {
			SendClientMessage(playerid, yellow, " Usage: /animwuzi [1-12]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"WUZI","CS_Dead_Guy",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"WUZI","CS_Plyr_pt1",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"WUZI","CS_Plyr_pt2",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"WUZI","CS_Wuzi_pt1",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"WUZI","CS_Wuzi_pt2",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"WUZI","Walkstart_Idle_01",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"WUZI","Wuzi_follow",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Plyr",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"WUZI","Wuzi_grnd_chk",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"WUZI","Wuzi_stand_loop",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"WUZI","Wuzi_Walk",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/animat", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animat [1-3]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 3) {
				SendClientMessage(playerid, yellow, " Usage: /animat [1-3]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1,0,1,1,1,1);
			} else if(animationped == 2) {
				ApplyAnimation(playerid,"Attractors","Stepsit_loop",4.1,0,1,1,1,1);
			} else if(animationped == 3) {
				ApplyAnimation(playerid,"Attractors","Stepsit_out",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animairport", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /animairport [1]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 1) {
				SendClientMessage(playerid, yellow, " Usage: /animairport [1]");
				return 1;
			}
			if(animationped == 1) {
				ApplyAnimation(playerid,"AIRPORT","thrw_barl_thrw",4.1,0,1,1,1,1);
			}
			return 1;
		}
	}
	if(strcmp(tmp, "/animped", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if(strlen(tmp) > 3) return 1;
		if(isnull(tmp)) {
			SendClientMessage(playerid, yellow, " Usage: /animped [1-295]");
			return 1;
		}
		animationped = strval(tmp);
		if(animationped < 1 || animationped > 295) {
			SendClientMessage(playerid, yellow, " Usage: /animped [1-295]");
			return 1;
		}
		if(animationped == 1) {
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
		} else if(animationped == 2) {
			ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,0,1,1,1,1);
		} else if(animationped == 3) {
			ApplyAnimation(playerid,"PED","abseil",4.1,0,1,1,1,1);
		} else if(animationped == 4) {
			ApplyAnimation(playerid,"PED","ARRESTgun",4.1,0,1,1,1,1);
		} else if(animationped == 5) {
			ApplyAnimation(playerid,"PED","ATM",4.1,0,1,1,1,1);
		} else if(animationped == 6) {
			ApplyAnimation(playerid,"PED","BIKE_elbowL",4.1,0,1,1,1,1);
		} else if(animationped == 7) {
			ApplyAnimation(playerid,"PED","BIKE_fallR",4.1,0,1,1,1,1);
		} else if(animationped == 8) {
			ApplyAnimation(playerid,"PED","BIKE_fall_off",4.1,0,1,1,1,1);
		} else if(animationped == 9) {
			ApplyAnimation(playerid,"PED","BIKE_pickupL",4.1,0,1,1,1,1);
		} else if(animationped == 10) {
			ApplyAnimation(playerid,"PED","BIKE_pickupR",4.1,0,1,1,1,1);
		} else if(animationped == 11) {
			ApplyAnimation(playerid,"PED","BIKE_pullupL",4.1,0,1,1,1,1);
		} else if(animationped == 12) {
			ApplyAnimation(playerid,"PED","BIKE_pullupR",4.1,0,1,1,1,1);
		} else if(animationped == 13) {
			ApplyAnimation(playerid,"PED","bomber",4.1,0,1,1,1,1);
		} else if(animationped == 14) {
			ApplyAnimation(playerid,"PED","CAR_alignHI_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 15) {
			ApplyAnimation(playerid,"PED","CAR_alignHI_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 16) {
			ApplyAnimation(playerid,"PED","CAR_align_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 17) {
			ApplyAnimation(playerid,"PED","CAR_align_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 18) {
			ApplyAnimation(playerid,"PED","CAR_closedoorL_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 19) {
			ApplyAnimation(playerid,"PED","CAR_closedoorL_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 20) {
			ApplyAnimation(playerid,"PED","CAR_closedoor_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 21) {
			ApplyAnimation(playerid,"PED","CAR_closedoor_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 22) {
			ApplyAnimation(playerid,"PED","CAR_close_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 23) {
			ApplyAnimation(playerid,"PED","CAR_crawloutRHS",4.1,0,1,1,1,1);
		} else if(animationped == 24) {
			ApplyAnimation(playerid,"PED","CAR_dead_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 25) {
			ApplyAnimation(playerid,"PED","CAR_dead_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 26) {
			ApplyAnimation(playerid,"PED","CAR_doorlocked_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 27) {
			ApplyAnimation(playerid,"PED","CAR_fallout_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 28) {
			ApplyAnimation(playerid,"PED","CAR_fallout_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 29) {
			ApplyAnimation(playerid,"PED","CAR_getinL_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 30) {
			ApplyAnimation(playerid,"PED","CAR_getinL_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 31) {
			ApplyAnimation(playerid,"PED","CAR_getin_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 32) {
			ApplyAnimation(playerid,"PED","CAR_getin_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 33) {
			ApplyAnimation(playerid,"PED","CAR_getoutL_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 34) {
			ApplyAnimation(playerid,"PED","CAR_getout_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 35) {
			ApplyAnimation(playerid,"PED","CAR_getout_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 36) {
			ApplyAnimation(playerid,"PED","car_hookertalk",4.1,0,1,1,1,1);
		} else if(animationped == 37) {
			ApplyAnimation(playerid,"PED","CAR_jackedLHS",4.1,0,1,1,1,1);
		} else if(animationped == 38) {
			ApplyAnimation(playerid,"PED","CAR_jackedRHS",4.1,0,1,1,1,1);
		} else if(animationped == 39) {
			ApplyAnimation(playerid,"PED","CAR_jumpin_LHS",4.1,0,1,1,1,1);
		} else if(animationped == 40) {
			ApplyAnimation(playerid,"PED","CAR_LB",4.1,0,1,1,1,1);
		} else if(animationped == 41) {
			ApplyAnimation(playerid,"PED","CAR_LB_pro",4.1,0,1,1,1,1);
		} else if(animationped == 42) {
			ApplyAnimation(playerid,"PED","CAR_LB_weak",4.1,0,1,1,1,1);
		} else if(animationped == 43) {
			ApplyAnimation(playerid,"PED","CAR_LjackedLHS",4.1,0,1,1,1,1);
		} else if(animationped == 44) {
			ApplyAnimation(playerid,"PED","CAR_Lshuffle_RHS",4.1,0,1,1,1,1);
		} else if(animationped == 45) {
			ApplyAnimation(playerid,"PED","CAR_Lsit",4.1,0,1,1,1,1);
		} else if(animationped == 46) {
			ApplyAnimation(playerid,"PED","CAR_open_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 47) {
			ApplyAnimation(playerid,"PED","CAR_open_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 49) {
			ApplyAnimation(playerid,"PED","CAR_pulloutL_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 50) {
			ApplyAnimation(playerid,"PED","CAR_pulloutL_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 51) {
			ApplyAnimation(playerid,"PED","CAR_pullout_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 52) {
			ApplyAnimation(playerid,"PED","CAR_pullout_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 53) {
			ApplyAnimation(playerid,"PED","CAR_Qjacked",4.1,0,1,1,1,1);
		}else if(animationped == 54) {
			ApplyAnimation(playerid,"PED","CAR_rolldoor",4.1,0,1,1,1,1);
		}else if(animationped == 55) {
			ApplyAnimation(playerid,"PED","CAR_rolldoorLO",4.1,0,1,1,1,1);
		}else if(animationped == 56) {
			ApplyAnimation(playerid,"PED","CAR_rollout_LHS",4.1,0,1,1,1,1);
		}else if(animationped == 57) {
			ApplyAnimation(playerid,"PED","CAR_rollout_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 58) {
			ApplyAnimation(playerid,"PED","CAR_shuffle_RHS",4.1,0,1,1,1,1);
		}else if(animationped == 59) {
			ApplyAnimation(playerid,"PED","CAR_sit",4.1,0,1,1,1,1);
		}else if(animationped == 60) {
			ApplyAnimation(playerid,"PED","CAR_sitp",4.1,0,1,1,1,1);
		}else if(animationped == 61) {
			ApplyAnimation(playerid,"PED","CAR_sitpLO",4.1,0,1,1,1,1);
		}else if(animationped == 62) {
			ApplyAnimation(playerid,"PED","CAR_sit_pro",4.1,0,1,1,1,1);
		}else if(animationped == 63) {
			ApplyAnimation(playerid,"PED","CAR_sit_weak",4.1,0,1,1,1,1);
		}else if(animationped == 64) {
			ApplyAnimation(playerid,"PED","CAR_tune_radio",4.1,0,1,1,1,1);
		}else if(animationped == 65) {
			ApplyAnimation(playerid,"PED","CLIMB_idle",4.1,0,1,1,1,1);
		}else if(animationped == 66) {
			ApplyAnimation(playerid,"PED","CLIMB_jump",4.1,0,1,1,1,1);
		}else if(animationped == 67) {
			ApplyAnimation(playerid,"PED","CLIMB_jump2fall",4.1,0,1,1,1,1);
		}else if(animationped == 68) {
			ApplyAnimation(playerid,"PED","CLIMB_jump_B",4.1,0,1,1,1,1);
		}else if(animationped == 69) {
			ApplyAnimation(playerid,"PED","CLIMB_Pull",4.1,0,1,1,1,1);
		}else if(animationped == 70) {
			ApplyAnimation(playerid,"PED","CLIMB_Stand",4.1,0,1,1,1,1);
		}else if(animationped == 71) {
			ApplyAnimation(playerid,"PED","CLIMB_Stand_finish",4.1,0,1,1,1,1);
		}else if(animationped == 72) {
			ApplyAnimation(playerid,"PED","cower",4.1,0,1,1,1,1);
		}else if(animationped == 73) {
			ApplyAnimation(playerid,"PED","Crouch_Roll_L",4.1,0,1,1,1,1);
		}else if(animationped == 74) {
			ApplyAnimation(playerid,"PED","Crouch_Roll_R",4.1,0,1,1,1,1);
		}else if(animationped == 75) {
			ApplyAnimation(playerid,"PED","DAM_armL_frmBK",4.1,0,1,1,1,1);
		}else if(animationped == 76) {
			ApplyAnimation(playerid,"PED","DAM_armL_frmFT",4.1,0,1,1,1,1);
		}else if(animationped == 77) {
			ApplyAnimation(playerid,"PED","DAM_armL_frmLT",4.1,0,1,1,1,1);
		}else if(animationped == 78) {
			ApplyAnimation(playerid,"PED","DAM_armR_frmBK",4.1,0,1,1,1,1);
		}else if(animationped == 79) {
			ApplyAnimation(playerid,"PED","DAM_armR_frmFT",4.1,0,1,1,1,1);
		}else if(animationped == 80) {
			ApplyAnimation(playerid,"PED","DAM_armR_frmRT",4.1,0,1,1,1,1);
		}else if(animationped == 81) {
			ApplyAnimation(playerid,"PED","DAM_LegL_frmBK",4.1,0,1,1,1,1);
		}else if(animationped == 82) {
			ApplyAnimation(playerid,"PED","DAM_LegL_frmFT",4.1,0,1,1,1,1);
		}else if(animationped == 83) {
			ApplyAnimation(playerid,"PED","DAM_LegL_frmLT",4.1,0,1,1,1,1);
		}else if(animationped == 84) {
			ApplyAnimation(playerid,"PED","DAM_LegR_frmBK",4.1,0,1,1,1,1);
		}else if(animationped == 85) {
			ApplyAnimation(playerid,"PED","DAM_LegR_frmFT",4.1,0,1,1,1,1);
		}else if(animationped == 86) {
			ApplyAnimation(playerid,"PED","DAM_LegR_frmRT",4.1,0,1,1,1,1);
		}else if(animationped == 87) {
			ApplyAnimation(playerid,"PED","DAM_stomach_frmBK",4.1,0,1,1,1,1);
		}else if(animationped == 88) {
			ApplyAnimation(playerid,"PED","DAM_stomach_frmFT",4.1,0,1,1,1,1);
		}else if(animationped == 89) {
			ApplyAnimation(playerid,"PED","DAM_stomach_frmLT",4.1,0,1,1,1,1);
		}else if(animationped == 90) {
			ApplyAnimation(playerid,"PED","DAM_stomach_frmRT",4.1,0,1,1,1,1);
		}else if(animationped == 91) {
			ApplyAnimation(playerid,"PED","DOOR_LHinge_O",4.1,0,1,1,1,1);
		}else if(animationped == 92) {
			ApplyAnimation(playerid,"PED","DOOR_RHinge_O",4.1,0,1,1,1,1);
		}else if(animationped == 93) {
			ApplyAnimation(playerid,"PED","DrivebyL_L",4.1,0,1,1,1,1);
		}else if(animationped == 94) {
			ApplyAnimation(playerid,"PED","DrivebyL_R",4.1,0,1,1,1,1);
		}else if(animationped == 95) {
			ApplyAnimation(playerid,"PED","Driveby_L",4.1,0,1,1,1,1);
		}else if(animationped == 96) {
			ApplyAnimation(playerid,"PED","Driveby_R",4.1,0,1,1,1,1);
		}else if(animationped == 97) {
			ApplyAnimation(playerid,"PED","DRIVE_BOAT",4.1,0,1,1,1,1);
		}else if(animationped == 98) {
			ApplyAnimation(playerid,"PED","DRIVE_BOAT_back",4.1,0,1,1,1,1);
		}else if(animationped == 99) {
			ApplyAnimation(playerid,"PED","DRIVE_BOAT_L",4.1,0,1,1,1,1);
		}else if(animationped == 100) {
			ApplyAnimation(playerid,"PED","DRIVE_BOAT_R",4.1,0,1,1,1,1);
		}else if(animationped == 101) {
			ApplyAnimation(playerid,"PED","Drive_L",4.1,0,1,1,1,1);
		}else if(animationped == 102) {
			ApplyAnimation(playerid,"PED","Drive_LO_l",4.1,0,1,1,1,1);
		}else if(animationped == 103) {
			ApplyAnimation(playerid,"PED","Drive_LO_R",4.1,0,1,1,1,1);
		}else if(animationped == 104) {
			ApplyAnimation(playerid,"PED","Drive_L_pro",4.1,0,1,1,1,1);
		}else if(animationped == 105) {
			ApplyAnimation(playerid,"PED","Drive_L_pro_slow",4.1,0,1,1,1,1);
		}else if(animationped == 106) {
			ApplyAnimation(playerid,"PED","Drive_L_slow",4.1,0,1,1,1,1);
		}else if(animationped == 107) {
			ApplyAnimation(playerid,"PED","Drive_L_weak",4.1,0,1,1,1,1);
		}else if(animationped == 108) {
			ApplyAnimation(playerid,"PED","Drive_L_weak_slow",4.1,0,1,1,1,1);
		}else if(animationped == 109) {
			ApplyAnimation(playerid,"PED","Drive_R",4.1,0,1,1,1,1);
		}else if(animationped == 110) {
			ApplyAnimation(playerid,"PED","Drive_R_pro",4.1,0,1,1,1,1);
		}else if(animationped == 111) {
			ApplyAnimation(playerid,"PED","Drive_R_pro_slow",4.1,0,1,1,1,1);
		}else if(animationped == 112) {
			ApplyAnimation(playerid,"PED","Drive_R_slow",4.1,0,1,1,1,1);
		}else if(animationped == 113) {
			ApplyAnimation(playerid,"PED","Drive_R_weak",4.1,0,1,1,1,1);
		}else if(animationped == 114) {
			ApplyAnimation(playerid,"PED","Drive_R_weak_slow",4.1,0,1,1,1,1);
		}else if(animationped == 115) {
			ApplyAnimation(playerid,"PED","Drive_truck",4.1,0,1,1,1,1);
		}else if(animationped == 116) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
		}else if(animationped == 117) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_L",4.1,0,1,1,1,1);
		}else if(animationped == 118) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_R",4.1,0,1,1,1,1);
		}else if(animationped == 119) {
			ApplyAnimation(playerid,"PED","Drown",4.1,0,1,1,1,1);
		}else if(animationped == 120) {
			ApplyAnimation(playerid,"PED","DUCK_cower",4.1,0,1,1,1,1);
		}else if(animationped == 121) {
			ApplyAnimation(playerid,"PED","endchat_01",4.1,0,1,1,1,1);
		}else if(animationped == 122) {
			ApplyAnimation(playerid,"PED","endchat_02",4.1,0,1,1,1,1);
		}else if(animationped == 123) {
			ApplyAnimation(playerid,"PED","endchat_03",4.1,0,1,1,1,1);
		}else if(animationped == 124) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
		}else if(animationped == 125) {
			ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
		}else if(animationped == 126) {
			ApplyAnimation(playerid,"PED","EV_dive",4.1,0,1,1,1,1);
		}else if(animationped == 127) {
			ApplyAnimation(playerid,"PED","EV_step",4.1,0,1,1,1,1);
		}else if(animationped == 128) {
			ApplyAnimation(playerid,"PED","facanger",4.1,0,1,1,1,1);
		}else if(animationped == 129) {
			ApplyAnimation(playerid,"PED","facanger",4.1,0,1,1,1,1);
		}else if(animationped == 130) {
			ApplyAnimation(playerid,"PED","facgum",4.1,0,1,1,1,1);
		}else if(animationped == 131) {
			ApplyAnimation(playerid,"PED","facsurp",4.1,0,1,1,1,1);
		}else if(animationped == 132) {
			ApplyAnimation(playerid,"PED","facsurpm",4.1,0,1,1,1,1);
		}else if(animationped == 133) {
			ApplyAnimation(playerid,"PED","factalk",4.1,0,1,1,1,1);
		}else if(animationped == 134) {
			ApplyAnimation(playerid,"PED","facurios",4.1,0,1,1,1,1);
		}else if(animationped == 135) {
			ApplyAnimation(playerid,"PED","FALL_back",4.1,0,1,1,1,1);
		}else if(animationped == 136) {
			ApplyAnimation(playerid,"PED","FALL_collapse",4.1,0,1,1,1,1);
		}else if(animationped == 137) {
			ApplyAnimation(playerid,"PED","FALL_fall",4.1,0,1,1,1,1);
		}else if(animationped == 138) {
			ApplyAnimation(playerid,"PED","FALL_front",4.1,0,1,1,1,1);
		}else if(animationped == 139) {
			ApplyAnimation(playerid,"PED","FALL_glide",4.1,0,1,1,1,1);
		}else if(animationped == 140) {
			ApplyAnimation(playerid,"PED","FALL_land",4.1,0,1,1,1,1);
		}else if(animationped == 141) {
			ApplyAnimation(playerid,"PED","FALL_skyDive",4.1,0,1,1,1,1);
		}else if(animationped == 142) {
			ApplyAnimation(playerid,"PED","Fight2Idle",4.1,0,1,1,1,1);
		}else if(animationped == 143) {
			ApplyAnimation(playerid,"PED","FightA_1",4.1,0,1,1,1,1);
		}else if(animationped == 144) {
			ApplyAnimation(playerid,"PED","FightA_2",4.1,0,1,1,1,1);
		}else if(animationped == 145) {
			ApplyAnimation(playerid,"PED","FightA_3",4.1,0,1,1,1,1);
		}else if(animationped == 146) {
			ApplyAnimation(playerid,"PED","FightA_block",4.1,0,1,1,1,1);
		}else if(animationped == 147) {
			ApplyAnimation(playerid,"PED","FightA_G",4.1,0,1,1,1,1);
		}else if(animationped == 148) {
			ApplyAnimation(playerid,"PED","FightA_M",4.1,0,1,1,1,1);
		}else if(animationped == 149) {
			ApplyAnimation(playerid,"PED","FIGHTIDLE",4.1,0,1,1,1,1);
		}else if(animationped == 150) {
			ApplyAnimation(playerid,"PED","FightShB",4.1,0,1,1,1,1);
		}else if(animationped == 151) {
			ApplyAnimation(playerid,"PED","FightShF",4.1,0,1,1,1,1);
		}else if(animationped == 152) {
			ApplyAnimation(playerid,"PED","FightSh_BWD",4.1,0,1,1,1,1);
		}else if(animationped == 153) {
			ApplyAnimation(playerid,"PED","FightSh_FWD",4.1,0,1,1,1,1);
		}else if(animationped == 154) {
			ApplyAnimation(playerid,"PED","FightSh_Left",4.1,0,1,1,1,1);
		}else if(animationped == 155) {
			ApplyAnimation(playerid,"PED","FightSh_Right",4.1,0,1,1,1,1);
		}else if(animationped == 156) {
			ApplyAnimation(playerid,"PED","flee_lkaround_01",4.1,0,1,1,1,1);
		}else if(animationped == 157) {
			ApplyAnimation(playerid,"PED","FLOOR_hit",4.1,0,1,1,1,1);
		}else if(animationped == 158) {
			ApplyAnimation(playerid,"PED","FLOOR_hit_f",4.1,0,1,1,1,1);
		}else if(animationped == 159) {
			ApplyAnimation(playerid,"PED","fucku",4.1,0,1,1,1,1);
		}else if(animationped == 160) {
			ApplyAnimation(playerid,"PED","gang_gunstand",4.1,0,1,1,1,1);
		}else if(animationped == 161) {
			ApplyAnimation(playerid,"PED","gas_cwr",4.1,0,1,1,1,1);
		}else if(animationped == 162) {
			ApplyAnimation(playerid,"PED","getup",4.1,0,1,1,1,1);
		}else if(animationped == 163) {
			ApplyAnimation(playerid,"PED","getup_front",4.1,0,1,1,1,1);
		}else if(animationped == 164) {
			ApplyAnimation(playerid,"PED","gum_eat",4.1,0,1,1,1,1);
		}else if(animationped == 165) {
			ApplyAnimation(playerid,"PED","GunCrouchBwd",4.1,0,1,1,1,1);
		}else if(animationped == 166) {
			ApplyAnimation(playerid,"PED","GunCrouchFwd",4.1,0,1,1,1,1);
		}else if(animationped == 167) {
			ApplyAnimation(playerid,"PED","GunMove_BWD",4.1,0,1,1,1,1);
		}else if(animationped == 168) {
			ApplyAnimation(playerid,"PED","GunMove_FWD",4.1,0,1,1,1,1);
		}else if(animationped == 169) {
			ApplyAnimation(playerid,"PED","GunMove_L",4.1,0,1,1,1,1);
		}else if(animationped == 170) {
			ApplyAnimation(playerid,"PED","GunMove_R",4.1,0,1,1,1,1);
		}else if(animationped == 171) {
			ApplyAnimation(playerid,"PED","Gun_2_IDLE",4.1,0,1,1,1,1);
		}else if(animationped == 172) {
			ApplyAnimation(playerid,"PED","GUN_BUTT",4.1,0,1,1,1,1);
		}else if(animationped == 173) {
			ApplyAnimation(playerid,"PED","GUN_BUTT_crouch",4.1,0,1,1,1,1);
		}else if(animationped == 174) {
			ApplyAnimation(playerid,"PED","Gun_stand",4.1,0,1,1,1,1);
		}else if(animationped == 175) {
			ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1);
		}else if(animationped == 176) {
			ApplyAnimation(playerid,"PED","handsup",4.1,0,1,1,1,1);
		}else if(animationped == 177) {
			ApplyAnimation(playerid,"PED","HitA_1",4.1,0,1,1,1,1);
		}else if(animationped == 178) {
			ApplyAnimation(playerid,"PED","HitA_2",4.1,0,1,1,1,1);
		}else if(animationped == 179) {
			ApplyAnimation(playerid,"PED","HitA_3",4.1,0,1,1,1,1);
		}else if(animationped == 180) {
			ApplyAnimation(playerid,"PED","HIT_back",4.1,0,1,1,1,1);
		}else if(animationped == 181) {
			ApplyAnimation(playerid,"PED","HIT_behind",4.1,0,1,1,1,1);
		}else if(animationped == 182) {
			ApplyAnimation(playerid,"PED","HIT_front",4.1,0,1,1,1,1);
		}else if(animationped == 183) {
			ApplyAnimation(playerid,"PED","HIT_GUN_BUTT",4.1,0,1,1,1,1);
		}else if(animationped == 184) {
			ApplyAnimation(playerid,"PED","HIT_L",4.1,0,1,1,1,1);
		}else if(animationped == 185) {
			ApplyAnimation(playerid,"PED","HIT_R",4.1,0,1,1,1,1);
		}else if(animationped == 186) {
			ApplyAnimation(playerid,"PED","HIT_walk",4.1,0,1,1,1,1);
		}else if(animationped == 187) {
			ApplyAnimation(playerid,"PED","HIT_wall",4.1,0,1,1,1,1);
		}else if(animationped == 188) {
			ApplyAnimation(playerid,"PED","Idlestance_fat",4.1,0,1,1,1,1);
		}else if(animationped == 189) {
			ApplyAnimation(playerid,"PED","idlestance_old",4.1,0,1,1,1,1);
		}else if(animationped == 190) {
			ApplyAnimation(playerid,"PED","IDLE_armed",4.1,0,1,1,1,1);
		}else if(animationped == 191) {
			ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
		}else if(animationped == 192) {
			ApplyAnimation(playerid,"PED","IDLE_csaw",4.1,0,1,1,1,1);
		}else if(animationped == 193) {
			ApplyAnimation(playerid,"PED","Idle_Gang1",4.1,0,1,1,1,1);
		}else if(animationped == 194) {
			ApplyAnimation(playerid,"PED","IDLE_HBHB",4.1,0,1,1,1,1);
		}else if(animationped == 195) {
			ApplyAnimation(playerid,"PED","IDLE_ROCKET",4.1,0,1,1,1,1);
		}else if(animationped == 196) {
			ApplyAnimation(playerid,"PED","IDLE_stance",4.1,0,1,1,1,1);
		}else if(animationped == 197) {
			ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
		}else if(animationped == 198) {
			ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,1,1);
		}else if(animationped == 199) {
			ApplyAnimation(playerid,"PED","Jetpack_Idle",4.1,0,1,1,1,1);
		}else if(animationped == 200) {
			ApplyAnimation(playerid,"PED","JOG_femaleA",4.1,0,1,1,1,1);
		}else if(animationped == 201) {
			ApplyAnimation(playerid,"PED","JOG_maleA",4.1,0,1,1,1,1);
		}else if(animationped == 202) {
			ApplyAnimation(playerid,"PED","JUMP_glide",4.1,0,1,1,1,1);
		}else if(animationped == 203) {
			ApplyAnimation(playerid,"PED","JUMP_land",4.1,0,1,1,1,1);
		}else if(animationped == 204) {
			ApplyAnimation(playerid,"PED","JUMP_launch",4.1,0,1,1,1,1);
		}else if(animationped == 205) {
			ApplyAnimation(playerid,"PED","JUMP_launch_R",4.1,0,1,1,1,1);
		}else if(animationped == 206) {
			ApplyAnimation(playerid,"PED","KART_drive",4.1,0,1,1,1,1);
		}else if(animationped == 207) {
			ApplyAnimation(playerid,"PED","KART_L",4.1,0,1,1,1,1);
		}else if(animationped == 208) {
			ApplyAnimation(playerid,"PED","KART_LB",4.1,0,1,1,1,1);
		}else if(animationped == 209) {
			ApplyAnimation(playerid,"PED","KART_R",4.1,0,1,1,1,1);
		}else if(animationped == 210) {
			ApplyAnimation(playerid,"PED","KD_left",4.1,0,1,1,1,1);
		}else if(animationped == 211) {
			ApplyAnimation(playerid,"PED","KD_right",4.1,0,1,1,1,1);
		}else if(animationped == 212) {
			ApplyAnimation(playerid,"PED","KO_shot_face",4.1,0,1,1,1,1);
		}else if(animationped == 213) {
			ApplyAnimation(playerid,"PED","KO_shot_front",4.1,0,1,1,1,1);
		}else if(animationped == 214) {
			ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
		}else if(animationped == 215) {
			ApplyAnimation(playerid,"PED","KO_skid_back",4.1,0,1,1,1,1);
		}else if(animationped == 216) {
			ApplyAnimation(playerid,"PED","KO_skid_front",4.1,0,1,1,1,1);
		}else if(animationped == 217) {
			ApplyAnimation(playerid,"PED","KO_spin_L",4.1,0,1,1,1,1);
		}else if(animationped == 218) {
			ApplyAnimation(playerid,"PED","KO_spin_R",4.1,0,1,1,1,1);
		}else if(animationped == 219) {
			ApplyAnimation(playerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
		}else if(animationped == 220) {
			ApplyAnimation(playerid,"PED","phone_in",4.1,0,1,1,1,1);
		}else if(animationped == 221) {
			ApplyAnimation(playerid,"PED","phone_out",4.1,0,1,1,1,1);
		}else if(animationped == 222) {
			ApplyAnimation(playerid,"PED","phone_talk",4.1,0,1,1,1,1);
		}else if(animationped == 223) {
			ApplyAnimation(playerid,"PED","Player_Sneak",4.1,0,1,1,1,1);
		}else if(animationped == 224) {
			ApplyAnimation(playerid,"PED","Player_Sneak_walkstart",4.1,0,1,1,1,1);
		}else if(animationped == 225) {
			ApplyAnimation(playerid,"PED","roadcross",4.1,0,1,1,1,1);
		}else if(animationped == 226) {
			ApplyAnimation(playerid,"PED","roadcross_female",4.1,0,1,1,1,1);
		}else if(animationped == 227) {
			ApplyAnimation(playerid,"PED","roadcross_gang",4.1,0,1,1,1,1);
		}else if(animationped == 228) {
			ApplyAnimation(playerid,"PED","roadcross_old",4.1,0,1,1,1,1);
		}else if(animationped == 229) {
			ApplyAnimation(playerid,"PED","run_1armed",4.1,0,1,1,1,1);
		}else if(animationped == 230) {
			ApplyAnimation(playerid,"PED","run_armed",4.1,0,1,1,1,1);
		}else if(animationped == 231) {
			ApplyAnimation(playerid,"PED","run_civi",4.1,0,1,1,1,1);
		}else if(animationped == 232) {
			ApplyAnimation(playerid,"PED","run_csaw",4.1,0,1,1,1,1);
		}else if(animationped == 233) {
			ApplyAnimation(playerid,"PED","run_fat",4.1,0,1,1,1,1);
		}else if(animationped == 234) {
			ApplyAnimation(playerid,"PED","run_fatold",4.1,0,1,1,1,1);
		}else if(animationped == 235) {
			ApplyAnimation(playerid,"PED","run_gang1",4.1,0,1,1,1,1);
		}else if(animationped == 236) {
			ApplyAnimation(playerid,"PED","run_left",4.1,0,1,1,1,1);
		}else if(animationped == 237) {
			ApplyAnimation(playerid,"PED","run_old",4.1,0,1,1,1,1);
		}else if(animationped == 238) {
			ApplyAnimation(playerid,"PED","run_player",4.1,0,1,1,1,1);
		}else if(animationped == 239) {
			ApplyAnimation(playerid,"PED","run_right",4.1,0,1,1,1,1);
		}else if(animationped == 240) {
			ApplyAnimation(playerid,"PED","run_rocket",4.1,0,1,1,1,1);
		}else if(animationped == 241) {
			ApplyAnimation(playerid,"PED","Run_stop",4.1,0,1,1,1,1);
		}else if(animationped == 242) {
			ApplyAnimation(playerid,"PED","Run_stopR",4.1,0,1,1,1,1);
		}else if(animationped == 243) {
			ApplyAnimation(playerid,"PED","Run_Wuzi",4.1,0,1,1,1,1);
		}else if(animationped == 244) {
			ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,1,1,1,1);
		}else if(animationped == 245) {
			ApplyAnimation(playerid,"PED","SEAT_idle",4.1,0,1,1,1,1);
		}else if(animationped == 246) {
			ApplyAnimation(playerid,"PED","SEAT_up",4.1,0,1,1,1,1);
		}else if(animationped == 247) {
			ApplyAnimation(playerid,"PED","SHOT_leftP",4.1,0,1,1,1,1);
		}else if(animationped == 248) {
			ApplyAnimation(playerid,"PED","SHOT_partial",4.1,0,1,1,1,1);
		}else if(animationped == 249) {
			ApplyAnimation(playerid,"PED","SHOT_partial_B",4.1,0,1,1,1,1);
		}else if(animationped == 250) {
			ApplyAnimation(playerid,"PED","SHOT_rightP",4.1,0,1,1,1,1);
		}else if(animationped == 251) {
			ApplyAnimation(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1);
		}else if(animationped == 252) {
			ApplyAnimation(playerid,"PED","Smoke_in_car",4.1,0,1,1,1,1);
		}else if(animationped == 253) {
			ApplyAnimation(playerid,"PED","sprint_civi",4.1,0,1,1,1,1);
		}else if(animationped == 254) {
			ApplyAnimation(playerid,"PED","sprint_panic",4.1,0,1,1,1,1);
		}else if(animationped == 255) {
			ApplyAnimation(playerid,"PED","Sprint_Wuzi",4.1,0,1,1,1,1);
		}else if(animationped == 256) {
			ApplyAnimation(playerid,"PED","swat_run",4.1,0,1,1,1,1);
		}else if(animationped == 257) {
			ApplyAnimation(playerid,"PED","Swim_Tread",4.1,0,1,1,1,1);
		}else if(animationped == 258) {
			ApplyAnimation(playerid,"PED","Tap_hand",4.1,0,1,1,1,1);
		}else if(animationped == 259) {
			ApplyAnimation(playerid,"PED","Tap_handP",4.1,0,1,1,1,1);
		}else if(animationped == 260) {
			ApplyAnimation(playerid,"PED","turn_180",4.1,0,1,1,1,1);
		}else if(animationped == 261) {
			ApplyAnimation(playerid,"PED","Turn_L",4.1,0,1,1,1,1);
		}else if(animationped == 262) {
			ApplyAnimation(playerid,"PED","Turn_R",4.1,0,1,1,1,1);
		}else if(animationped == 263) {
			ApplyAnimation(playerid,"PED","WALK_armed",4.1,0,1,1,1,1);
		}else if(animationped == 264) {
			ApplyAnimation(playerid,"PED","WALK_civi",4.1,0,1,1,1,1);
		}else if(animationped == 265) {
			ApplyAnimation(playerid,"PED","WALK_csaw",4.1,0,1,1,1,1);
		}else if(animationped == 266) {
			ApplyAnimation(playerid,"PED","Walk_DoorPartial",4.1,0,1,1,1,1);
		}else if(animationped == 267) {
			ApplyAnimation(playerid,"PED","WALK_drunk",4.1,0,1,1,1,1);
		}else if(animationped == 268) {
			ApplyAnimation(playerid,"PED","WALK_fat",4.1,0,1,1,1,1);
		}else if(animationped == 269) {
			ApplyAnimation(playerid,"PED","WALK_fatold",4.1,0,1,1,1,1);
		}else if(animationped == 270) {
			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,0,1,1,1,1);
		}else if(animationped == 271) {
			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,0,1,1,1,1);
		}else if(animationped == 272) {
			ApplyAnimation(playerid,"PED","WALK_old",4.1,0,1,1,1,1);
		}else if(animationped == 273) {
			ApplyAnimation(playerid,"PED","WALK_player",4.1,0,1,1,1,1);
		}else if(animationped == 274) {
			ApplyAnimation(playerid,"PED","WALK_rocket",4.1,0,1,1,1,1);
		}else if(animationped == 275) {
			ApplyAnimation(playerid,"PED","WALK_shuffle",4.1,0,1,1,1,1);
		}else if(animationped == 276) {
			ApplyAnimation(playerid,"PED","WALK_start",4.1,0,1,1,1,1);
		}else if(animationped == 277) {
			ApplyAnimation(playerid,"PED","WALK_start_armed",4.1,0,1,1,1,1);
		}else if(animationped == 278) {
			ApplyAnimation(playerid,"PED","WALK_start_csaw",4.1,0,1,1,1,1);
		}else if(animationped == 279) {
			ApplyAnimation(playerid,"PED","WALK_start_rocket",4.1,0,1,1,1,1);
		}else if(animationped == 280) {
			ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,0,1,1,1,1);
		}else if(animationped == 281) {
			ApplyAnimation(playerid,"PED","WEAPON_crouch",4.1,0,1,1,1,1);
		}else if(animationped == 282) {
			ApplyAnimation(playerid,"PED","woman_idlestance",4.1,0,1,1,1,1);
		}else if(animationped == 283) {
			ApplyAnimation(playerid,"PED","woman_run",4.1,0,1,1,1,1);
		}else if(animationped == 284) {
			ApplyAnimation(playerid,"PED","WOMAN_runbusy",4.1,0,1,1,1,1);
		}else if(animationped == 285) {
			ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,0,1,1,1,1);
		}else if(animationped == 286) {
			ApplyAnimation(playerid,"PED","woman_runpanic",4.1,0,1,1,1,1);
		}else if(animationped == 287) {
			ApplyAnimation(playerid,"PED","WOMAN_runsexy",4.1,0,1,1,1,1);
		}else if(animationped == 288) {
			ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,0,1,1,1,1);
		}else if(animationped == 289) {
			ApplyAnimation(playerid,"PED","WOMAN_walkfatold",4.1,0,1,1,1,1);
		}else if(animationped == 290) {
			ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,0,1,1,1,1);
		}else if(animationped == 291) {
			ApplyAnimation(playerid,"PED","WOMAN_walkold",4.1,0,1,1,1,1);
		}else if(animationped == 292) {
			ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,0,1,1,1,1);
		}else if(animationped == 293) {
			ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,0,1,1,1,1);
		}else if(animationped == 294) {
			ApplyAnimation(playerid,"PED","WOMAN_walkshop",4.1,0,1,1,1,1);
		}else if(animationped == 295) {
			ApplyAnimation(playerid,"PED","XPRESSscratch",4.1,0,1,1,1,1);
		}
		return 1;
	}
	if(strcmp(tmp, "/handsup", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
			return 1;
		}}
	if(strcmp(tmp, "/dance", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) > 3) return 1;
			if(isnull(tmp)) {
				SendClientMessage(playerid, yellow, " Usage: /dance [1-3]");
				return 1;
			}
			animationped = strval(tmp);
			if(animationped < 1 || animationped > 3) {
				SendClientMessage(playerid, yellow, " Usage: /dance [1-3]");
				return 1;
			}
			if(animationped == 1) {
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
			} else if(animationped == 2) {
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
			} else if(animationped == 3) {
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
			}
			return 1; }}


	/*
if(strcmp(tmp,"/test",true)==0) {
tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx); tmp3 = strtok(cmdtext,idx);
if (isnull(tmp) || isnull(tmp2) || isnull(tmp3)) {
if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /TEST <ID>");
else SendClientMessage(playerid, yellow, " Usage: /TEST <ID>");
return 1; }

CreatePlayerObject(playerid,1574,X,Y,Z,tmp,tmp2,tmp3);
return 1; }
*/
	/*
for(new i = 0; i < MAX_PLAYERS; i++)
if(IsPlayerConnected(i))
if(Login[i]==0)
SetPlayerMarkerForPlayer(playerid,i,playerColorOnCon);
else
if(Gang[i]==0){
if(Color[i]==0) format(string, sizeof(string), "%sFF",playerColor);
else format(string, sizeof(string), "%s40",playerColor2);
new Coloren=HexToInt(string);
SetPlayerMarkerForPlayer(playerid,i,Coloren);
}else{
if(Color[i]==0) format(string, sizeof(string), "%sFF",playerGangColor[i]);
else format(string, sizeof(string), "%s40",playerGangColor[i]);
new Coloren=HexToInt(string);
SetPlayerMarkerForPlayer(playerid,i,Coloren); }
*/

	if(strcmp(tmp,"/givecash",true)==0) {
		tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
		if (isnull(tmp) || isnull(tmp2)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GIVECASH <ID> <СУММА>");
			else SendClientMessage(playerid, yellow, " Usage: /GIVECASH <ID> <AMOUNT>");
			return 1; }

		if(strlen(tmp) > 9) return 1;
		if(strlen(tmp2) > 9) return 1;


		if(!IsNumeric(tmp2)) return 1;

		if(strlen(tmp2) >= 8 || strval(tmp2) <= 0 || CCCash[playerid]-2000<strval(tmp2)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Невозможно перевести.");
			else SendClientMessage(playerid, yellow, " Impossible to transfer.");
			return 1; }

		if(Sponsor[playerid]==0 && strval(tmp2)>500000) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы не можете передать больше $500000.");
			else SendClientMessage(playerid, yellow, " You can not sent more than $500000.");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
				else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
				return 1;
			}
			if(temp==-2){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," No players were found.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
			else SendClientMessage(playerid, yellow," Player was not found.");
			return 1;
		}

		if(PLgaming[plid]==0) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок в режиме AWAY.");
			else SendClientMessage(playerid, yellow," Player in AWAY mode.");
			return 1; }

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		if(Lang[playerid]==0) format(string,sizeof(string), " Вы отправили %s (%d) $%d.",ref,plid,strval(tmp2));
		else format(string,sizeof(string), " You sent $%d to %s (%d).",strval(tmp2),ref,plid);
		SendClientMessage(playerid, yellow, string);

		Givemoney(playerid, (-strval(tmp2)));


		if(Lang[plid]==0) format(string,sizeof(string), " Вы получили $%d от %s (%d).",strval(tmp2),name,playerid);
		else format(string,sizeof(string), " You received $%d from %s (%d).",strval(tmp2),name,playerid);
		SendClientMessage(plid, yellow, string);

		Givemoney(plid, strval(tmp2));

		format(string,sizeof(string),"NOTICE +%s :2***\2; %s 2(id:\2;%d2) 10передал 2\2;$%d  %s 2(id:\2;%d2)",EchoChan,name, playerid, strval(tmp2), ref, plid);
		IRC_SendRaw(EchoConnection1, string);

		return 1;
	}

	if(strcmp(tmp,"/giveplcash",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if (isnull(tmp) || isnull(tmp2)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GIVEPLCASH <ID> <СУММА>");
				else SendClientMessage(playerid, yellow, " Usage: /GIVEPLCASH <ID> <AMOUNT>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Игрок %s получил $%d.",ref,strval(tmp2));
				else format(string,sizeof(string), " Player %s received $%d.",ref,strval(tmp2));
				SendClientMessage(i, yellow, string); }

			if(Lang[plid]==0) format(string,sizeof(string), " Вы получили $%d от Администрации.",strval(tmp2));
			else format(string,sizeof(string), " You received $%d from Adminstration.",strval(tmp2));
			SendClientMessage(plid, yellow, string);

			Givemoney(plid, strval(tmp2));

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/giveallcash",true)==0) {
		if(Alevel[playerid] > 2) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GIVEALLCASH <СУММА>");
				else SendClientMessage(playerid, yellow, " Usage: /GIVEALLCASH <AMOUNT>");
				return 1; }

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) {
				if(Lang[i]==0) format(string,sizeof(string), " Все игроки получили $%d от Администрации.",strval(tmp));
				else format(string,sizeof(string), " All players received $%d from Administration.",strval(tmp));
				SendClientMessage(i, yellow, string);
				Givemoney(i, strval(tmp)); }

		}else Errorm(playerid);
		return 1;
	}
	if(strcmp(tmp,"/takecash",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx); 
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /TAKECASH <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /TAKECASH <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " У игрока %s забрана вся наличка.",ref);
				else format(string,sizeof(string), " Player %s has lost all cash.",ref);
				SendClientMessage(i, yellow, string); }

			if(Lang[plid]==0) format(string,sizeof(string), " Администрация забрала у вас всю наличку.");
			else format(string,sizeof(string), " Administration has taken away all your cash.");
			SendClientMessage(plid, yellow, string);

			CCCash[plid]=0;
			SetPlayerMoney(plid,0);

			Givemoney(plid, 2000);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/getip",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GETIP <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /GETIP <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

			GetPlayerIp(plid,string,sizeof(string));

			if(Lang[playerid]==0) format(string,sizeof(string), " Адрес %s: %s",ref,string);
			else format(string,sizeof(string), " %s's ip: %s",ref,string);
			SendClientMessage(playerid, yellow, string);


		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/getlogin",true)==0) {
		tmp = strtok(cmdtext,idx);
		if (isnull(tmp)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GETLOGIN <ID>");
			else SendClientMessage(playerid, yellow, " Usage: /GETLOGIN <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
				else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
				return 1;
			}
			if(temp==-2){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," No players were found.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
			else SendClientMessage(playerid, yellow," Player was not found.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		if(Lang[playerid]==0) format(string,sizeof(string), " %s - %d",ref,Login[plid]);
		else format(string,sizeof(string), " %s - %d",ref,Login[plid]);
		SendClientMessage(playerid, yellow, string);

		return 1;
	}

	if(strcmp(tmp,"/banip",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if ((isnull(tmp)) || (isnull(tmp2))) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /BANIP <IP> <ПРИЧИНА>");
				else SendClientMessage(playerid, yellow, " Usage: /BANIP <IP> <REASON>");
				return 1; }

			if(strcmp(tmp,"*.*.*.*",true)==0) return 1;

			new war;
			for(new i = 0; i < strlen(tmp); i++) if(tmp[i] == 46) war++;
			if(war!=3){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Неверный адрес.");
				else SendClientMessage(playerid, yellow, " Invalid address.");
				return 1; }

			new TTTemp;
			for(new i=0; i<strlen(tmp); i++) {
				TTTemp=0;
				if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
				if (tmp[i] == 46 || tmp[i] == 42) TTTemp=1;
				if(TTTemp != 1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Неверный адрес.");
					else SendClientMessage(playerid, yellow, " Invalid address.");
					return 1; }
			}

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Адрес %s добавлен в бан лист.",tmp);
				else format(string,sizeof(string), " Ip %s was added to banlist.",tmp);
				SendClientMessage(i, yellow, string); }

			new lent=8;
			lent+=strlen(tmp);

			format(string,sizeof(string), "player: IP; admin: %s; reason: %s",name,cmdtext[lent]);
			SetIpBan(tmp, 7, string);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/unbanip",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /UNBANIP <IP>");
				else SendClientMessage(playerid, yellow, " Usage: /UNBANIP <IP>");
				return 1; }

			new war;
			for(new i = 0; i < strlen(tmp); i++) if(tmp[i] == 46) war++;
			if(war!=3){
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Неверный адрес.");
				else SendClientMessage(playerid, yellow, " Invalid address.");
				return 1; }

			new TTTemp;
			for(new i=0; i<strlen(tmp); i++) {
				TTTemp=0;
				if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
				if (tmp[i] == 46 || tmp[i] == 42) TTTemp=1;
				if(TTTemp != 1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Неверный адрес.");
					else SendClientMessage(playerid, yellow, " Invalid address.");
					return 1; }
			}

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Адрес %s удалён из бан листа.",tmp);
				else format(string,sizeof(string), " Ip %s was removed from banlist.",tmp);
				SendClientMessage(i, yellow, string); }

			Unban(tmp);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/lockserver",true)==0) {
		if(Alevel[playerid] > 2) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /LOCKSERVER <ПАРОЛЬ>");
				else SendClientMessage(playerid, yellow, " Usage: /LOCKSERVER <PASSWORD>");
				return 1; }

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Сервер был заблокирован паролем %s.",cmdtext[12]);
				else format(string,sizeof(string), " Server was locked with password %s.",cmdtext[12]);
				SendClientMessage(i, yellow, string); }

			format(string, sizeof(string), "password %s", cmdtext[12]);
			SendRconCommand(string);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/fullrestart",true)==0) {
		if(Alevel[playerid] > 2) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /FULLRESTART <ПРИЧИНА>");
				else SendClientMessage(playerid, yellow, " Usage: /FULLRESTART <REASON>");
				return 1; }

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) {
				if(Lang[i]==0) format(string,sizeof(string), " Администрация отправила сервер на полный перезапуск. Причина: %s",cmdtext[13]);
				else format(string,sizeof(string), " Administration rstarted server (full restart). Reason: %s",cmdtext[13]);
				SendClientMessage(i, yellow, string); }

			SetTimer("GameModeExitFuncFULL", 1000, 0);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/restart",true)==0) {
		if(Alevel[playerid] > 2) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /RESTART <ПРИЧИНА>");
				else SendClientMessage(playerid, yellow, " Usage: /RESTART <REASON>");
				return 1; }

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) {
				if(Lang[i]==0) format(string,sizeof(string), " Администрация отправила сервер на перезапуск. Причина: %s",cmdtext[9]);
				else format(string,sizeof(string), " Administration rstarted server. Reason: %s",cmdtext[9]);
				SendClientMessage(i, yellow, string); }

			SetTimer("GameModeExitFunc", 1000, 0);

		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/crashteston",true)==0) {
		if(Alevel[playerid] > 2) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /CRASHTESTON <0 OR 1>");
				else SendClientMessage(playerid, yellow, " Usage: /CRASHTESTON <0 OR 1>");
				return 1; }

			CrashTestOn=strval(tmp);
			new sfile[256]; format(sfile,sizeof(sfile),"LVM/system/config.ini");
			dini_IntSet(sfile,"CrashTestOn", strval(tmp));
			SendClientMessage(playerid, yellow, " OK");

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/goto",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GOTO <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /GOTO <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			TeleTo(playerid, plid, name);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/gethere",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /GETHERE <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /GETHERE <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			TeleHere(playerid, plid, name);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/setalevel",true)==0) {
		if(Alevel[playerid] > 2) {
			tmp = strtok(cmdtext,idx); tmp2 = strtok(cmdtext,idx);
			if ((isnull(tmp)) || (isnull(tmp2))) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SETALEVEL <NAME/ID> <0-4>");
				else SendClientMessage(playerid, yellow, " Usage: /SETLEVEL <ID> <0-4>");
				return 1; }

			if(strval(tmp2)<0 || strval(tmp2)>4){
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /SETALEVEL <NAME/ID> <0-4>");
				else SendClientMessage(playerid, yellow, " Usage: /SETLEVEL <ID> <0-4>");
				return 1; }

			new plid=strval(tmp);

			if(!IsNumeric(tmp)) {
				new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", tmp);
				if (!dini_Exists(PFp)) {
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
					else SendClientMessage(playerid, yellow," Invalid name.");
					return 1;
				}

				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Alevel[i]>0) {
					if(Lang[i]==0) format(string,sizeof(string), " Админ уровень игрока %s изменён на %d.", tmp, strval(tmp2));
					else format(string,sizeof(string), " %s's Admin level was changed to %d.", tmp, strval(tmp2));
					SendClientMessage(i, yellow, string); }

				dini_IntSet(PFp,"alevel",strval(tmp2));

				return 1;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Админ уровень игрока %s изменён на %d.", ref, strval(tmp2));
				else format(string,sizeof(string), " %s's Admin level was changed to %d.", ref, strval(tmp2));
				SendClientMessage(i, yellow, string); }

			new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", ref);
			if (!dini_Exists(PFp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Не зарегистрирован.");
				else SendClientMessage(playerid, yellow," Not registered.");
				return 1;
			}
			dini_IntSet(PFp,"alevel",strval(tmp2));
			Alevel[plid]=strval(tmp2);

			if(Lang[plid]==0) format(string,sizeof(string), " Ваш Админ уровень был изменён на %d.",strval(tmp2));
			else format(string,sizeof(string), " Your Admin level was changed to %d.",strval(tmp2));
			SendClientMessage(plid, yellow, string);

		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/apassremove",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /APASSREMOVE <ИМЯ>");
				else SendClientMessage(playerid, yellow, " Usage: /APASSREMOVE <NAME>");
				return 1; }

			if(IsNumeric(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /APASSREMOVE <ИМЯ>");
				else SendClientMessage(playerid, yellow, " Usage: /APASSREMOVE <NAME>");
				return 1; }

			new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", tmp);
			if (!dini_Exists(PFp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Неверное имя.");
				else SendClientMessage(playerid, yellow," Invalid name.");
				return 1;
			}

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Пароль игрока %s изменён на 1234.", tmp);
				else format(string,sizeof(string), " %s's password was changed to 1234.", tmp);
				SendClientMessage(i, yellow, string); }

			dini_IntSet(PFp,"password",udb_hash("1234"));

		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/mute",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /MUTE <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /MUTE <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			MutePl(plid);
		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/heal",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /HEAL <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /HEAL <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Здоровье игрока %s восстановлено.",ref);
				else format(string,sizeof(string), " Player %s was healed.",ref);
				SendClientMessage(i, yellow, string); }

			if(Lang[plid]==0) format(string,sizeof(string), " Администрация восстановила ваше здоровье.");
			else format(string,sizeof(string), " You was healed by Administration.");
			SendClientMessage(plid, yellow, string);

			SetPlayerHealth(plid,100.0);

		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp,"/unlockveh",true)==0) {
		if(Alevel[playerid] > 1) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /UNLOCKVEH <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /UNLOCKVEH <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Alevel[i]>0) {
				if(Lang[i]==0) format(string,sizeof(string), " Транспорт разблокирован для игрока %s.",ref);
				else format(string,sizeof(string), " All vehicles was unlocked for player %s.",ref);
				SendClientMessage(i, yellow, string); }

			if(Lang[plid]==0) format(string,sizeof(string), " Администрация разблокировала для вас весь транспорт.");
			else format(string,sizeof(string), " Administration unlocked all vehicles for you.");
			SendClientMessage(plid, yellow, string);

			LKills[plid]=100;
			SetVehicleParamsForPlayer(vehvorob,plid, 0, 0);
			SetVehicleParamsForPlayer(vehtank,plid, 0, 0);
			SetVehicleParamsForPlayer(vehhydra,plid, 0, 0);
			SetVehicleParamsForPlayer(vehhanter,plid, 0, 0);

		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/unmute",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /UNMUTE <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /UNMUTE <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			UnMutePl(plid);
		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/jail",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /JAIL <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /JAIL <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			JailPl(plid);
		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/unjail",true)==0) {
		if(Alevel[playerid] > 0) {
			tmp = strtok(cmdtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Использование: /UNJAIL <ID>");
				else SendClientMessage(playerid, yellow, " Usage: /UNJAIL <ID>");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					else SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
					else SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			UnJailPl(plid);
		}else Errorm(playerid);
		return 1;
	}

	if(strcmp(tmp,"/rules",true)==0) {
		if(Lang[playerid]==0) {
			format(string,sizeof(string)," LV Maximum v%s | Правила сервера: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow, " Не флудить/спамить");
			SendClientMessage(playerid, yellow, " Не использовать читы");
			SendClientMessage(playerid, yellow, " Не рекламировать");
			SendClientMessage(playerid, yellow, " Не использовать caps lock в чате");
			SendClientMessage(playerid, yellow, " Не пытаться взломать сервер");
			SendClientMessage(playerid, yellow, " Полный список правил на gta.bews.tk");
		}else{
			format(string,sizeof(string)," LV Maximum v%s | Server rules: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow, " No flood/spam");
			SendClientMessage(playerid, yellow, " No cheat");
			SendClientMessage(playerid, yellow, " No advertising");
			SendClientMessage(playerid, yellow, " No caps lock mode");
			SendClientMessage(playerid, yellow, " No server abuse"); }
		return 1; }

	if(strcmp(tmp,"/adminhelp",true)==0) {
		if(Alevel[playerid]>0) {
			format(string,sizeof(string)," LV Maximum v%s | Admin commands: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow, "/gang admcolor, admdel; /text; /rsay; /weather; /time; /announce; /kick; /kickall");
			SendClientMessage(playerid, yellow, "/ban; /akick; /unakick; /unaban; /aban; /giveplcash; /giveallcash; /takecash; /getip");
			SendClientMessage(playerid, yellow, "/banip; /unbanip; /lockserver; /fullrestart; /restart; /goto; /gethere; /setalevel; /apassremove");
			SendClientMessage(playerid, yellow, "/mute; /heal; /unmute; /jail; /unjail; /reconnect; /unlockveh; /eject; /mban; /apm");
		}else Errorm(playerid);
		return 1; }


	if(strcmp(tmp,"/reconnect",true)==0) {
		if(Alevel[playerid]>0) {
			IRC_Quit(EchoConnection1, "Reconnect");
			IRC_Quit(EchoConnection2, "Reconnect");
			SendClientMessage(playerid, yellow, " The inquiry was sent.");
		}else Errorm(playerid);
		return 1;
	}


	if(strcmp(tmp, "/int", true) == 0) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }

		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		tmp = strtok(cmdtext, idx);
		if (isnull(tmp) || strval(tmp)>146 || strval(tmp)<1) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Использование: /INT [1-146]");
			else SendClientMessage(playerid, yellow, " Usage: /INT [1-146]");
			return 1; }
		if(strlen(tmp) > 3) return 1;

		new id = strval(tmp);

		if (id==77 || id==114 || id==92 || id==113 || id==140 || id==78 || id==143
				|| id==103 || id==10 || id==142 || id==79 || id==132 || id==112 || id==37 || id==24 || id==32) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Данная локация заблокирована.");
			else SendClientMessage(playerid, yellow, " This location is locked.");
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }
		telep[playerid]=1;
		SetTimerEx("Tele",5000,0,"ii",playerid,id);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");

		return 1;
	}


	if(strcmp(tmp,"/skin",true)==0) {
		tmp = strtok(cmdtext,idx);
		if(strlen(tmp) > 3) return 1;
		if (isnull(tmp)) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Использование: /SKIN <ID>");
			else SendClientMessage(playerid, yellow, " Usage: /SKIN <ID>");
			return 1; }

		if((strval(tmp) == 0)||(strval(tmp) == 7)||(strval(tmp) >= 9 && strval(tmp) <= 41)||(strval(tmp) >= 43 && strval(tmp) <= 64)
				||(strval(tmp) >= 66 && strval(tmp) <= 73)||(strval(tmp) >= 75 && strval(tmp) <= 85)||(strval(tmp) >= 87 && strval(tmp) <= 118)
				||(strval(tmp) >= 120 && strval(tmp) <= 148)||(strval(tmp) >= 150 && strval(tmp) <= 207)||(strval(tmp) >= 209 && strval(tmp) <= 264)
				||(strval(tmp) >= 274 && strval(tmp) <= 288)||(strval(tmp) >= 290 && strval(tmp) <= 299)) {

			SetPlayerSkin(playerid,strval(tmp));
			Skin[playerid]=strval(tmp);

		}else{
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Выбран недопустимый скин.");
			else SendClientMessage(playerid, yellow, " Invalid skin id."); }

		return 1;
	}

	if(strcmp(tmp,"/in1", true) == 0) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }

		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }
		telep[playerid]=1;
		SetTimerEx("Tele",5000,0,"ii",playerid,1000);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");

		return 1;
	}
	if(strcmp(tmp,"/in2", true) == 0) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }

		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }
		telep[playerid]=1;
		SetTimerEx("Tele",5000,0,"ii",playerid,2000);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");

		return 1;
	}
	if(strcmp(tmp,"/in3", true) == 0) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }
		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }
		telep[playerid]=1;
		SetTimerEx("Tele",5000,0,"ii",playerid,3000);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");

		return 1;
	}
	if(strcmp(tmp,"/in4", true) == 0) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }
		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }
		telep[playerid]=1;
		SetTimerEx("Tele",5000,0,"ii",playerid,4000);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1;
	}
	if(strcmp(tmp,"/in5", true) == 0) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }
		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }

		telep[playerid]=1;
		SetTimerEx("Tele",5000,0,"ii",playerid,5000);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1;
	}
	if(strcmp(tmp,"/in6", true) == 0) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }
		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);

		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }

		telep[playerid]=1;
		SetTimerEx("Tele",5000,0,"ii",playerid,6000);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1;
	}
	if(strcmp(tmp,"/in7", true) == 0) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }
		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);

		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }

		telep[playerid]=1;
		SetTimerEx("Tele",5000,0,"ii",playerid,7000);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1;
	}
	if(strcmp(tmp,"/back", true) == 0) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(Jail[playerid] == 1) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }

		new ttemper=ZoneCheck(playerid, GetPlayerInterior(playerid));
		if(ttemper==2 || ttemper==4 || ttemper==5 || ttemper==6) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Отсюда телепорт запрещён.");
			else SendClientMessage(playerid, yellow, " Teleport from here is not allowed.");
			return 1; }

		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);

		if(DuelStarted==2)
		for(new i = 0; i < 2; i++)
		if(DuelMember[i]==playerid) {
			DuelStopL(playerid);
			if(i==0) { DuelStop(DuelMember[1]); return 1; }
			else { DuelStop(DuelMember[0]); return 1; } }

		if(DuelStarted==1)
		if(DuelMember[0]==playerid) {
			TogglePlayerControllable(playerid,1);
			DuelStop2(DuelMember[0]); return 1; }

		telep[playerid]=1;
		SetTimerEx("Tele",5000,0,"ii",playerid,8000);

		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1;
	}

	if(strcmp(tmp,"/ls", true) == 0) {
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(GetPlayerInterior(playerid)!=0) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }
		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		telep[playerid]=1;
		SetTimerEx("TeleV",5000,0,"iii",VID,1000,playerid);
		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1; }

	if(strcmp(tmp,"/lv", true) == 0) {
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(GetPlayerInterior(playerid)!=0) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }
		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		telep[playerid]=1;
		SetTimerEx("TeleV",5000,0,"iii",VID,2000,playerid);
		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1; }

	if(strcmp(tmp,"/sf", true) == 0) {
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(GetPlayerInterior(playerid)!=0) return 1;
		if(telep[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
			else SendClientMessage(playerid, yellow, " Teleport already in process.");
			return 1; }
		GetPlayerPos(playerid, XX[playerid],YY[playerid],ZZ[playerid]);
		telep[playerid]=1;
		SetTimerEx("TeleV",5000,0,"iii",VID,3000,playerid);
		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		return 1; }


	if(strcmp(tmp,"/top",true)==0) {
		tmp = strtok(cmdtext,idx);
		if(strlen(tmp) > 9) return 1;

		if (isnull(tmp)) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Топ-статистика. Использование: /TOP CASH, KILLS, DEATHS, SCORE, DM, RACE");
			else SendClientMessage(playerid, yellow, " Top-stats. Usage: /TOP CASH, KILLS, DEATHS, SCORE, DM, RACE");
			return 1; }

		if(strcmp(tmp, "cash", true) == 0){

			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(CCCash[i]>temp)
			temp=CCCash[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(CCCash[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string)," %s ($%d)",name1,temp); }

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(CCCash[i]>temp2 && CCCash[i]!=temp)
				temp2=CCCash[i];

				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(CCCash[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s ($%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(CCCash[i]>temp3 && CCCash[i]!=temp && CCCash[i]!=temp2)
				temp3=CCCash[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(CCCash[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s ($%d)",string,name3,temp3);
				} }

			SendClientMessage(playerid,yellow,string);
			return 1; }


		if(strcmp(tmp, "kills", true) == 0){

			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Kills[i]>temp)
			temp=Kills[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Kills[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string)," %s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Kills[i]>temp2 && Kills[i]!=temp)
				temp2=Kills[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Kills[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Kills[i]>temp3 && Kills[i]!=temp && Kills[i]!=temp2)
				temp3=Kills[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Kills[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }

			SendClientMessage(playerid,yellow,string);
			return 1; }


		if(strcmp(tmp, "deaths", true) == 0){

			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Deaths[i]>temp)
			temp=Deaths[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Deaths[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string)," %s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Deaths[i]>temp2 && Deaths[i]!=temp)
				temp2=Deaths[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Deaths[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Deaths[i]>temp3 && Deaths[i]!=temp && Deaths[i]!=temp2)
				temp3=Deaths[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Deaths[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }

			SendClientMessage(playerid,yellow,string);
			return 1; }


		if(strcmp(tmp, "score", true) == 0){

			new Score[MAX_PLAYERS];
			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) {
				Score[i] = Kills[i] - Deaths[i];
				if(Score[i]>temp)
				temp=Score[i]; }
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Score[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string)," %s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)){
					Score[i] = Kills[i] - Deaths[i];
					if(Score[i]>temp2 && Score[i]!=temp)
					temp2=Score[i]; }
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Score[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)){
					Score[i] = Kills[i] - Deaths[i];
					if(Score[i]>temp3 && Score[i]!=temp && Score[i]!=temp2)
					temp3=Score[i]; }
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Score[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }

			SendClientMessage(playerid,yellow,string);
			return 1; }


		if(strcmp(tmp, "dm", true) == 0){
			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(DMWIN[i]>temp)
			temp=DMWIN[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(DMWIN[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string)," %s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(DMWIN[i]>temp2 && DMWIN[i]!=temp)
				temp2=DMWIN[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(DMWIN[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(DMWIN[i]>temp3 && DMWIN[i]!=temp && DMWIN[i]!=temp2)
				temp3=DMWIN[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(DMWIN[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }
			SendClientMessage(playerid,yellow,string);
			return 1; }
		
		
		if(strcmp(tmp, "race", true) == 0){
			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(RaceWIN[i]>temp)
			temp=RaceWIN[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(RaceWIN[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string)," %s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(RaceWIN[i]>temp2 && RaceWIN[i]!=temp)
				temp2=RaceWIN[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(RaceWIN[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(RaceWIN[i]>temp3 && RaceWIN[i]!=temp && RaceWIN[i]!=temp2)
				temp3=RaceWIN[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(RaceWIN[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }
			SendClientMessage(playerid,yellow,string);
			return 1; }


		return Errorm(playerid); }

	if(strcmp(tmp,"/teleports",true)==0) {
		if(Lang[playerid]==0)
		format(string,sizeof(string)," LV Maximum v%s | Телепорты: ",Version);
		else format(string,sizeof(string)," LV Maximum v%s | Teleports: ",Version);
		SendClientMessage(playerid,green,string);
		SendClientMessage(playerid, yellow," '/ls' - Los Santos");
		SendClientMessage(playerid, yellow," '/sf' - San Fierro");
		SendClientMessage(playerid, yellow," '/lv' - Las Venturas");
		return 1;
	}

	if(strcmp(tmp,"/me",true)==0) {
		tmp = strtok(cmdtext,idx);
		if(strlen(tmp) >= 110) return 0;

		if (isnull(tmp)) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Использование: /ME <ТЕКСТ> ");
			else SendClientMessage(playerid, yellow, " Usage: /ME <TEXT>");
			return 1; }

		format(string, sizeof(string), " *** [%d] %s %s",playerid,name, cmdtext[4]);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		SendClientMessage(i, COLOUR_LIGHTBLUE, string);
		format(string, sizeof(string), "11*** [%d] %s %s",playerid,name, cmdtext[4]);
		IRC_Say(EchoConnection1, EchoChan, string);

		return 1;
	}

	if(strcmp(tmp,"/setpass",true) == 0) {
		tmp = strtok(cmdtext,idx);

		if (isnull(tmp)) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,green," Использование: /SETPASS <НОВЫЙ ПАРОЛЬ> ");
			else SendClientMessage(playerid, green, " Usage: /SETPASS <NEW PASSWORD>");
			return 1; }

		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);

		dini_IntSet(PF,"password",udb_hash(tmp));

		if(Lang[playerid]==0) SendClientMessage(playerid,green," Ваш пароль был изменён.");
		else SendClientMessage(playerid, green, " Your password was changed.");

		return 1;
	}


	if(Lang[playerid]==0) {

		if(strcmp(tmp,"/admins",true)==0) {

			new AdminNum;
			new aname[MAX_PLAYER_NAME];

			format(string,sizeof(string)," LV Maximum v%s | Администация (Онлайн): ",Version);
			SendClientMessage(playerid,green,string);

			format(string1,sizeof(string1)," Админы:");
			format(string2,sizeof(string2)," Модеры:");
			format(string3,sizeof(string3)," В IRC:");

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] > 1) AdminNum++;
			if(AdminNum>0){
				AdminNum=0;
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] > 1){
					AdminNum++;
					GetPlayerName(i,aname,sizeof(aname));
					if(AdminNum==1) format(string1,sizeof(string1),"%s %s (%d)",string1,aname,i);
					else format(string1,sizeof(string1),"%s, %s (%d)",string1,aname,i); }
			}else{
				format(string1,sizeof(string1),"%s нет",string1); }

			AdminNum=0;

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] == 1) AdminNum++;
			if(AdminNum>0){
				AdminNum=0;
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] == 1){
					AdminNum++;
					GetPlayerName(i,aname,sizeof(aname));
					if(AdminNum==1) format(string2,sizeof(string2),"%s %s (%d)",string2,aname,i);
					else format(string2,sizeof(string2),"%s, %s (%d)",string2,aname,i); }
			}else{
				format(string2,sizeof(string2),"%s нет",string2); }

			AdminNum=0;

			idx=0;
			if(EchoConnection1) IRC_GetChannelUserList(EchoConnection1, EchoChan, string,sizeof(string));
			//printf(" %s",string);
			//new tempt[10][256];
			for(new i=0; i < 30; i++) tempt[i] = strtok(string,idx);
			if(isnull(tempt[0])) format(string3,sizeof(string3),"%s нет",string3);
			else{
				new tempr=30;
				for(new i=1; i < 30; i++) if(tempr==30 && strcmp(tempt[0],tempt[i],true)==0) tempr=i;
				for(new i=0; i < tempr; i++)
				if(strfind(tempt[i], "Angel", true) == -1)
				if(strfind(tempt[i], "Echo", true) == -1)
				if(strfind(tempt[i], "Camel", true) == -1)
				if(strfind(tempt[i], "IRC[RUS]", true) == -1)
				if(tempt[i][0]==126 || tempt[i][0]==38 || tempt[i][0]==64 || tempt[i][0]==37 || tempt[i][0]==43) {
					//printf("%d",tempt[i][0]);
					AdminNum++;
					if(AdminNum==1) format(string3,sizeof(string3),"%s %s",string3,tempt[i][1]);
					else format(string3,sizeof(string3),"%s, %s",string3,tempt[i][1]); }
			}

			SendClientMessage(playerid,yellow,string1);
			SendClientMessage(playerid,yellow,string2);
			SendClientMessage(playerid,yellow,string3);

			return 1;
		}


		if(strcmp(tmp,"/stats",true) == 0) {
			tmp = strtok(cmdtext,idx);
			if(strlen(tmp) > 9) return 1;

			if (isnull(tmp)) {
				new scoresp = Kills[playerid] - Deaths[playerid];
				new Float:killzp, Float:deathzp, Float:ratiop;
				killzp = Kills[playerid]; deathzp = Deaths[playerid];
				if(deathzp!=0) ratiop = killzp / deathzp; else ratiop=0;

				new timeplh = 0;
				new timeplm = 0;

				if(Ingame[playerid]>60) {
					timeplh = (Ingame[playerid]/60);
					timeplm = Ingame[playerid]-(timeplh*60);
				}else{
					timeplm = Ingame[playerid];
					timeplh = 0;
				}

				if(Registered[playerid]==1) format(string,sizeof(string)," LV Maximum v%s | Ваша статистика: ",Version);
				else format(string,sizeof(string)," LV Maximum v%s | Ваша статистика [не зарегистрирован]: ",Version);
				SendClientMessage(playerid,green,string);
				format(string,sizeof(string)," Убийства: %d || Смерти: %d || Очки: %d || Ратио: %0.2f",Kills[playerid],Deaths[playerid],scoresp, ratiop);
				SendClientMessage(playerid,yellow,string);
				format(string,sizeof(string)," Наличка: %d || В банке: %d || Время в игре: %d часов, %d минут",CCCash[playerid],Bank[playerid],timeplh,timeplm);
				SendClientMessage(playerid,yellow,string);
				format(string,sizeof(string)," Выиграно гонок: %d || Выиграно дефматчей: %d",RaceWIN[playerid],DMWIN[playerid]);
				SendClientMessage(playerid,yellow,string);
				if(Gang[playerid]==1){
					if(GangTesting[playerid]==1)
					format(string,sizeof(string)," Состоит в банде %s",PLGangName[playerid]);
					else format(string,sizeof(string)," Состоит в банде (на тесте) %s",PLGangName[playerid]);
					SendClientMessage(playerid,yellow,string); }
				if(Gang[playerid]==2){
					format(string,sizeof(string)," Админ банды %s",PLGangName[playerid]);
					SendClientMessage(playerid,yellow,string); }
				if(Gang[playerid]==3){
					format(string,sizeof(string)," Владелец банды %s",PLGangName[playerid]);
					SendClientMessage(playerid,yellow,string); }

				if(strlen(PlayerStatus[playerid])!=0) {
					format(string,sizeof(string)," %s",PlayerStatus[playerid]);
					SendClientMessage(playerid,yellow,string); }

				if(Alevel[playerid]==1) SendClientMessage(playerid,yellow," Модератор сервера");
				if(Alevel[playerid]==2) SendClientMessage(playerid,yellow," Администратор сервера");
				if(Alevel[playerid]==3) SendClientMessage(playerid,yellow," Супер-Администратор сервера");
				if(Alevel[playerid]==4) SendClientMessage(playerid,yellow," Владелец сервера");
				if(Sponsor[playerid]==1) SendClientMessage(playerid,yellow," Спонсор сервера");
				if(IRCuser[playerid]==1) SendClientMessage(playerid,yellow," IRC пользователь");
				if(MainNoob[playerid]==1) SendClientMessage(playerid,yellow," Главный Нуб сервера");


				return 1;
			}

			new plid=strval(tmp);

			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);

				if(temp==-1){
					SendClientMessage(playerid, yellow," Найдено слишком много игроков, введите более точно.");
					return 1;
				}
				if(temp==-2){
					SendClientMessage(playerid, yellow," Игрок не найден.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}
			GetStats(playerid, plid);
			return 1;
		}

		if(strcmp(tmp,"/commands",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Команды сервера (лист 1): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/pm' [Id] - Отправить личное сообщение другому игроку.");
			SendClientMessage(playerid, yellow," '/kill' - Убить себя. ");
			SendClientMessage(playerid, yellow," '/scriptinfo' - Информация о скрипте.");
			SendClientMessage(playerid, yellow," '/global' - Глобальная статистика.");
			SendClientMessage(playerid, yellow," '/buy' - Покупка бизнеса.");
			SendClientMessage(playerid, yellow," '/lock' - Закрыть автомобиль.");
			SendClientMessage(playerid, yellow," '/unlock' - Открыть автомобиль.");
			SendClientMessage(playerid, yellow," Продолжение - '/commands2'");
			return 1; }

		if(strcmp(tmp,"/commands2",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Команды сервера (лист 2): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/irc' - Отправить PM в IRC.");
			SendClientMessage(playerid, yellow," '/report' [Id] (Причина) - Отправить сообщение Администрации о читере.");
			SendClientMessage(playerid, yellow," '/votekick' [Id] (Причина кика) - Голосование за кик игрока.");
			SendClientMessage(playerid, yellow," '/hitman' [Id] (Сумма) - Поставить деньги за убийство игрока.");
			SendClientMessage(playerid, yellow," '/bounties' - Список заказов на убийства.");
			SendClientMessage(playerid, yellow," '/getid' [Id] - Получить ид игрока.");
			SendClientMessage(playerid, yellow," '/duel' [локация] (ид оружия)  - Телепорт на дуель.");
			SendClientMessage(playerid, yellow," Продолжение - '/commands3'");
			return 1; }

		if(strcmp(tmp,"/commands3",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Команды сервера (лист 3): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/givecash' [Id] - Передать деньги другому игроку.");
			SendClientMessage(playerid, yellow," '/int' [Id] - Телепорт в интерьер.");
			SendClientMessage(playerid, yellow," '/skin' [Id Скина] - Сменить скин.");
			SendClientMessage(playerid, yellow," '/top' - Лучшие игроки сервера.");
			SendClientMessage(playerid, yellow," '/teleports' - Помошь по телепортам.");
			SendClientMessage(playerid, yellow," '/me' - Написать сообщение от третьего лица.");
			SendClientMessage(playerid, yellow," '/setpass' - Сменить пароль аккаунта на новый.");
			SendClientMessage(playerid, yellow," Продолжение - '/commands4'");
			return 1; }

		if(strcmp(tmp,"/commands4",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Команды сервера (лист 4): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/admins' - Администрация онлайн.");
			SendClientMessage(playerid, yellow," '/stats' [Id] - Статистика игрока.");
			SendClientMessage(playerid, yellow," '/locations' - Список доступных локаций.");
			SendClientMessage(playerid, yellow," '/bankhelp' - Справка по банку.");
			SendClientMessage(playerid, yellow," '/ganghelp' - Помошь по бандам.");
			SendClientMessage(playerid, yellow," '/bombhelp' - Помошь по бомбам.");
			SendClientMessage(playerid, yellow," '/shelp' - Список дополнительных возможностей.");
			SendClientMessage(playerid, yellow," Продолжение - '/commands5");
			return 1; }

		if(strcmp(tmp,"/commands5",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Команды сервера (лист 5): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/animhelp' - Анимация.");
			SendClientMessage(playerid, yellow," '/duelhelp' - Помощь по дуэлям.");
			SendClientMessage(playerid, yellow," '/spec [id]' - Войти/покинуть режим слежки.");
			SendClientMessage(playerid, yellow," '/away' - Включить/выключить AFK режим.");
			SendClientMessage(playerid, yellow," '/parachute' - Получить парашют ($500).");
			SendClientMessage(playerid, yellow," '/racehelp' - Помощь по гонкам.");
			SendClientMessage(playerid, yellow," '/dmhelp' - Помощь по дефматчам.");
			SendClientMessage(playerid, yellow," Продолжение - '/commands6");
			return 1; }

		if(strcmp(tmp,"/commands6",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Команды сервера (лист 6): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/getreason [IP]' - Узнать причину бана IP адреса.");
			SendClientMessage(playerid, yellow," '/getnreason [name]' - Узнать причину бана ника.");
			SendClientMessage(playerid, yellow," '/ignore [id]' - Игнорировать все PM от игрока.");
			SendClientMessage(playerid, yellow," '/inv [on/off]' - Включить/выключить невидимость на радаре.");
			return 1; }

		if(strcmp(tmp, "/duelhelp", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Помощь по дуэлям: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/duel [локация] [оружие]' - Начать дуэль.  ");
			SendClientMessage(playerid, yellow," '/duel' - Принять дуэль.  ");
			SendClientMessage(playerid, yellow," '/back' - Покинуть дуэль.  ");
			return 1; }

		if(strcmp(tmp, "/racehelp", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Помощь по гонкам: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/race create' - Создать гонку ($20000). ");
			SendClientMessage(playerid, yellow," '/race join' - Присоединиться к гонке ($10000). ");
			return 1; }

		if(strcmp(tmp, "/dmhelp", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Помощь по дефматчам: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/dm create' - Создать дефматч ($20000). ");
			SendClientMessage(playerid, yellow," '/dm join' - Присоединиться к дефматчу ($10000). ");
			return 1; }


		if(strcmp(tmp, "/shelp", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Дополнительные возможности: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," Вы сможете купить невидимость! (стоимость: $2 000 000, команда /buyinv) ");
			SendClientMessage(playerid, yellow," Вы сможете купить сохранение денег при смерти! (стоимость: $3 000 000, команда /savemoney) ");
			SendClientMessage(playerid, yellow," Данные возможности будут работать только до выхода из игры!");
			return 1; }

		if(strcmp(tmp,"/animhelp",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Анимация (лист 1): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /surrender,/drunk,/bomb,/arrest,/laugh,/lookout,/rob,/wankin,/coparrest");
			SendClientMessage(playerid, yellow," /wankout,/arrested,/injured,/slapped,/fsmoking,/coplook,/lay,/cover,/eat");
			SendClientMessage(playerid, yellow," /vomit,/wave,/slapass,/death,/deal,/kiss,/crack,/piss,/smoke,/sit,/fu");
			SendClientMessage(playerid, yellow," Остановить: /Stopan");
			SendClientMessage(playerid, yellow," /animhelp2 - Продолженние.");
			return 1;
		}

		if(strcmp(tmp,"/animhelp2", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Анимация (лист 2): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /animped - Анимации пешеходов, /dance(2) - Анимация Танцев, /handsup - Поднять руки");
			SendClientMessage(playerid, yellow," Остальные анимации: /animairport, /animat, /animbar, /animball, /animfire, /animbeach");
			SendClientMessage(playerid, yellow," /animbp, /animinf, /animbiked, /animbh, /animfood, /animbikelp, /animms, /animbikes, /animcar");
			SendClientMessage(playerid, yellow," /animbikev, /animbmx, /animbikedbz /animchase, /animbox, /animbomber, /animbsp, /animcamera ");
			SendClientMessage(playerid, yellow," /animgym, /animpara, /animgangs, /animlookers, /animcarchat, /animcasino, /animbuddy, /animbus");
			SendClientMessage(playerid, yellow," /animcarry, /animintshop, /animjst, /animkart, /animkissing, /animknife, /animlapdan, /animdend");
			SendClientMessage(playerid, yellow," /animmedic, /animmtb, /animmusc, /animotb, /animnevada, /animpark, /animsaw, /animchoppa");
			SendClientMessage(playerid, yellow," /animclothes, /animcoach, /animcolt, /animcopa, /animcod, /animcrack");
			SendClientMessage(playerid, yellow," /animhelp3 - Продолженние.");
			return 1;
		}
		if(strcmp(tmp,"/animhelp3", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Анимация (лист 3): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /animcrib, /animjump, /animdealer, /animdildo, /animdodge, /animdozer, /animdrivebys, /animfat");
			SendClientMessage(playerid, yellow," /animfightb, /animfightc, /animfightd, /animfighte, /animfinale, /animfinale2, /animflamef");
			SendClientMessage(playerid, yellow," /animflowers, /animghands, /animfw, /animghetto, /animgog, /animgraffity, /animgreya, /animgren");
			SendClientMessage(playerid, yellow," /animhaircut, /animheist,  /animinthouse, /animintoffice, /animplayerdbf, /animplayidles, /animpolice");
			SendClientMessage(playerid, yellow," /animpool, /animpoor, /animpython, /animquad, /animquadbz, /animrapping, /animrifle, /animriot, /animrobbank ");
			SendClientMessage(playerid, yellow," /animrocket, /animrustler, /animryder, /animscrat, /animshamal, /animshop, /animskate, /animshotgun");
			SendClientMessage(playerid, yellow," /animvortex, /animtec, /animtrain, /animsil, /animtattoo,  /animsmoking, /animsniper, /animspray, /animstrip");
			SendClientMessage(playerid, yellow," /animbath, /animswat, /animsweet, /animswim, /animsword, /animtank, /animtruck, /animuzi, /animvan, /animvending");
			SendClientMessage(playerid, yellow," /animway, /animweap");
			return 1;
		}


		if(strcmp(tmp,"/bankhelp",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Банковские команды: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/bank' - Положить деньги на свой счет.");
			SendClientMessage(playerid, yellow," '/withdraw' - Снять деньги со своего счета.");
			SendClientMessage(playerid, yellow," '/balance' - Узнать свой баланс.");
			return 1; }

		if(strcmp(tmp,"/ganghelp",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Команды банд: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/gangs' - Список онлайн банд.");
			SendClientMessage(playerid, yellow," '/gang'  - Команды для управления бандой.");
			SendClientMessage(playerid, yellow," '/gbank' - Положить деньги на счет банды.");
			SendClientMessage(playerid, yellow," '/gwithdraw' - Снять деньги со счета банды.");
			SendClientMessage(playerid, yellow," '/gbalance' - Узнать баланс денег банды.");
			SendClientMessage(playerid, yellow," '/gpm' - Чат банды.");
			return 1; }

		if(strcmp(tmp,"/bombhelp",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Управление бомбами: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/cb' - Установить бомбу.");
			SendClientMessage(playerid, yellow," '/db'  - Взорвать бомбу.");
			SendClientMessage(playerid, yellow," '/ncb' - Деактивировать бомбу.");
			SendClientMessage(playerid, yellow," '/cbv' - Установить бомбу в транспорте.");
			SendClientMessage(playerid, yellow," '/dbv' - Взорвать бомбу в транспорте.");
			SendClientMessage(playerid, yellow," '/ncbv' - Деактивировать бомбу в транпорте.");
			return 1; }

		if(strcmp(tmp,"/locations",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Локации: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/in1' - Стадион Блудринга");
			SendClientMessage(playerid, yellow," '/in2' - Стадион Хотринга");
			SendClientMessage(playerid, yellow," '/in3' - Стадион Хотринга 2");
			SendClientMessage(playerid, yellow," '/in4' - Стадион Мопеда");
			SendClientMessage(playerid, yellow," '/in5' - Стадион Мототрюков");
			SendClientMessage(playerid, yellow," '/in6' - Стадион Монстра");
			SendClientMessage(playerid, yellow," '/in7' - Стадион Безумия");
			SendClientMessage(playerid, yellow," '/back' - Выход");
			return 1;
		}

		if(strcmp(tmp,"/help",true)==0 || strcmp(tmp,"/info",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Краткая справка: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," На данном сервере установлен свободный режим, целью которого является обогащение. ");
			SendClientMessage(playerid, yellow," Дополнительную информацию можно найти на форуме. Ресурсы проекта:");
			SendClientMessage(playerid, yellow," Форум сервера (предложения по скрипту, заявки на модеров, заявки на разбан и др.) - gta.bews.tk");
			SendClientMessage(playerid, yellow," IRC канал (игровой чат, прямая связь с администрацией, доп. возможности) - irc.bews.tk/rus");
			SendClientMessage(playerid, yellow," Навигация:");
			SendClientMessage(playerid, yellow," Список команд сервера - /commands | Правила сервера - /rules | Информация о скрипте - /scriptinfo");
			return 1;
		}

		if(strcmp(tmp,"/sponsor",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Спонсорские аккаунты: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," 1 миллион денег при назначении");
			SendClientMessage(playerid, yellow," Буква *S* в чате перед ником");
			SendClientMessage(playerid, yellow," Невидимость на радаре всегда включена");
			SendClientMessage(playerid, yellow," Сохранение денег всегда включено");
			SendClientMessage(playerid, yellow," Воробей и Танк всегда открыты, на остальной транспорт в 2 раза меньше килов");
			SendClientMessage(playerid, yellow," Размер счёта в банке выше при тех же процентах (обычн 8млн, банды 20 млн)");
			SendClientMessage(playerid, yellow," РПГ с 2мя патронами на спауне.. и другие уникальные возможности");
			SendClientMessage(playerid, yellow," Полный список возможностей и правила получения можно прочитать на форуме - gta.bews.tk");
			return 1;
		}

		if(strcmp(tmp,"/eng",true) == 0) {
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
			Lang[playerid] = 1;
			dini_IntSet(PF,"lang",Lang[playerid]);
			SendClientMessage(playerid,green," Your language has been changed to english.");
			return 1;
		}

	}else{

		if(strcmp(tmp,"/admins",true)==0) {

			new AdminNum;
			new aname[MAX_PLAYER_NAME];

			format(string,sizeof(string)," LV Maximum v%s | Administration (Online): ",Version);
			SendClientMessage(playerid,green,string);

			format(string1,sizeof(string1)," Admins:");
			format(string2,sizeof(string2)," Moders:");
			format(string3,sizeof(string3)," In IRC:");

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] > 1) AdminNum++;
			if(AdminNum>0){
				AdminNum=0;
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] > 1){
					AdminNum++;
					GetPlayerName(i,aname,sizeof(aname));
					if(AdminNum==1) format(string1,sizeof(string1),"%s %s (%d)",string1,aname,i);
					else format(string1,sizeof(string1),"%s, %s (%d)",string1,aname,i); }
			}else{
				AdminNum=0;
				format(string1,sizeof(string1),"%s none",string1); }

			AdminNum=0;

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] == 1) AdminNum++;
			if(AdminNum>0){
				AdminNum=0;
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] == 1){
					AdminNum++;
					GetPlayerName(i,aname,sizeof(aname));
					if(AdminNum==1) format(string2,sizeof(string2),"%s %s (%d)",string2,aname,i);
					else format(string2,sizeof(string2),"%s, %s (%d)",string2,aname,i); }
			}else{
				AdminNum=0;
				format(string2,sizeof(string2),"%s none",string2); }

			AdminNum=0;


			idx=0;
			if(EchoConnection1) IRC_GetChannelUserList(EchoConnection1, EchoChan, string,sizeof(string));
			//new tempt[10][256];
			for(new i=0; i < 30; i++) tempt[i] = strtok(string,idx);
			if(isnull(tempt[0])) format(string3,sizeof(string3),"%s none",string3);
			else{
				new tempr=30;
				for(new i=1; i < 30; i++) if(tempr==30 && strcmp(tempt[0],tempt[i],true)==0) tempr=i;
				for(new i=0; i < tempr; i++)
				if(strfind(tempt[i], "Angel", true) == -1)
				if(strfind(tempt[i], "Echo", true) == -1)
				if(strfind(tempt[i], "Camel", true) == -1)
				if(strfind(tempt[i], "IRC[RUS]", true) == -1)
				if(tempt[i][0]==126 || tempt[i][0]==38 || tempt[i][0]==64 || tempt[i][0]==37 || tempt[i][0]==43) {
					AdminNum++;
					if(AdminNum==1) format(string3,sizeof(string3),"%s %s",string3,tempt[i][1]);
					else format(string3,sizeof(string3),"%s, %s",string3,tempt[i][1]); }
			}

			SendClientMessage(playerid,yellow,string1);
			SendClientMessage(playerid,yellow,string2);
			SendClientMessage(playerid,yellow,string3);

			return 1;
		}

		if(strcmp(tmp,"/stats",true) == 0) {
			tmp = strtok(cmdtext,idx);
			if(strlen(tmp) > 9) return 1;

			if (isnull(tmp)) {
				new scoresp = Kills[playerid] - Deaths[playerid];
				new Float:ratiop;
				if(Deaths[playerid]!=0) ratiop = Kills[playerid] / Deaths[playerid]; else ratiop=0;

				new timeplh = 0;
				new timeplm = 0;

				if(Ingame[playerid]>60) {
					timeplh = (Ingame[playerid]/60);
					timeplm = Ingame[playerid]-(timeplh*60);
				}else{
					timeplm = Ingame[playerid];
					timeplh = 0;
				}


				if(Registered[playerid]==1) format(string,sizeof(string)," LV Maximum v%s | Your statistics: ",Version);
				else format(string,sizeof(string)," LV Maximum v%s | Your statistics [not registered]: ",Version);
				SendClientMessage(playerid,green,string);
				format(string,sizeof(string)," Kills: %d || Deaths: %d || Scores: %d || Ratio: %0.2f",Kills[playerid],Deaths[playerid],scoresp, ratiop);
				SendClientMessage(playerid,yellow,string);
				format(string,sizeof(string)," Cash: %d || In bank: %d || Ingame time: %d hours, %d minutes",CCCash[playerid],Bank[playerid],timeplh,timeplm);
				SendClientMessage(playerid,yellow,string);
				format(string,sizeof(string)," Race wins: %d || Deathmatch wins: %d",RaceWIN[playerid],DMWIN[playerid]);
				SendClientMessage(playerid,yellow,string);

				if(Gang[playerid]==1){
					if(GangTesting[playerid]==1)
					format(string,sizeof(string)," %s's gang member",PLGangName[playerid]);
					else format(string,sizeof(string),"  %s's gang member (testing position)",PLGangName[playerid]);
					SendClientMessage(playerid,yellow,string); }
				if(Gang[playerid]==2){
					format(string,sizeof(string)," %s's gang Admin",PLGangName[playerid]);
					SendClientMessage(playerid,yellow,string); }
				if(Gang[playerid]==3){
					format(string,sizeof(string)," %s gang Owner",PLGangName[playerid]);
					SendClientMessage(playerid,yellow,string); }

				if(strlen(PlayerStatus[playerid])!=0) {
					format(string,sizeof(string)," %s",PlayerStatus[playerid]);
					SendClientMessage(playerid,yellow,string); }

				if(Alevel[playerid]==1) SendClientMessage(playerid,yellow," Server Moderator");
				if(Alevel[playerid]==2) SendClientMessage(playerid,yellow," Server Administartor");
				if(Alevel[playerid]==3) SendClientMessage(playerid,yellow," Server Super-Administartor");
				if(Alevel[playerid]==4) SendClientMessage(playerid,yellow," Server Owner");
				if(Sponsor[playerid]==1) SendClientMessage(playerid,yellow," Server Sponsor");
				if(IRCuser[playerid]==1) SendClientMessage(playerid,yellow," IRC User");
				if(MainNoob[playerid]==1) SendClientMessage(playerid,yellow," Main Noob of the server");

				return 1;
			}

			new plid=strval(tmp);

			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					SendClientMessage(playerid, yellow," Too many players were found, be more specific.");
					return 1;
				}
				if(temp==-2){
					SendClientMessage(playerid, yellow," No players were found.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Игрок не найден.");
				else SendClientMessage(playerid, yellow," Player was not found.");
				return 1;
			}

			new scores = Kills[plid] - Deaths[plid];
			new Float:ratio;
			if(Deaths[plid]!=0) ratio = Kills[plid] / Deaths[plid]; else ratio=0;

			new timeplh2 = 0;
			new timeplm2 = 0;

			if(Ingame[plid]>60) {
				timeplh2 = (Ingame[plid]/60);
				timeplm2 = Ingame[plid]-(timeplh2*60);
			}else{
				timeplm2 = Ingame[plid];
				timeplh2 = 0;
			}

			new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
			new rus[1], city[256];
			CountryAndCity(plid, rus, city);
			new countytexteng[256];
			if(rus[0]==0) {
				format(countytexteng, sizeof(countytexteng), "%s, %s",CountryCity[3], CountryCity[5]);
			}else{
				if(strcmp(city,"none",true)==0) {
					format(countytexteng, sizeof(countytexteng), "%s, %s",CountryCity[1], CountryCity[5]);
				}else{
					format(countytexteng, sizeof(countytexteng), "%s, %s",CountryCity[1], city); }}

			if(Registered[plid]==1) format(string,sizeof(string)," LV Maximum v%s | %s's statistics (%s): ",Version,ref,countytexteng);
			else format(string,sizeof(string)," LV Maximum v%s | %s's statistics [not registered] (%s): ",Version,ref,countytexteng);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," Kills: %d || Deaths: %d || Scores: %d || Ratio: %0.2f",Kills[plid],Deaths[plid],scores, ratio);
			SendClientMessage(playerid,yellow,string);
			format(string,sizeof(string)," Cash: %d || In bank: %d || Ingame time: %d hours, %d minutes",CCCash[plid],Bank[plid],timeplh2,timeplm2);
			SendClientMessage(playerid,yellow,string);
			format(string,sizeof(string)," Race wins: %d || Deathmatch wins: %d",RaceWIN[plid],DMWIN[plid]);
			SendClientMessage(playerid,yellow,string);

			if(Gang[plid]==1){
				if(GangTesting[plid]==1)
				format(string,sizeof(string)," %s's gang member",PLGangName[plid]);
				else format(string,sizeof(string),"  %s's gang member (testing position)",PLGangName[plid]);
				SendClientMessage(playerid,yellow,string); }
			if(Gang[plid]==2){
				format(string,sizeof(string)," %s's gang Admin",PLGangName[plid]);
				SendClientMessage(playerid,yellow,string); }
			if(Gang[plid]==3){
				format(string,sizeof(string)," %s gang Owner",PLGangName[plid]);
				SendClientMessage(playerid,yellow,string); }

			if(strlen(PlayerStatus[plid])!=0) {
				format(string,sizeof(string)," %s",PlayerStatus[plid]);
				SendClientMessage(playerid,yellow,string); }

			if(Alevel[plid]==1) SendClientMessage(playerid,yellow," Server Moderator");
			if(Alevel[plid]==2) SendClientMessage(playerid,yellow," Server Administartor");
			if(Alevel[plid]==3) SendClientMessage(playerid,yellow," Server Super-Administartor");
			if(Alevel[plid]==4) SendClientMessage(playerid,yellow," Server Owner");
			if(Sponsor[plid]==1) SendClientMessage(playerid,yellow," Server Sponsor");
			if(IRCuser[plid]==1) SendClientMessage(playerid,yellow," IRC User");
			if(MainNoob[plid]==1) SendClientMessage(playerid,yellow," Main Noob of the server");

			return 1;
		}

		if(strcmp(tmp,"/commands",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Server commands (list 1): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /pm [Id] - Send private message to another player. ");
			SendClientMessage(playerid, yellow," /kill - Kill yourself. ");
			SendClientMessage(playerid, yellow," /scriptinfo - Information about script. ");
			SendClientMessage(playerid, yellow," /global - Global statistics. ");
			SendClientMessage(playerid, yellow," /buy - Purchase business. ");
			SendClientMessage(playerid, yellow," /lock - Lock car. ");
			SendClientMessage(playerid, yellow," /unlock - Unlcok car. ");
			SendClientMessage(playerid, yellow," Other - /commands2");
			return 1; }

		if(strcmp(tmp,"/commands2",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Server commands (list 2): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /irc - Send PM to IRC.");
			SendClientMessage(playerid, yellow," /report [id] (reason) - Report cheater to Administration. ");
			SendClientMessage(playerid, yellow," /votekick [id] (reason) - Voting for player kick.");
			SendClientMessage(playerid, yellow," /hitman [id] (money) - Provide money for the murder of a player. ");
			SendClientMessage(playerid, yellow," /bounties - List of bounties.");
			SendClientMessage(playerid, yellow," /getid [Id] - Get player's id. ");
			SendClientMessage(playerid, yellow," /duel [location] (weapon) - Starts duel.");
			SendClientMessage(playerid, yellow," Other - /commands3");
			return 1; }

		if(strcmp(tmp,"/commands3",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Server commands (list 3): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /givecash [Id] - Send money to another player. ");
			SendClientMessage(playerid, yellow," /int [Id] - Teleport in the interior. ");
			SendClientMessage(playerid, yellow," /skin [Id skins] - Change skin.");
			SendClientMessage(playerid, yellow," /top - Top players list. ");
			SendClientMessage(playerid, yellow," /teleports - teleports list.");
			SendClientMessage(playerid, yellow," /me - Write a message from a third person. ");
			SendClientMessage(playerid, yellow," /setpass - Change your account password.");
			SendClientMessage(playerid, yellow," Other - /commands4");
			return 1; }

		if(strcmp(tmp,"/commands4",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Server commands (list 4): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /admins - Administration online. ");
			SendClientMessage(playerid, yellow," /stats [Id] - Player's statistics. ");
			SendClientMessage(playerid, yellow," /locations - Locations list. ");
			SendClientMessage(playerid, yellow," /bankhelp - Bank help.");
			SendClientMessage(playerid, yellow," /ganghelp - Gang control help.");
			SendClientMessage(playerid, yellow," '/bombhelp' - Bomb control.");
			SendClientMessage(playerid, yellow," '/shelp' - List of additional features.");
			SendClientMessage(playerid, yellow," Other - /commands5");
			return 1; }

		if(strcmp(tmp,"/commands5",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Server commands (list 5): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/animhelp' - Animation.");
			SendClientMessage(playerid, yellow," '/duelhelp' - Duel help.");
			SendClientMessage(playerid, yellow," '/spec [id]' - Enter/leave spectating.");
			SendClientMessage(playerid, yellow," '/away' - Turn on/off AFK mode.");
			SendClientMessage(playerid, yellow," '/parachute' - Receive a parachute ($500).");
			SendClientMessage(playerid, yellow," '/racehelp' - Race help.");
			SendClientMessage(playerid, yellow," '/dmhelp' - Deathmatch help.");
			SendClientMessage(playerid, yellow," Other - /commands6");
			return 1; }

		if(strcmp(tmp,"/commands6",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Server commands (list 6): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/getreason [IP]' - Reason of IP ban.");
			SendClientMessage(playerid, yellow," '/getnreason [name]' - Reason of name ban.");
			SendClientMessage(playerid, yellow," '/ignore [id]' - Ignore all PM messages from the player.");
			SendClientMessage(playerid, yellow," '/inv [on/off]' - Turn on/off invisibility in radar");
			return 1; }


		if(strcmp(tmp, "/duelhelp", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Duel help: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/duel [location] [weapon]' - Start duel.  ");
			SendClientMessage(playerid, yellow," '/duel' - Join duel.  ");
			SendClientMessage(playerid, yellow," '/back' - Leave duel.  ");
			return 1; }

		if(strcmp(tmp, "/racehelp", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Race help: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/race create' - Create race ($20000). ");
			SendClientMessage(playerid, yellow," '/race join' - Join race ($10000). ");
			return 1; }

		if(strcmp(tmp, "/dmhelp", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Deathmatch help: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/dm create' - Create deathmatch ($20000). ");
			SendClientMessage(playerid, yellow," '/dm join' - Join deathmatch ($10000). ");
			return 1; }

		if(strcmp(tmp, "/shelp", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Additional features: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," You can be invisible! (cost: $2 000 000, command '/buyinv') ");
			SendClientMessage(playerid, yellow," You can buy money preservation! (cost: $3 000 000, command '/savemoney') ");
			SendClientMessage(playerid, yellow," This possibilities will work only to an exit from game!");
			return 1; }

		if(strcmp(tmp,"/animhelp",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Animation (list 1): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /surrender,/drunk,/bomb,/arrest,/laugh,/lookout,/rob,/wankin,/coparrest");
			SendClientMessage(playerid, yellow," /wankout,/arrested,/injured,/slapped,/fsmoking,/coplook,/lay,/cover,/eat");
			SendClientMessage(playerid, yellow," /vomit,/wave,/slapass,/death,/deal,/kiss,/crack,/piss,/smoke,/sit,/fu");
			SendClientMessage(playerid, yellow," Stop: /Stopan");
			SendClientMessage(playerid, yellow," /animhelp2 - List 2.");
			return 1;
		}

		if(strcmp(tmp,"/animhelp2", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Animation (list 2): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /animped - Animations of pedestrians, /dance(2) - Animation of Dances, /handsup - Hands up");
			SendClientMessage(playerid, yellow," Other Animation: /animairport, /animat, /animbar, /animball, /animfire, /animbeach");
			SendClientMessage(playerid, yellow," /animbp, /animinf, /animbiked, /animbh, /animfood, /animbikelp, /animms, /animbikes, /animcar");
			SendClientMessage(playerid, yellow," /animbikev, /animbmx, /animbikedbz /animchase, /animbox, /animbomber, /animbsp, /animcamera ");
			SendClientMessage(playerid, yellow," /animgym, /animpara, /animgangs, /animlookers, /animcarchat, /animcasino, /animbuddy, /animbus");
			SendClientMessage(playerid, yellow," /animcarry, /animintshop, /animjst, /animkart, /animkissing, /animknife, /animlapdan, /animdend");
			SendClientMessage(playerid, yellow," /animmedic, /animmtb, /animmusc, /animotb, /animnevada, /animpark, /animsaw, /animchoppa");
			SendClientMessage(playerid, yellow," /animclothes, /animcoach, /animcolt, /animcopa, /animcod, /animcrack");
			SendClientMessage(playerid, yellow," /animhelp3 - List 3.");
			return 1;
		}
		if(strcmp(tmp,"/animhelp3", true) == 0) {
			format(string,sizeof(string)," LV Maximum v%s | Animation (list 3): ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /animcrib, /animjump, /animdealer, /animdildo, /animdodge, /animdozer, /animdrivebys, /animfat");
			SendClientMessage(playerid, yellow," /animfightb, /animfightc, /animfightd, /animfighte, /animfinale, /animfinale2, /animflamef");
			SendClientMessage(playerid, yellow," /animflowers, /animghands, /animfw, /animghetto, /animgog, /animgraffity, /animgreya, /animgren");
			SendClientMessage(playerid, yellow," /animhaircut, /animheist,  /animinthouse, /animintoffice, /animplayerdbf, /animplayidles, /animpolice");
			SendClientMessage(playerid, yellow," /animpool, /animpoor, /animpython, /animquad, /animquadbz, /animrapping, /animrifle, /animriot, /animrobbank ");
			SendClientMessage(playerid, yellow," /animrocket, /animrustler, /animryder, /animscrat, /animshamal, /animshop, /animskate, /animshotgun");
			SendClientMessage(playerid, yellow," /animvortex, /animtec, /animtrain, /animsil, /animtattoo,  /animsmoking, /animsniper, /animspray, /animstrip");
			SendClientMessage(playerid, yellow," /animbath, /animswat, /animsweet, /animswim, /animsword, /animtank, /animtruck, /animuzi, /animvan, /animvending");
			SendClientMessage(playerid, yellow," /animway, /animweap");
			return 1;
		}


		if(strcmp(tmp,"/bankhelp",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Bank commands: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /bank - Put money in your account.");
			SendClientMessage(playerid, yellow," /withdraw - withdraw money from your account.");
			SendClientMessage(playerid, yellow," /balance - See your balance.");
			return 1; }

		if(strcmp(tmp,"/ganghelp",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Gang commands: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," /gangs - List of online gangs. ");
			SendClientMessage(playerid, yellow," /gang - Commands to gang control. ");
			SendClientMessage(playerid, yellow," /gbank - Put money to gang account. ");
			SendClientMessage(playerid, yellow," /gwithdraw - Withdraw money from gang account. ");
			SendClientMessage(playerid, yellow," /gbalance - See your gang's balance. ");
			SendClientMessage(playerid, yellow," /gpm - Gang chat.");
			return 1; }

		if(strcmp(tmp,"/bombhelp",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Bomb control: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/cb' - Install a bomb.");
			SendClientMessage(playerid, yellow," '/db' - Blow up a bomb.");
			SendClientMessage(playerid, yellow," '/ncb' - Deactivate a bomb.");
			SendClientMessage(playerid, yellow," '/cbv' - Install a bomb in vehicle.");
			SendClientMessage(playerid, yellow," '/dbv' - Blow up a bomb in vehicle.");
			SendClientMessage(playerid, yellow," '/ncbv' - Deactivate a bomb in vehicle.");
			return 1; }


		if(strcmp(tmp,"/help",true)==0 || strcmp(tmp,"/info",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Information: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," This server is using a free mode, overall objective is an enrichment.");
			SendClientMessage(playerid, yellow," Additional information can be found on the forum. Project resources:");
			SendClientMessage(playerid, yellow," Server forum (features ideas, moders applications, unban applications etc.) - gta.bews.tk");
			SendClientMessage(playerid, yellow," IRC server (game chat, direct administration contact, add. features) - irc.bews.tk");
			SendClientMessage(playerid, yellow," Navigation:");
			SendClientMessage(playerid, yellow," Server commands - /commands | Server rules - /rules | Script information - /scriptinfo");
			return 1;
		}

		if(strcmp(tmp,"/sponsor",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Sponsorship accounts: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," 1 million of money in the appointment");
			SendClientMessage(playerid, yellow," Letter *S* in the chat before the nickname");
			SendClientMessage(playerid, yellow," Invisibility in radar always on");
			SendClientMessage(playerid, yellow," Saving money is always on");
			SendClientMessage(playerid, yellow," Sea-sparrow and Rhino is always unlocked, the rest of transport 2-fold less kills");
			SendClientMessage(playerid, yellow," Size of the account at the bank above, with the same percentage (8 mln, gang 20 million)");
			SendClientMessage(playerid, yellow," RPG with 2 bullets on spawn .. and other unique opportunities");
			SendClientMessage(playerid, yellow," Full list of features and rules on access can be read on the forum - gta.bews.tk");
			return 1;
		}


		if(strcmp(tmp,"/locations",true)==0) {
			format(string,sizeof(string)," LV Maximum v%s | Locations: ",Version);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid, yellow," '/in1' - Bloodbowl Stadium");
			SendClientMessage(playerid, yellow," '/in2' - Hotring Stadium");
			SendClientMessage(playerid, yellow," '/in3' - 8-Track Stadium");
			SendClientMessage(playerid, yellow," '/in4' - Dirtbike Stadium");
			SendClientMessage(playerid, yellow," '/in5' - Kickstart Stadium");
			SendClientMessage(playerid, yellow," '/in6' - Oval Stadium");
			SendClientMessage(playerid, yellow," '/in7' - Vice Stadium");
			SendClientMessage(playerid, yellow," '/back' - Exit");
			return 1;
		}

		if(strcmp(tmp,"/rus",true) == 0) {
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
			Lang[playerid] = 0;
			dini_IntSet(PF,"lang",Lang[playerid]);
			SendClientMessage(playerid,green," Ваш язык был изменён на русский.");
			return 1;
		}

	}
	return Errorm(playerid);
}

//------------------------------------------------------------------------------------------------------

public OnPlayerRequestSpawn(playerid)
{
	CrashTest("[function] OnPlayerRequestSpawn");

	if(MTsys2[playerid] == 0) return 0;

	if(Login[playerid] == 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Пожалуйста, войдите в свой аккаунт");
		else SendClientMessage(playerid, yellow, " Please login into your account");
		return 0;
	}

	return 1;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerRequestClass(playerid, classid)
{
	if(Login[playerid]==0) return 1;

	SetupPlayerForClassSelection(playerid);
	IntDebug[playerid]=0; playerSpawned[playerid] = false;
	Skin[playerid]=GetPlayerSkin(playerid);

	new rand = random(8);

	switch(rand) {
	case 0: ApplyAnimation(playerid, "DANCING", "dnce_M_e", 4.0,1,1,0,0,0);
	case 1: ApplyAnimation(playerid, "DANCING", "dance_loop", 4.0,1,1,0,0,0);
	case 2: ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 4.0,1,1,0,0,0);
	case 3: ApplyAnimation(playerid, "DANCING", "dnce_M_a", 4.0,1,1,0,0,0);
	case 4: ApplyAnimation(playerid, "DANCING", "dnce_M_b", 4.0,1,1,0,0,0);
	case 5: ApplyAnimation(playerid, "DANCING", "dnce_M_c", 4.0,1,1,0,0,0);
	case 6: ApplyAnimation(playerid, "DANCING", "dnce_M_d", 4.0,1,1,0,0,0);
	case 7: ApplyAnimation(playerid, "DANCING", "dnce_M_e", 4.0,1,1,0,0,0);
	}

	new string[256];
	format(string,sizeof(string),"~w~~n~~b~~n~~r~~n~~g~Las Venturas   ~n~~r~Maximum  ~n~~w~v%s r%s",Version, Revision);
	GameTextForPlayer(playerid,string,5000,1);

	return 1;
}

//------------------------------------------------------------------------------------------------------

public SetupPlayerForClassSelection(playerid)
{

	//	SetPlayerPos(playerid,1913.6387,1433.2288,72.6059);
	//	SetPlayerFacingAngle(playerid, 138.6112);
	//	SetPlayerCameraPos(playerid,1911.4032,1429.3503,72.7823);
	//	SetPlayerCameraLookAt(playerid,1932.2374,1461.8077,65.5395);
	//	PlayerPlaySound(playerid,SOUND_MUSIC1,1913.6387,1433.2288,72.6059);

	SetPlayerPos(playerid,1944.9351,986.4768,992.4688);
	SetPlayerFacingAngle(playerid, 268.9163);
	SetPlayerCameraPos(playerid,1948.3185,986.4310,992.4688);
	SetPlayerCameraLookAt(playerid,1944.9351,986.4768,992.4688);
	SetPlayerInterior(playerid,10);
	SetPlayerVirtualWorld(playerid, 1);

}

//------------------------------------------------------------------------------------------------------

public OnPlayerSpawn(playerid) {
	CrashTest("[function] OnPlayerSpawn");
	/*
SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL_SILENCED,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_DESERT_EAGLE,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_SHOTGUN,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_SAWNOFF_SHOTGUN,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_SPAS12_SHOTGUN,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_MP5,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_AK47,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_M4,900);
SetPlayerSkillLevel(playerid,WEAPONSKILL_SNIPERRIFLE,900);
*/

	SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL_SILENCED,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_DESERT_EAGLE,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SHOTGUN,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SAWNOFF_SHOTGUN,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SPAS12_SHOTGUN,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_MP5,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_AK47,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_M4,999);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SNIPERRIFLE,999);

	if(PLSpecP[playerid]==1)
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(PLSpecO[i]==playerid) SpecExit(i);

	ClearAnimations(playerid);
	SetPlayerInterior(playerid,0);

	if(Gang[playerid]==0)
	SetPlayerRandomSpawn(playerid);
	else
	if(PLGangSpawn[playerid]!=0)
	SetPlayerGangSpawn(playerid);
	else
	SetPlayerRandomSpawn(playerid);

	SetPlayerVirtualWorld(playerid, 0);
	telep[playerid]=0;
	GivePlayerWeapon(playerid, 34, 10);

	if(Sponsor[playerid]==1) {
		GivePlayerWeapon(playerid, 35, 2);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL_SILENCED,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_DESERT_EAGLE,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_SHOTGUN,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_SAWNOFF_SHOTGUN,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_SPAS12_SHOTGUN,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_MP5,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_AK47,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_M4,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_SNIPERRIFLE,999);
	}

	if(IRCuser[playerid]==1) {
		SetPlayerArmour(playerid,100);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL_SILENCED,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_DESERT_EAGLE,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_SHOTGUN,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_SAWNOFF_SHOTGUN,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_SPAS12_SHOTGUN,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_MP5,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_AK47,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_M4,999);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_SNIPERRIFLE,999);
	}


	SetPlayerSkin(playerid, Skin[playerid]);

	if (Jail[playerid] == 1) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вас вернули в тюрьму.");
		else SendClientMessage(playerid, yellow, " You was returned to jail.");
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,265.1273,77.6823,1001.0391);
	}

	SetTimerEx("SpawnCheck", 10000, 0, "i", playerid);
	SetPlayerHealth(playerid,99999.0);


	new string[256];
	format(string,sizeof(string),"~w~~n~~b~~n~~r~~n~~g~Las Venturas   ~n~~r~Maximum  ~n~~w~v%s r%s",Version, Revision);
	GameTextForPlayer(playerid,string,5000,1);

	if(PlayerSWeapInfo[playerid][LastSpectated] != 0) {
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w1], PlayerSWeapInfo[playerid][ammo1]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w2], PlayerSWeapInfo[playerid][ammo2]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w3], PlayerSWeapInfo[playerid][ammo3]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w4], PlayerSWeapInfo[playerid][ammo4]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w5], PlayerSWeapInfo[playerid][ammo5]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w6], PlayerSWeapInfo[playerid][ammo6]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w7], PlayerSWeapInfo[playerid][ammo7]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w8], PlayerSWeapInfo[playerid][ammo8]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w9], PlayerSWeapInfo[playerid][ammo9]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w10], PlayerSWeapInfo[playerid][ammo10]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w11], PlayerSWeapInfo[playerid][ammo11]);
		GivePlayerWeapon(playerid, PlayerSWeapInfo[playerid][w12], PlayerSWeapInfo[playerid][ammo12]);
		PlayerSWeapInfo[playerid][LastSpectated] = 0; }


	new ttempa; if(Bank[playerid]!=0) ttempa=10000000/Bank[playerid]; else ttempa=10000000;
	if(ttempa<=1) format(string,sizeof(string),"$%d",Bank[playerid]);
	if(ttempa>1 && ttempa<=10) format(string,sizeof(string),"$0%d",Bank[playerid]);
	if(ttempa>10 && ttempa<=100) format(string,sizeof(string),"$00%d",Bank[playerid]);
	if(ttempa>100 && ttempa<=1000) format(string,sizeof(string),"$000%d",Bank[playerid]);
	if(ttempa>1000 && ttempa<=10000) format(string,sizeof(string),"$0000%d",Bank[playerid]);
	if(ttempa>10000 && ttempa<=100000) format(string,sizeof(string),"$00000%d",Bank[playerid]);
	if(ttempa>100000 && ttempa<=1000000) format(string,sizeof(string),"$000000%d",Bank[playerid]);
	if(ttempa>1000000 && ttempa<=10000000) format(string,sizeof(string),"$0000000%d",Bank[playerid]);
	TextDrawSetString(BankDraw[playerid], string);
	TextDrawShowForPlayer(playerid, BankDraw[playerid]);


	if(Gang[playerid]!=0) {
		new Pgang[256]; format(Pgang,sizeof(Pgang),"LVM/gangs/%s.ini", PLGangName[playerid]);
		new GangBank=dini_Int(Pgang,"bank");
		new ttempag; if(GangBank!=0) ttempag=10000000/GangBank; else ttempag=10000000;
		if(ttempag<=1) format(string,sizeof(string),"$%d",GangBank);
		if(ttempag>1 && ttempag<=10) format(string,sizeof(string),"$0%d",GangBank);
		if(ttempag>10 && ttempag<=100) format(string,sizeof(string),"$00%d",GangBank);
		if(ttempag>100 && ttempag<=1000) format(string,sizeof(string),"$000%d",GangBank);
		if(ttempag>1000 && ttempag<=10000) format(string,sizeof(string),"$0000%d",GangBank);
		if(ttempag>10000 && ttempag<=100000) format(string,sizeof(string),"$00000%d",GangBank);
		if(ttempag>100000 && ttempag<=1000000) format(string,sizeof(string),"$000000%d",GangBank);
		if(ttempag>1000000 && ttempag<=10000000) format(string,sizeof(string),"$0000000%d",GangBank);
		TextDrawSetString(GangDraw[playerid], string);
		TextDrawShowForPlayer(playerid, GangDraw[playerid]);
	}


	/*
if(LKills[playerid]<10) SetVehicleParamsForPlayer(vehvorob,playerid, 0, 1);
if(LKills[playerid]<20) SetVehicleParamsForPlayer(vehtank,playerid, 0, 1);
if(LKills[playerid]<30) SetVehicleParamsForPlayer(vehhydra,playerid, 0, 1);
if(LKills[playerid]<40) SetVehicleParamsForPlayer(vehhanter,playerid, 0, 1); */

	return 1;
}

public SpawnCheck(playerid){
	playerSpawned[playerid] = true;
	SetPlayerHealth(playerid,100.0);
	GetPlayerArmour(playerid,Armour[playerid]);
	return 1; }

//------------------------------------------------------------------------------------------------------

public SetPlayerRandomSpawn(playerid)
{
	PlayerPlaySound(playerid,SOUND_OFF,-1421.1034,1488.5735,11.8084);
	new rand = random(sizeof(gRandomPlayerSpawns));
	SetPlayerPos(playerid, gRandomPlayerSpawns[rand][0], gRandomPlayerSpawns[rand][1], gRandomPlayerSpawns[rand][2]); // Warp the player
	return 1;
}


public SetPlayerGangSpawn(playerid)
{
	CrashTest("[function] SetPlayerGangSpawn");

	PlayerPlaySound(playerid,SOUND_OFF,-1421.1034,1488.5735,11.8084);
	SetPlayerPos(playerid, Xgspawn[playerid], Ygspawn[playerid], Zgspawn[playerid]); // Warp the player
	return 1; }


//------------------------------------------------------------------------------------------------------

public OnVehicleSpawn(vehicleid) {
	CrashTest("[function] OnVehicleSpawn");

	SetVehicleHealth(vehicleid, 1000);

	new model=GetVehicleModel(vehicleid);
	if(model == 537 || model == 538 || model == 425 || model == 520 || model == 432) return 1;
	for(new i=0; i < MAX_PLAYERS; i++) SetVehicleParamsForPlayer(vehicleid,i, 0, 0);
	return 1; }

//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{

	//	new hour,minute,second;
	//	gettime(hour,minute,second);
	//	if(hour==16) { SendRconCommand("changemode 4MADNESSrus"); return 1; }


	new t[256]; format(t,sizeof(t),"LV Maximum v%s RU/EN",Version);
	SetGameModeText(t);
	//	SendRconCommand("instagib 0");

	ShowPlayerMarkers(1);
	ShowNameTags(1);
	UsePlayerPedAnims();
	EnableStuntBonusForAll(0);



	//fixchars
	/*
new File:f;
f = fopen("tex.ini", io_append);
new texxx[256]; 
format(texxx,sizeof(texxx),"Всем превед");
fwrite(f,texxx);
format(texxx,256, "\r\n");
fwrite(f,texxx);
fclose(f);
*/

	IRC_ReconnectF();


	new tttmep=0;
	new	string[STR], File:file;
	file = fopen("LVM/IRCusers.ini",io_write); fclose(file);
	if((file = fopen("LVM/system/antiswear.ini",io_read)))
	{
		while(fread(file,string))
		{
			for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
			Swears[num_words] = string;
			if(tttmep==0) {
				tttmep=1;
				//            print(" Antiswear Loaded.");
			}
			num_words++;
		}
		fclose(file);
	}


	new temp[256];
	new num;
	new File:fhandle;
	fhandle = fopen("LVM/system/interiors.ini",io_read);

	while(fread(fhandle,temp,sizeof(temp),false)) {
		new index2 = 0;
		new temp2[256];
		new lent, lentidx;
		temp2 = strtok(temp,index2);

		LocationsCor[num][0] = strval(strtok(temp,index2));
		LocationsCor[num][1] = strval(strtok(temp,index2));
		LocationsCor[num][2] = strval(strtok(temp,index2));
		LocationsCor[num][3] = strval(strtok(temp,index2));
		LocationsCor[num][4] = strval(strtok(temp,index2));
		for(new i=0; i<strlen(temp); i++) { if(temp[i]==32) lentidx++; if(lentidx==5) lent=i+2; }
		format(temp2,sizeof(temp2)," %s", temp[lent]);
		LocationsText[num]=temp2;
		num++;
	}
	
	fclose(fhandle);

	format(Gnowgang,sizeof(Gnowgang),"None");
	format(GangDelName,sizeof(GangDelName),"None");

	new sfile[256]; format(sfile,sizeof(sfile),"LVM/system/config.ini");
	if(!dini_Exists(sfile)) dini_Create(sfile);
	GlobalKills=dini_Int(sfile,"GlobalKills");
	GlobalCash1=dini_Int(sfile,"GlobalCash1");
	GlobalCash2=dini_Int(sfile,"GlobalCash2");
	GlobalPlayers=dini_Int(sfile,"GlobalPlayers");
	GlobalRace=dini_Int(sfile,"GlobalRace");
	GlobalDM=dini_Int(sfile,"GlobalDM");

	CrashTestOn=dini_Int(sfile,"CrashTestOn");

	format(Skfile,sizeof(Skfile),"LVM/players/AndyX86.ini");

	for(new i = 0; i < 3; i++) { format(string,sizeof(string),"ADV%d", i); ADV[i]=dini_Get(sfile, string); }

	if (!dini_Exists("LVM/systemlog.txt")) dini_Create("LVM/systemlog.txt");
	if (!dini_Exists("LVM/system/stats/addcitystat.ini")) dini_Create("LVM/system/stats/addcitystat.ini");
	if (!dini_Exists("LVM/system/stats/tmoderstat.ini")) dini_Create("LVM/system/stats/tmoderstat.ini");

	CrashTest("------------ Server Started------------");


	// Player Class's
	AddPlayerClass(280,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(281,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(282,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(283,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(284,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(285,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(286,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(287,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);

	AddPlayerClass(254,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(255,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(256,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(257,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(258,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(259,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(260,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(261,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(262,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(263,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(264,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(274,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(275,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(276,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);

	AddPlayerClass(1,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(2,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(290,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(291,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(292,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(293,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(294,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(295,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(296,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(297,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(298,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(299,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);

	AddPlayerClass(277,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(278,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(279,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(288,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(47,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(48,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(49,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(50,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(51,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(52,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(53,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(54,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(55,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(56,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(57,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(58,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(59,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(60,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(61,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(62,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(63,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(64,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(66,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(67,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(68,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(69,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(70,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(71,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(72,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(73,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(75,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(76,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(78,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(79,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(80,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(81,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(82,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(83,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(84,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(85,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(87,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(88,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(89,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(91,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(92,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(93,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(95,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(96,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(97,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(98,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(99,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(100,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(101,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(102,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(103,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(104,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(105,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(106,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(107,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(108,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(109,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(110,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(111,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(112,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(113,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(114,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(115,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(116,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(117,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(118,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(120,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(121,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(122,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(123,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(124,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(125,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(126,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(127,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(128,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(129,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(131,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(133,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(134,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(135,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(136,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(137,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(138,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(139,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(140,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(141,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(142,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(143,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(144,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(145,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(146,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(147,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(148,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(150,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(151,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(152,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(153,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(154,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(155,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(156,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(157,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(158,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(159,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(160,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(161,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(162,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(163,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(164,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(165,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(166,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(167,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(168,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(169,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(170,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(171,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(172,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(173,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(174,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(175,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(176,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(177,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(178,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(179,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(180,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(181,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(182,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(183,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(184,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(185,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(186,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(187,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(188,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(189,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(190,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(191,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(192,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(193,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(194,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(195,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(196,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(197,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(198,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(199,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(200,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(201,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(202,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(203,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(204,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(205,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(206,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(207,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(209,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(210,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(211,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(212,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(213,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(214,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(215,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(216,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(217,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(218,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(219,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(220,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(221,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(222,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(223,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(224,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(225,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(226,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(227,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(228,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(229,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(230,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(231,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(232,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(233,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(234,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(235,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(236,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(237,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(238,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(239,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(240,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(241,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(242,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(243,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(244,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(245,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(246,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(247,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(248,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(249,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(250,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(251,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(253,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);


	AddPlayerClass(265,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(266,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(267,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(268,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(269,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(270,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(271,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(272,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);
	AddPlayerClass(0,1958.3783,1343.1572,15.3746,270.1425,24,300,29,300,31,250);


	// Car Spawns

	incars1[0]=AddStaticVehicleEx(504, -1462.2665, 937.9393, 1037.3976, 344.3488, 0, 93, 1); // Blood
	incars1[1]=AddStaticVehicleEx(504, -1424.0378, 931.9212, 1037.1992, 356.5463, 1, 0, 1); // Blood
	incars1[2]=AddStaticVehicleEx(504, -1443.3816, 933.4030, 1037.2897, 351.0466, 0, 1, 1); // Blood
	incars1[3]=AddStaticVehicleEx(504, -1519.4357, 998.5234, 1037.5093, 270.9289, 86, 0, 1); // Blood
	incars1[4]=AddStaticVehicleEx(504, -1388.1575, 1059.6782, 1038.2981, 178.7171, 3, 0, 1); // Blood
	incars1[5]=AddStaticVehicleEx(504, -1277.3864, 993.7547, 1037.0045, 89.7324, 67, 0, 1); // Blood
	incars1[6]=AddStaticVehicleEx(504, -1310.7460, 949.2624, 1036.3196, 34.2967, 7, 0, 1); // Blood
	incars1[7]=AddStaticVehicleEx(504, -1314.9357, 1044.7412, 1037.9182, 149.5985, 6, 0, 1); // Blood
	incars1[8]=AddStaticVehicleEx(504, -1478.5012, 1047.3043, 1038.2510, 209.4226, 2, 0, 1); // Blood
	incars1[9]=AddStaticVehicleEx(504, -1490.0226, 950.5529, 1037.2432, 316.7796, 8, 0, 1); // Blood
	incars1[10]=AddStaticVehicleEx(504, -1363.9353, 931.3824, 1036.1027, 4.5875, 8, 0, 1); // Blood


	incars2[0]=AddStaticVehicleEx(502, -1403.5303, -266.9695, 1043.5491, 348.8232, 93, 0, 1); // Hot
	incars2[1]=AddStaticVehicleEx(502, -1409.2347, -264.8864, 1043.5490, 345.5728, 1, 0, 1); // Hot
	incars2[2]=AddStaticVehicleEx(502, -1394.5016, -268.4771, 1043.9008, 22.6736, 0, 1, 1); // Hot
	incars2[3]=AddStaticVehicleEx(502, -1387.8989, -228.5794, 1043.1499, 5.8003, 3, 0, 1); // Hot
	incars2[4]=AddStaticVehicleEx(502, -1405.7368, -200.0725, 1042.9988, 4.7364, 86, 0, 1); // Hot
	incars2[5]=AddStaticVehicleEx(503, -1370.4534, -271.7954, 1044.7727, 57.3603, 7, 0, 1); // Hot
	incars2[6]=AddStaticVehicleEx(503, -1388.5723, -220.7664, 1043.0686, 4.6663, 6, 0, 1); // Hot
	incars2[7]=AddStaticVehicleEx(503, -1406.4170, -192.7186, 1043.0525, 4.6103, 8, 0, 1); // Hot

	incars3[0]=AddStaticVehicleEx(444, -1379.8441, 127.1284, 1031.1030, 133.6681, 8, 0, 1); // Mons
	incars3[1]=AddStaticVehicleEx(444, -1379.4019, 85.3183, 1031.1414, 48.2584, 8, 0, 1); // Mons
	incars3[2]=AddStaticVehicleEx(444, -1421.9271, 128.1107, 1031.1473, 225.9583, 8, 0, 1); // Mons
	incars3[3]=AddStaticVehicleEx(444, -1421.3079, 85.6893, 1032.8019, 313.5480, 8, 0, 1); // Mons

	incars4[0]=AddStaticVehicleEx(468, -1335.8040, -632.0375, 1055.6412, 244.3977, 8, 0, 1); // San
	incars4[1]=AddStaticVehicleEx(468, -1330.9430, -634.4296, 1055.8748, 244.3617, 2, 0, 1); // San
	incars4[2]=AddStaticVehicleEx(468, -1325.4097, -637.1621, 1056.1935, 244.8561, 3, 0, 1); // San
	incars4[3]=AddStaticVehicleEx(468, -1345.6439, -626.8730, 1055.1667, 243.5196, 41, 0, 1); // San
	incars4[4]=AddStaticVehicleEx(468, -1351.5750, -623.9476, 1054.8108, 243.0329, 5, 0, 1); // San
	incars4[5]=AddStaticVehicleEx(468, -1358.9904, -620.2639, 1054.4351, 243.0020, 6, 0, 1); // San
	incars4[6]=AddStaticVehicleEx(468, -1357.4661, -629.6298, 1053.3041, 237.9914, 108, 0, 1); // San
	incars4[7]=AddStaticVehicleEx(468, -1349.6422, -633.7853, 1053.7339, 242.9052, 86, 0, 1); // San
	incars4[8]=AddStaticVehicleEx(468, -1341.8771, -637.9445, 1054.1632, 242.6056, 77, 0, 1); // San
	incars4[9]=AddStaticVehicleEx(468, -1332.9504, -642.3727, 1054.6403, 248.1515, 65, 0, 1); // San
	incars4[10]=AddStaticVehicleEx(468, -1326.0349, -645.6872, 1055.0010, 243.9233, 51, 0, 1); // San


	incars5[0]=AddStaticVehicleEx(503, -1408.3749, 898.6855, 1041.4142, 296.9127, 12, 0, 1); // Hot
	incars5[1]=AddStaticVehicleEx(502, -1406.0769, 893.7651, 1041.3125, 298.5083, 93, 0, 1); // Hot
	incars5[2]=AddStaticVehicleEx(502, -1416.7865, 907.8572, 1040.9388, 269.1533, 1, 1, 1); // Hot
	incars5[3]=AddStaticVehicleEx(502, -1404.9443, 908.1695, 1040.8962, 273.4021, 1, 0, 1); // Hot
	incars5[4]=AddStaticVehicleEx(502, -1414.5322, 922.1055, 1038.5280, 269.1972, 0, 0, 1); // Hot
	incars5[5]=AddStaticVehicleEx(502, -1406.3344, 922.1045, 1038.5354, 270.9237, 3, 0, 1); // Hot
	incars5[6]=AddStaticVehicleEx(502, -1398.0825, 922.2814, 1038.5150, 272.1205, 86, 0, 1); // Hot
	incars5[7]=AddStaticVehicleEx(502, -1388.4331, 922.5146, 1038.4874, 270.6262, 7, 0, 1); // Hot
	incars5[8]=AddStaticVehicleEx(502, -1376.7954, 922.5552, 1038.4921, 268.3576, 6, 0, 1); // Hot
	incars5[9]=AddStaticVehicleEx(503, -1370.9575, 907.6961, 1041.0420, 272.0064, 8, 0, 1); // Hot


	incars6[0]=AddStaticVehicleEx(468, -1428.9116, 1653.7113, 1052.2000, 265.2461, 51, 0, 1); //
	incars6[1]=AddStaticVehicleEx(468, -1382.6890, 1627.3057, 1052.1953, 155.2306, 6, 0, 1); //
	incars6[2]=AddStaticVehicleEx(468, -1482.4104, 1649.8440, 1052.2000, 185.7693, 7, 0, 1); //
	incars6[3]=AddStaticVehicleEx(468, -1495.0963, 1585.4845, 1052.2001, 182.7939, 86, 0, 1); //
	incars6[4]=AddStaticVehicleEx(522, -1460.1616, 1561.7943, 1052.4197, 264.5770, 109, 0, 1); //
	incars6[5]=AddStaticVehicleEx(522, -1415.0972, 1587.6672, 1052.1987, 351.0443, 93, 0, 1); //
	incars6[6]=AddStaticVehicleEx(522, -1441.7933, 1626.2397, 1052.2001, 183.1625, 3, 0, 1); //

	incars7[0]=AddStaticVehicleEx(601, -1366.4260, 1261.9260, 1039.6260, 116.9546, 1, 1, 1); //
	incars7[1]=AddStaticVehicleEx(601, -1367.6967, 1234.3655, 1039.6260, 64.2535, 1, 1, 1); //
	incars7[2]=AddStaticVehicleEx(601, -1389.2119, 1213.0426, 1039.6260, 15.5859, 1, 1, 1); //
	incars7[3]=AddStaticVehicleEx(601, -1418.5645, 1221.5571, 1039.6311, 317.8911, 1, 1, 1); //
	incars7[4]=AddStaticVehicleEx(601, -1428.6743, 1255.0310, 1039.6262, 255.4066, 1, 1, 1); //
	incars7[5]=AddStaticVehicleEx(601, -1395.9463, 1277.2056, 1039.6260, 176.6679, 1, 1, 1); //
	incars7[6]=AddStaticVehicleEx(601, -1304.8452, 1273.5498, 1030.9672, 214.4946, 1, 1, 1); //
	incars7[7]=AddStaticVehicleEx(601, -1342.5491, 1207.3656, 1027.8694, 356.8102, 1, 1, 1); //
	incars7[8]=AddStaticVehicleEx(601, -1442.9521, 1187.9097, 1031.0961, 256.0978, 1, 1, 1); //
	incars7[9]=AddStaticVehicleEx(601, -1473.9851, 1226.6334, 1028.4038, 158.7696, 1, 1, 1); //
	incars7[10]=AddStaticVehicleEx(601, -1481.7247, 1270.5536, 1029.6456, 161.1126, 1, 1, 1); //
	incars7[11]=AddStaticVehicleEx(601, -1431.5303, 1305.9451, 1030.5245, 272.4415, 1, 1, 1); //
	incars7[12]=AddStaticVehicleEx(601, -1372.1357, 1285.9395, 1028.2246, 81.5901, 1, 1, 1); //


	AddStaticVehicleEx(402, 2040.0520, 1319.2799, 10.3779, 183.2439, 16, 16, 300);
	AddStaticVehicleEx(533, 2040.5247, 1359.2783, 10.3516, 177.1306, 13, 13, 300);
	AddStaticVehicleEx(533, 2110.4102, 1398.3672, 10.7552, 359.5964, 13, 13, 300);
	AddStaticVehicleEx(507, 2074.9624, 1479.2120, 10.3990, 359.6861, 64, 64, 300);
	AddStaticVehicleEx(576, 2075.6038, 1666.9750, 10.4252, 359.7507, 94, 94, 300);
	AddStaticVehicleEx(541, 2119.5845, 1938.5969, 10.2967, 181.9064, 22, 22, 300);
	AddStaticVehicleEx(541, 1843.7881, 1216.0122, 10.4556, 270.8793, 60, 1, 300);
	AddStaticVehicleEx(402, 1944.1003, 1344.7717, 8.9411, 0.8168, 30, 30, 300);
	AddStaticVehicleEx(402, 1679.2278, 1316.6287, 10.6520, 180.4150, 90, 90, 300);
	AddStaticVehicleEx(415, 1685.4872, 1751.9667, 10.5990, 268.1183, 25, 1, 300);
	AddStaticVehicleEx(507, 2034.5016, 1912.5874, 11.9048, 0.2909, 123, 1, 300);
	AddStaticVehicleEx(507, 2172.1682, 1988.8643, 10.5474, 89.9151, 7, 7, 300);
	AddStaticVehicleEx(533, 2245.5759, 2042.4166, 10.5000, 270.7350, 14, 14, 300);
	AddStaticVehicleEx(576, 2361.1538, 1993.9761, 10.4260, 178.3929, 101, 1, 300);
	AddStaticVehicleEx(411, 2221.9946, 1998.7787, 9.6815, 92.6188, 53, 53, 300);
	AddStaticVehicleEx(427, 2243.3833, 1952.4221, 14.9761, 359.4796, 0, 1, 300);
	AddStaticVehicleEx(429, 2276.7085, 1938.7263, 31.5046, 359.2321, 40, 1, 300);
	AddStaticVehicleEx(429, 2602.7769, 1853.0667, 10.5468, 91.4813, 43, 1, 300);
	AddStaticVehicleEx(603, 2610.7600, 1694.2588, 10.6585, 89.3303, 69, 1, 300);
	AddStaticVehicleEx(429, 2635.2419, 1075.7726, 10.5472, 89.9571, 53, 1, 300);
	AddStaticVehicleEx(562, 2577.2354, 1038.8063, 10.4777, 181.7069, 35, 1, 300);
	AddStaticVehicleEx(502, 2394.1021, 989.4888, 10.4806, 89.5080, 7, 0, 300);
	AddStaticVehicleEx(562, 1881.0510, 957.2120, 10.4789, 270.4388, 11, 1, 300);
	AddStaticVehicleEx(475, 2039.1257, 1545.0879, 10.3481, 359.6690, 123, 1, 300);
	AddStaticVehicleEx(475, 2009.8782, 2411.7524, 10.5828, 178.9618, 66, 1, 300);
	AddStaticVehicleEx(533, 2010.0841, 2489.5510, 10.5003, 268.7720, 1, 2, 300);
	AddStaticVehicleEx(415, 2076.4033, 2468.7947, 10.5923, 359.9186, 36, 1, 300);
	AddStaticVehicleEx(487, 2093.2754, 2414.9421, 74.7556, 89.0247, 26, 57, 300);
	AddStaticVehicleEx(411, 2352.9026, 2577.9768, 10.5201, 0.4091, 7, 7, 300);
	AddStaticVehicleEx(411, 2166.6963, 2741.0413, 10.5245, 89.7816, 52, 52, 300);
	AddStaticVehicleEx(507, 1960.9989, 2754.9072, 10.5473, 200.4316, 112, 1, 300);
	AddStaticVehicleEx(480, 1919.5863, 2760.7595, 10.5079, 100.0753, 2, 1, 300);
	AddStaticVehicleEx(415, 1673.8038, 2693.8044, 10.5912, 359.7903, 40, 1, 300);
	AddStaticVehicleEx(402, 1591.0482, 2746.3982, 10.6519, 172.5125, 30, 30, 300);
	AddStaticVehicleEx(603, 1580.4537, 2838.2886, 10.6614, 181.4573, 75, 77, 300);
	AddStaticVehicleEx(411, 1555.2734, 2750.5261, 10.6388, 91.7773, 62, 62, 300);
	AddStaticVehicleEx(475, 1455.9305, 2878.5288, 8.5837, 181.0987, 118, 1, 300);
	AddStaticVehicleEx(576, 1537.8425, 2578.0525, 10.5662, 0.0650, 121, 1, 300);
	AddStaticVehicleEx(402, 1433.1594, 2607.3762, 10.3781, 88.0013, 16, 16, 300);
	AddStaticVehicleEx(603, 2223.5898, 1288.1464, 10.5104, 182.0297, 18, 1, 300);
	AddStaticVehicleEx(427, 2451.6707, 1207.1179, 10.4510, 179.8960, 0, 1, 300);
	AddStaticVehicleEx(411, 2461.7253, 1357.9705, 10.6389, 180.2927, 62, 62, 300);
	AddStaticVehicleEx(427, 2461.8162, 1629.2268, 10.4496, 181.4625, 0, 1, 300);
	AddStaticVehicleEx(576, 2395.7554, 1658.9591, 10.5740, 359.7374, 0, 1, 300);
	AddStaticVehicleEx(580, 1553.3696, 1020.2884, 10.5532, 270.6825, 119, 50, 300);
	AddStaticVehicleEx(480, 1380.8304, 1159.1782, 10.9128, 355.7117, 123, 1, 300);
	AddStaticVehicleEx(580, 1445.4526, 974.2831, 10.5534, 1.6213, 109, 100, 300);
	AddStaticVehicleEx(480, 1704.2365, 940.1490, 10.9127, 91.9048, 113, 1, 300);
	AddStaticVehicleEx(580, 1658.5463, 1028.5432, 10.5533, 359.8419, 101, 101, 300);
	AddStaticVehicleEx(522, 1677.6628, 1040.1930, 10.4136, 178.7038, 58, 1, 300);
	AddStaticVehicleEx(522, 1383.6959, 1042.2114, 10.4121, 85.7269, 66, 1, 300);
	AddStaticVehicleEx(522, 1064.2332, 1215.4158, 10.4157, 177.2942, 72, 1, 300);
	AddStaticVehicleEx(522, 1111.4536, 1788.3893, 10.4158, 92.4627, 72, 1, 300);
	AddStaticVehicleEx(522, 953.2818, 1806.1392, 8.2188, 235.0706, 3, 8, 300);
	AddStaticVehicleEx(522, 995.5328, 1886.6055, 10.5359, 90.1048, 3, 8, 300);
	AddStaticVehicleEx(463, 993.7083, 2267.4133, 11.0315, 1.5610, 75, 13, 300);
	AddStaticVehicleEx(475, 1439.5662, 1999.9822, 8.5843, 0.4194, 66, 1, 300);
	AddStaticVehicleEx(522, 1430.2354, 1999.0144, 10.3896, 352.0951, 4, 25, 300);
	AddStaticVehicleEx(522, 2156.3540, 2188.6572, 10.2414, 22.6504, 6, 25, 300);
	AddStaticVehicleEx(598, 2277.6846, 2477.1096, 10.5652, 180.1090, 0, 1, 300);
	AddStaticVehicleEx(598, 2268.9888, 2443.1697, 10.5662, 181.8062, 0, 1, 300);
	AddStaticVehicleEx(598, 2256.2891, 2458.5110, 10.5680, 358.7335, 0, 1, 300);
	AddStaticVehicleEx(598, 2251.6921, 2477.0205, 10.5671, 179.5244, 0, 1, 300);
	AddStaticVehicleEx(522, 2476.7900, 2532.2222, 21.4416, 0.5081, 8, 82, 300);
	AddStaticVehicleEx(522, 2580.5320, 2267.9595, 10.3917, 271.2372, 8, 82, 300);
	AddStaticVehicleEx(522, 2814.4331, 2364.6641, 10.3907, 89.6752, 36, 105, 300);
	AddStaticVehicleEx(475, 2827.4143, 2345.6953, 10.5768, 270.0668, 97, 1, 300);
	AddStaticVehicleEx(463, 1670.1089, 1297.8322, 10.3864, 359.4936, 87, 118, 300);
	AddStaticVehicleEx(487, 1614.7153, 1548.7513, 11.2749, 347.1516, 58, 8, 300);
	AddStaticVehicleEx(487, 1647.7902, 1538.9934, 11.2433, 51.8071, 0, 8, 300);
	AddStaticVehicleEx(487, 1608.3851, 1630.7268, 11.2840, 174.5517, 58, 8, 300);
	AddStaticVehicleEx(476, 1283.0006, 1324.8849, 9.5332, 275.0468, 7, 6, 300); //11.5332
	AddStaticVehicleEx(476, 1283.5107, 1361.3171, 9.5382, 271.1684, 1, 6, 300); //11.5382
	AddStaticVehicleEx(476, 1283.6847, 1386.5137, 11.5300, 272.1003, 89, 91, 300);
	AddStaticVehicleEx(476, 1288.0499, 1403.6605, 11.5295, 243.5028, 119, 117, 300);
	AddStaticVehicleEx(415, 1319.1038, 1279.1791, 10.5931, 0.9661, 62, 1, 300);
	AddStaticVehicleEx(463, 1710.5763, 1805.9275, 10.3911, 176.5028, 92, 3, 300);
	AddStaticVehicleEx(463, 2805.1650, 2027.0028, 10.3920, 357.5978, 92, 3, 300);
	AddStaticVehicleEx(475, 2822.3628, 2240.3594, 8.5812, 89.7540, 123, 1, 300);
	AddStaticVehicleEx(463, 2876.8013, 2326.8418, 10.3914, 267.8946, 115, 118, 300);
	AddStaticVehicleEx(480, 2842.0554, 2637.0105, 10.5000, 182.2949, 1, 3, 300);
	AddStaticVehicleEx(445, 2494.4214, 2813.9348, 10.5172, 316.9462, 72, 39, 300);
	AddStaticVehicleEx(445, 2327.6484, 2787.7327, 10.5174, 179.5639, 75, 39, 300);
	AddStaticVehicleEx(445, 2142.6970, 2806.6758, 10.5176, 89.8970, 79, 39, 300);
	AddStaticVehicleEx(463, 2139.7012, 2799.2114, 10.3917, 229.6327, 25, 118, 300);
	AddStaticVehicleEx(463, 2104.9446, 2658.1331, 10.3834, 82.2700, 36, 0, 300);
	AddStaticVehicleEx(522, 1914.2322, 2148.2590, 10.3906, 267.7297, 36, 0, 300);
	AddStaticVehicleEx(445, 1904.7527, 2157.4312, 10.5175, 183.7728, 83, 36, 300);
	AddStaticVehicleEx(445, 1532.6139, 2258.0173, 10.5176, 359.1516, 84, 36, 300);
	AddStaticVehicleEx(522, 1534.3204, 2202.8970, 10.3644, 4.9108, 118, 118, 300);
	AddStaticVehicleEx(445, 1613.1553, 2200.2664, 10.5176, 89.6204, 89, 35, 300);
	AddStaticVehicleEx(480, 1552.1292, 2341.7854, 10.9126, 274.0815, 101, 1, 300);
	AddStaticVehicleEx(580, 1637.6285, 2329.8774, 10.5538, 89.6408, 101, 101, 300);
	AddStaticVehicleEx(480, 1357.4165, 2259.7158, 10.9126, 269.5567, 62, 1, 300);
	AddStaticVehicleEx(507, 1281.7458, 2571.6719, 10.5472, 270.6128, 106, 1, 300);
	AddStaticVehicleEx(522, 1305.5295, 2528.3076, 10.3955, 88.7249, 3, 8, 300);
	AddStaticVehicleEx(463, 993.9020, 2159.4194, 10.3905, 88.8805, 74, 74, 300);
	AddStaticVehicleEx(415, 1512.7134, 787.6931, 10.5921, 359.5796, 75, 1, 300);
	AddStaticVehicleEx(522, 2299.5872, 1469.7910, 10.3815, 258.4984, 3, 8, 300);
	AddStaticVehicleEx(522, 2133.6428, 1012.8537, 10.3789, 87.1290, 3, 8, 300);

	//Monday 13th Additions ~ Jax
	AddStaticVehicleEx(415, 2266.7336, 648.4756, 11.0053, 177.8517, 0, 1, 300); //
	AddStaticVehicleEx(411, 2628.1047, 746.8704, 10.5246, 352.7574, 3, 3, 300); //
	// --- uncommented
	AddStaticVehicleEx(562, 1919.8829, 947.1886, 10.4715, 359.4453, 11, 1, 300); //
	AddStaticVehicleEx(562, 1881.6346, 1006.7653, 10.4783, 86.9967, 11, 1, 300); //
	AddStaticVehicleEx(562, 2038.1044, 1006.4022, 10.4040, 179.2641, 11, 1, 300); //
	AddStaticVehicleEx(562, 2038.1614, 1014.8566, 10.4057, 179.8665, 11, 1, 300); //
	AddStaticVehicleEx(562, 2038.0966, 1026.7987, 10.4040, 180.6107, 11, 1, 300); //
	// --- uncommented end

	//Uber haxed
	AddStaticVehicleEx(495, 9.1065, 1165.5066, 19.5855, 2.1281, 114, 108, 300); //
	AddStaticVehicleEx(510, 19.8059, 1163.7103, 19.1504, 346.3326, 11, 11, 300); //
	AddStaticVehicleEx(510, 12.5740, 1232.2848, 18.8822, 121.8670, 22, 22, 300); //
	AddStaticVehicleEx(434, -110.8473, 1133.7113, 19.7091, 359.7000, 2, 2, 300); //hotknife
	AddStaticVehicleEx(522, 69.4633, 1217.0189, 18.3304, 158.9345, 97, 0, 300); //
	AddStaticVehicleEx(475, -199.4185, 1223.0405, 19.2624, 176.7001, 25, 1, 300); //
	//	AddStaticVehicleEx(605, -340.2598, 1177.4846, 19.5565, 182.6176, 43, 8, 300); // SMASHED UP CAR
	AddStaticVehicleEx(476, 325.4121, 2538.5999, 17.5184, 181.2964, 71, 77, 300); //
	AddStaticVehicleEx(476, 291.0975, 2540.0410, 17.5276, 182.7206, 7, 6, 300); //
	AddStaticVehicleEx(576, 384.2365, 2602.1763, 16.0926, 192.4858, 72, 1, 300); //
	AddStaticVehicleEx(522, 423.8012, 2541.6870, 15.9708, 338.2426, 10, 1, 300); //
	AddStaticVehicleEx(522, -244.0047, 2724.5439, 62.2077, 51.5825, 10, 1, 300); //
	AddStaticVehicleEx(522, -311.1414, 2659.4329, 62.4513, 310.9601, 27, 1, 300); //

	AddStaticVehicleEx(419, 727.0942, 1948.3448, 5.3365, 0.7194, 13, 76, 300); //
	AddStaticVehicleEx(419, 1131.8389, 2081.3750, 10.6178, 183.0951, 13, 76, 300); //
	AddStaticVehicleEx(419, 1613.2394, 2213.8186, 10.6178, 270.1240, 13, 76, 300); //

	//uber haxed x 50
	//	AddStaticVehicleEx(406, 547.4633, 843.0204, -39.8406, 285.2948, 1, 1, 300); // DUMPER
	//	AddStaticVehicleEx(406, 625.1979, 828.9873, -41.4497, 71.3360, 1, 1, 300); // DUMPER
	//	AddStaticVehicleEx(486, 680.7997, 919.0510, -40.4735, 105.9145, 1, 1, 300); // DOZER
	//	AddStaticVehicleEx(486, 674.3994, 927.7518, -40.6087, 128.6116, 1, 1, 300); // DOZER
	AddStaticVehicleEx(489, 596.8064, 866.2578, -43.2617, 186.8359, 67, 8, 300); //
	AddStaticVehicleEx(489, 835.0838, 836.8370, 11.8739, 14.8920, 8, 90, 300); //
	AddStaticVehicleEx(445, 843.1893, 838.8093, 12.5177, 18.2348, 79, 39, 300); //
	//	AddStaticVehicleEx(605, 319.3803, 740.2404, 6.7814, 271.2593, 8, 90, 300); // SMASHED UP CAR
	AddStaticVehicleEx(480, -235.9767, 1045.8623, 19.8158, 180.0806, 75, 1, 300); //
	AddStaticVehicleEx(599, -211.5940, 998.9857, 19.8437, 265.4935, 0, 1, 300); //
	AddStaticVehicleEx(495, -304.0620, 1024.1111, 19.5714, 94.1812, 96, 25, 300); //
	AddStaticVehicleEx(533, -290.2229, 1317.0276, 54.1871, 81.7529, 7, 1, 300); //
	AddStaticVehicleEx(434, -330.2399, 1514.3022, 75.1388, 179.1514, 2, 2, 300); //BF INJECT
	AddStaticVehicleEx(402, -290.3145, 1567.1534, 75.0654, 133.1694, 61, 61, 300); //
	AddStaticVehicleEx(470, 280.4914, 1945.6143, 17.6317, 310.3278, 43, 0, 300); //
	AddStaticVehicleEx(490, 272.2862, 1949.4713, 17.6367, 285.9714, 1, 0, 300); //
	AddStaticVehicleEx(490, 271.6122, 1961.2386, 17.6373, 251.9081, 1, 0, 300); //
	AddStaticVehicleEx(470, 279.8705, 1966.2362, 17.6436, 228.4709, 43, 0, 300); //
	AddStaticVehicleEx(548, 292.2317, 1923.6440, 19.2898, 235.3379, 1, 1, 300); // CARGOBOB
	AddStaticVehicleEx(568, -441.3438, 2215.7026, 42.2489, 191.7953, 41, 29, 300); //
	AddStaticVehicleEx(568, -422.2956, 2225.2612, 42.2465, 0.0616, 41, 29, 300); //
	AddStaticVehicleEx(568, -371.7973, 2234.5527, 42.3497, 285.9481, 41, 29, 300); //
	AddStaticVehicleEx(568, -360.1159, 2203.4272, 42.3039, 113.6446, 41, 29, 300); //
	AddStaticVehicleEx(468, -660.7385, 2315.2642, 138.3866, 358.7643, 6, 6, 300); //
	AddStaticVehicleEx(460, -1029.2648, 2237.2217, 42.2679, 260.5732, 1, 3, 300); //
	vehhydra=AddStaticVehicleEx(520, 275.9427, 1989.8933, 18.3638, 269.9482, 0, 0, 300); //


	//Uber haxed x 100

	// --- uncommented
	AddStaticVehicleEx(419, 95.0568, 1056.5530, 13.4068, 192.1461, 13, 76, 300); //
	AddStaticVehicleEx(480, 114.7416, 1048.3517, 13.2890, 174.9752, 1, 2, 300); //
	//	AddStaticVehicleEx(466, 124.2480, 1075.1835, 13.3512, 174.5334, 78, 76, 300); // exceeds model limit
	AddStaticVehicleEx(507, -290.0065, 1759.4958, 42.4154, 89.7571, 116, 1, 300); //
	// --- uncommented end

	AddStaticVehicleEx(522, -302.5649, 1777.7349, 42.2514, 238.5039, 6, 25, 300); //
	AddStaticVehicleEx(522, -302.9650, 1776.1152, 42.2588, 239.9874, 8, 82, 300); //
	AddStaticVehicleEx(533, -301.0404, 1750.8517, 42.3966, 268.7585, 75, 1, 300); //
	AddStaticVehicleEx(475, -866.1774, 1557.2700, 23.8319, 269.3263, 31, 1, 300); //
	AddStaticVehicleEx(411, -799.3062, 1518.1556, 26.7488, 88.5295, 53, 53, 300); //
	AddStaticVehicleEx(522, -749.9730, 1589.8435, 26.5311, 125.6508, 92, 3, 300); //
	AddStaticVehicleEx(522, -867.8612, 1544.5282, 22.5419, 296.0923, 3, 3, 300); //
	//	AddStaticVehicleEx(579, -904.2978, 1553.8269, 25.9229, 266.6985, 7, 7, 300); //
	AddStaticVehicleEx(522, -944.2642, 1424.1603, 29.6783, 148.5582, 92, 3, 300); //
	// Exceeds model limit,  cars need model adjustments
	// --- uncommented
	AddStaticVehicleEx(480, -237.7157, 2594.8804, 62.3828, 178.6802, 1, 2, 300); //
	AddStaticVehicleEx(431, -160.5815, 2693.7185, 62.2031, 89.4133, 47, 74, 300); //
	AddStaticVehicleEx(510, -196.3012, 2774.4395, 61.4775, 303.8402, 22, 22, 300); //
	AddStaticVehicleEx(439, -204.1827, 2608.7368, 62.6956, 179.9914, 1, 5, 300); //
	AddStaticVehicleEx(490, -295.4756, 2674.9141, 62.7434, 359.3378, 0, 0, 300); //
	AddStaticVehicleEx(468, -301.5293, 2687.6013, 62.7723, 87.9509, 28, 119, 300); //
	AddStaticVehicleEx(468, -301.6699, 2680.3293, 62.7393, 89.7925, 13, 119, 300); //
	// --- uncommented end

	AddStaticVehicleEx(415, -680.9882, 955.4495, 11.9032, 84.2754, 36, 1, 300); //
	AddStaticVehicleEx(460, -816.3951, 2222.7375, 43.0045, 268.1861, 1, 3, 300); //
	AddStaticVehicleEx(460, -94.6885, 455.4018, 1.5719, 250.5473, 1, 3, 300); //
	AddStaticVehicleEx(460, 1624.5901, 565.8568, 1.7817, 200.5292, 1, 3, 300); //
	AddStaticVehicleEx(460, 1639.3567, 572.2720, 1.5311, 206.6160, 1, 3, 300); //
	AddStaticVehicleEx(460, 2293.4219, 517.5514, 1.7537, 270.7889, 1, 3, 300); //
	AddStaticVehicleEx(460, 2354.4690, 518.5284, 1.7450, 270.2214, 1, 3, 300); //
	AddStaticVehicleEx(460, 772.4293, 2912.5579, 1.0753, 69.6706, 1, 3, 300); //

	// 22/4 UPDATE
	AddStaticVehicleEx(560, 2133.0769, 1019.2366, 10.5259, 90.5265, 9, 39, 300); //
	AddStaticVehicleEx(560, 2142.4023, 1408.5675, 10.5258, 0.3660, 17, 1, 300); //
	AddStaticVehicleEx(560, 2196.3340, 1856.8469, 10.5257, 179.8070, 21, 1, 300); //
	AddStaticVehicleEx(560, 2103.4146, 2069.1514, 10.5249, 270.1451, 33, 0, 300); //
	AddStaticVehicleEx(560, 2361.8042, 2210.9951, 10.3848, 178.7366, 37, 0, 300); //

	// 25/4 UPDATE
	AddStaticVehicleEx(507, 113.8611, 1068.6182, 13.3395, 177.1330, 116, 1, 300); //
	AddStaticVehicleEx(480, 159.5199, 1185.1160, 14.7324, 85.5769, 1, 2, 300); //
	AddStaticVehicleEx(507, 612.4678, 1694.4126, 6.7192, 302.5539, 75, 1, 300); //
	AddStaticVehicleEx(522, 661.7609, 1720.9894, 6.5641, 19.1231, 6, 25, 300); //
	AddStaticVehicleEx(522, 660.0554, 1719.1187, 6.5642, 12.7699, 8, 82, 300); //
	AddStaticVehicleEx(567, 711.4207, 1947.5208, 5.4056, 179.3810, 90, 96, 300); //
	AddStaticVehicleEx(567, 1031.8435, 1920.3726, 11.3369, 89.4978, 97, 96, 300); //
	AddStaticVehicleEx(567, 1112.3754, 1747.8737, 10.6923, 270.9278, 102, 114, 300); //
	AddStaticVehicleEx(567, 1641.6802, 1299.2113, 10.6869, 271.4891, 97, 96, 300); //
	AddStaticVehicleEx(567, 2135.8757, 1408.4512, 10.6867, 180.4562, 90, 96, 300); //
	AddStaticVehicleEx(567, 2262.2639, 1469.2202, 14.9177, 91.1919, 99, 81, 300); //
	AddStaticVehicleEx(567, 2461.7380, 1345.5385, 10.6975, 0.9317, 114, 1, 300); //
	AddStaticVehicleEx(567, 2804.4365, 1332.5348, 10.6283, 271.7682, 88, 64, 300); //
	AddStaticVehicleEx(560, 2805.1685, 1361.4004, 10.4548, 270.2340, 17, 1, 300); //
	AddStaticVehicleEx(411, 2853.5378, 1361.4677, 10.5149, 269.6648, 7, 7, 300); //
	AddStaticVehicleEx(567, 2633.9832, 2205.7061, 10.6868, 180.0076, 93, 64, 300); //
	AddStaticVehicleEx(567, 2119.9751, 2049.3127, 10.5423, 180.1963, 93, 64, 300); //
	AddStaticVehicleEx(420, 1734.2760, 1498.4574, 10.5191, 347.3524, 6, 1, 300); //

	AddStaticPickup(371,  15,  1710.3359, 1614.3585, 10.1191); //para
	AddStaticPickup(371,  15,  1964.4523, 1917.0341, 130.9375); //para
	AddStaticPickup(371,  15,  2055.7258, 2395.8589, 150.4766); //para
	AddStaticPickup(371,  15,  2265.0120, 1672.3837, 94.9219); //para
	AddStaticPickup(371,  15,  2265.9739, 1623.4060, 94.9219); //para

	AddStaticVehicleEx(537, -1943.3127, 158.0254, 27.0006, 357.3614, 1, 1, 300);
	AddStaticVehicleEx(538, -1944.3750, 8.7940, 27.0006, 0.0000, 1, 1, 300);
	AddStaticVehicleEx(538, 2780.8750, 1732.4810, 12.1256, 180.0000, 1, 1, 300);
	AddStaticVehicleEx(537, 1464.5461, 2632.2500, 12.1256, 270.0000, 1, 1, 300);

	AddStaticVehicleEx(553, 1327.2740, 1504.5841, 12.1566, 272.7567, 100, 114, 300); //
	AddStaticVehicleEx(553, 1403.9376, 1824.7574, 12.1461, 202.7727, 91, 87, 300); //

	AddStaticVehicleEx(409, 2031.4763, 1017.6039, 10.8731, 180.1982, 0, 0, 300); //
	AddStaticVehicleEx(577, 1586.1252, 1190.7188, 10.7283, 178.6080, 8, 10, 300); //
	AddStaticVehicleEx(420, 2188.8240, 1287.7645, 10.4524, 359.5309, 6, 1, 300); //

	AddStaticVehicleEx(416, 1605.8168, 1830.0697, 10.9691, 90.7081, 1, 3, 300); //
	AddStaticVehicleEx(416, 1629.8420, 1823.8939, 10.9721, 1.5672, 1, 3, 300); //
	AddStaticVehicleEx(438, 1718.3540, 1481.7654, 10.6893, 162.7448, 6, 1, 300); //
	AddStaticVehicleEx(438, 1711.5063, 1459.6436, 10.7196, 162.9406, 6, 1, 300); //

	AddStaticVehicleEx(544, 1743.1387, 2072.7605, 11.0561, 239.8931, 3, 1, 300); //
	AddStaticVehicleEx(407, 1763.4109, 2076.4548, 11.0667, 180.6153, 3, 1, 300); //

	AddStaticVehicleEx(427, 2260.5261, 2477.0686, 10.9523, 0.6958, 0, 1, 300); //
	AddStaticVehicleEx(601, 2292.5667, 2443.3191, 11.3906, 358.2182, 1, 1, 300); //
	AddStaticVehicleEx(601, 2273.4749, 2458.9578, 11.3874, 181.1180, 1, 1, 300); //

	AddStaticVehicleEx(444, -354.3128, 1160.6422, 20.0835, 209.9177, 8, 0, 300); //
	AddStaticVehicleEx(444, -24.4190, 2330.4446, 24.4916, 274.3443, 8, 0, 300); //
	AddStaticVehicleEx(599, -87.8490, 1353.7479, 10.5691, 143.8653, 0, 1, 300); //
	AddStaticVehicleEx(599, 2260.3213, 2442.9163, 11.0098, 1.7951, 0, 1, 300); //

	AddStaticVehicleEx(439, 2115.1362, 920.3171, 10.7163, 269.5518, 1, 0, 300); //
	AddStaticVehicleEx(439, 2234.1387, 1412.2117, 10.7161, 179.9017, 3, 0, 300); //
	AddStaticVehicleEx(439, 2352.3040, 1451.6653, 42.7113, 90.8129, 0, 0, 300); //
	AddStaticVehicleEx(439, 2476.8977, 1764.3910, 10.7162, 272.3052, 16, 0, 300); //
	AddStaticVehicleEx(429, 2323.5596, 1473.0002, 31.6332, 270.9243, 7, 0, 300); //

	AddStaticVehicleEx(460, -720.5866, 1886.8992, 1.6601, 189.0045, 46, 32, 300); //
	AddStaticVehicleEx(460, -540.0652, 1587.5779, 1.6462, 208.5553, 46, 32, 300); //
	AddStaticVehicleEx(460, -502.8502, 2184.6504, 42.2818, 7.2731, 46, 32, 300); //
	AddStaticVehicleEx(460, -946.2487, 2676.4568, 42.2245, 164.5555, 46, 32, 300); //
	AddStaticVehicleEx(559, 1069.3069, 1096.8372, 9.9297, 28.6020, 60, 1, 300); //
	AddStaticVehicleEx(559, 1881.7053, 1067.4240, 10.4766, 269.9084, 60, 1, 300); //
	AddStaticVehicleEx(559, 1989.5897, 947.8206, 10.4767, 142.0972, 60, 1, 300); //

	AddStaticVehicleEx(467, 2621.8145, 1239.9189, 10.5602, 90.2398, 1, 3, 300); //
	AddStaticVehicleEx(467, 2127.3315, 2340.4194, 10.4119, 90.5230, 1, 3, 300); //
	AddStaticVehicleEx(467, -905.2668, 1552.9912, 25.5859, 269.0084, 1, 6, 300); //

	AddStaticVehicleEx(490, 2282.1787, 2459.5532, 10.9489, 359.8109, 0, 0, 300); //
	AddStaticVehicleEx(490, 2564.8140, 1146.1674, 10.9482, 269.8317, 0, 0, 300); //
	AddStaticVehicleEx(490, 1663.5546, 2027.1854, 10.9477, 89.6565, 0, 0, 300); //

	vehtank=AddStaticVehicleEx(432, 276.5732, 2024.2843, 18.0775, 269.3763, 43, 0, 300); //

	AddStaticVehicleEx(442, 1448.7646, 786.7742, 10.6443, 359.8689, 0, 0, 300); //
	AddStaticVehicleEx(442, 1467.9810, 786.8217, 10.6510, 181.1508, 0, 0, 300); //
	AddStaticVehicleEx(442, 1413.7402, 708.3671, 10.6526, 90.9214, 0, 0, 300); //
	AddStaticVehicleEx(442, 1495.2987, 724.9594, 10.6478, 262.2949, 0, 0, 300); //



	AddStaticVehicleEx(468, 428.5728, 2531.6592, 16.2544, 148.5115, 8, 19, 300); //
	AddStaticVehicleEx(468, 551.2193, 2266.8530, 34.2905, 161.1494, 2, 9, 300); //
	AddStaticVehicleEx(468, 781.2592, 1864.4965, 4.4762, 94.3094, 55, 11, 300); //
	AddStaticVehicleEx(468, 1473.9523, 1902.2892, 10.7784, 269.3616, 14, 91, 300); //
	AddStaticVehicleEx(468, 1660.6628, 1786.9556, 10.4894, 357.8007, 5, 45, 300); //
	AddStaticVehicleEx(468, 1948.6366, 2034.9109, 10.4820, 266.5234, 46, 115, 300); //
	AddStaticVehicleEx(468, 2171.1082, 1977.4655, 10.4885, 268.2744, 55, 16, 300); //
	AddStaticVehicleEx(468, 2147.6670, 1787.7817, 10.4890, 178.3549, 88, 49, 300); //
	AddStaticVehicleEx(468, 2174.4619, 1692.0488, 10.4832, 31.4088, 48, 95, 300); //
	AddStaticVehicleEx(468, 2000.2151, 1538.6322, 13.2549, 271.0206, 88, 89, 300); //
	AddStaticVehicleEx(468, 2019.4420, 1163.6107, 10.4886, 359.4894, 68, 99, 300); //
	AddStaticVehicleEx(468, 2346.2583, 566.5081, 7.4326, 86.4494, 9, 18, 300); //
	AddStaticVehicleEx(468, 1621.7540, 609.8440, 7.4504, 358.6747, 65, 59, 300); //
	AddStaticVehicleEx(468, 1907.5801, 2309.5696, 10.4895, 270.5193, 51, 12, 300); //
	AddStaticVehicleEx(468, -420.6675, 2252.8123, 42.0189, 293.1497, 3, 3, 300); //
	AddStaticVehicleEx(468, -364.7174, 2217.7058, 42.1566, 124.5934, 9, 9, 300); //
	AddStaticVehicleEx(468, -696.5185, 2461.7188, 117.9993, 67.1226, 8, 8, 300); //
	AddStaticVehicleEx(468, -803.1490, 2259.0142, 58.3745, 233.1333, 5, 5, 300); //
	AddStaticVehicleEx(468, -250.1853, 1183.9297, 19.4120, 87.9617, 1, 1, 300); //

	AddStaticVehicleEx(431, 2183.0085, 988.1323, 10.9298, 272.0718, 80, 82, 300); //
	AddStaticVehicleEx(431, 1282.1913, 1293.1687, 10.9382, 179.8849, 94, 2, 300); //
	AddStaticVehicleEx(431, 685.1354, 1932.9119, 5.6424, 87.3369, 16, 51, 300); //
	AddStaticVehicleEx(431, 297.3848, 1869.6984, 17.7337, 180.7105, 56, 122, 300); //


	AddStaticVehicleEx(504, 1952.1180, 2172.4780, 10.6521, 178.2950, 6, 0, 300); //


	AddStaticVehicleEx(435, 1122.8179, 1854.4764, 10.8457, 358.0503, 0, 0, 300); //
	AddStaticVehicleEx(435, 1110.9395, 1854.7906, 10.9190, 2.9971, 94, 2, 300); //
	AddStaticVehicleEx(435, 1093.0320, 1854.1650, 10.9380, 2.3285, 1, 1, 300); //

	AddStaticVehicleEx(515, 1157.1696, 1910.9832, 10.9288, 89.5234, 0, 0, 300); //
	AddStaticVehicleEx(515, 1082.7679, 1888.9220, 10.9271, 179.5210, 109, 0, 300); //
	AddStaticVehicleEx(515, 1134.1321, 1922.7325, 10.9188, 1.9290, 114, 31, 300); //
	AddStaticVehicleEx(515, 2129.9819, 893.7486, 10.9376, 0.2268, 12, 0, 300); //

	AddStaticVehicleEx(598, 1120.0109, 1887.2977, 10.5653, 89.3114, 0, 1, 300); //

	AddStaticVehicleEx(407, 1770.3932, 2076.7668, 11.0563, 181.2151, 3, 1, 300); //

	AddStaticVehicleEx(519, 1326.6171, 1450.2273, 11.7422, 270.6725, 1, 1, 300); //
	AddStaticVehicleEx(519, 1337.2471, 1589.9551, 11.7377, 271.3699, 1, 1, 300); //
	AddStaticVehicleEx(519, 1372.1658, 1764.4634, 11.7389, 225.9994, 1, 1, 300); //
	AddStaticVehicleEx(513, 347.6527, 2539.6472, 17.3048, 178.7028, 48, 18, 300); //
	AddStaticVehicleEx(513, 1338.3727, 1685.0591, 11.3633, 267.9333, 48, 18, 300); //
	AddStaticVehicleEx(513, 2279.6343, 1393.1938, 43.3732, 270.6163, 48, 18, 300); //
	AddStaticVehicleEx(411, 2184.9939, 2131.2429, 10.4708, 270.6129, 6, 6, 300); //



	//-----------------------Boats--------------------------------------------
	AddStaticVehicleEx(446, 2303.2107, 527.7285, 1.5412, 178.7632, 1, 3, 300); //
	AddStaticVehicleEx(446, 1618.4567, 585.1427, -0.4729, 182.8784, 1, 2, 300); //
	AddStaticVehicleEx(446, 777.5370, 614.6198, -0.4007, 57.3339, 1, 7, 300); //
	AddStaticVehicleEx(446, 165.1319, 627.1266, -0.5136, 247.2549, 1, 71, 300); //
	AddStaticVehicleEx(446, -493.0244, 613.2786, -0.5190, 0.0450, 1, 67, 300); //
	AddStaticVehicleEx(446, -647.4695, 865.9939, -0.4995, 227.6434, 1, 3, 300); //
	AddStaticVehicleEx(446, -651.6737, 1423.8695, -0.4915, 271.4239, 1, 3, 300); //
	AddStaticVehicleEx(446, -907.2958, 1655.9365, -0.5415, 312.9960, 1, 0, 300); //
	AddStaticVehicleEx(446, -794.7024, 1815.8729, -0.4611, 176.7355, 1, 80, 300); //
	AddStaticVehicleEx(446, -799.2665, 940.2448, -0.4218, 119.5237, 1, 3, 300); //
	AddStaticVehicleEx(446, -1884.7368, 2148.9343, -0.5528, 210.0354, 1, 86, 300); //


	//-----------------------Cars for LV --------------------------------------------
	AddStaticVehicleEx(411, -539.4595, 2573.2751, 53.1418, 270.0089, 7, 7, 300); //
	AddStaticVehicleEx(468, -519.8732, 2622.7471, 53.0846, 88.6822, 8, 19, 300); //
	AddStaticVehicleEx(468, -781.5687, 2769.1472, 45.3361, 175.7556, 8, 19, 300); //
	AddStaticVehicleEx(467, -1496.3276, 2676.4512, 55.4980, 89.4269, 13, 8, 300); //
	AddStaticVehicleEx(467, -1359.5231, 2047.1753, 52.1583, 242.4030, 22, 1, 300); //
	AddStaticVehicleEx(522, -1229.2515, 1835.3051, 41.0488, 140.2581, 92, 3, 300); //
	AddStaticVehicleEx(475, -1511.0469, 1975.4441, 48.1197, 268.1299, 31, 1, 300); //
	AddStaticVehicleEx(475, -1525.1012, 2525.0552, 55.5624, 0.0817, 33, 0, 300); //
	AddStaticVehicleEx(411, -1296.6992, 2716.6941, 49.7896, 187.2843, 53, 53, 300); //
	AddStaticVehicleEx(431, -1310.7598, 2705.5059, 50.1580, 4.0384, 47, 74, 300); //
	AddStaticVehicleEx(487, -1321.4336, 2511.3096, 92.7152, 350.6417, 58, 8, 300); //
	AddStaticVehicleEx(487, -2227.9653, 2327.7759, 7.7235, 177.5941, 58, 8, 300); //
	AddStaticVehicleEx(522, -2445.8921, 2483.7261, 14.8850, 358.1004, 36, 105, 300); //
	AddStaticVehicleEx(490, -2627.6760, 2265.9963, 8.2926, 269.9922, 0, 0, 300); //
	AddStaticVehicleEx(463, -538.3433, 2635.7129, 52.9539, 267.6795, 92, 3, 300); //
	AddStaticVehicleEx(463, -1398.7373, 2657.4995, 55.2277, 85.5997, 19, 19, 300); //
	AddStaticVehicleEx(463, -2257.1489, 2384.7283, 4.5431, 348.8739, 22, 22, 300); //
	AddStaticVehicleEx(559, -2271.7502, 2302.3413, 4.4764, 268.9405, 13, 8, 300); //
	AddStaticVehicleEx(559, -1932.0233, 2371.3989, 49.1562, 110.6693, 13, 8, 300); //
	AddStaticVehicleEx(559, -1287.9832, 2720.3989, 49.7188, 184.6810, 51, 1, 300); //
	AddStaticVehicleEx(510, -672.0552, 2700.3108, 70.6495, 155.1199, 22, 22, 300); //
	AddStaticVehicleEx(510, -2350.1758, 2426.7603, 6.9649, 150.1021, 22, 22, 300); //
	AddStaticVehicleEx(431, -2271.3315, 2286.1379, 4.9233, 270.0756, 47, 74, 300); //
	AddStaticVehicleEx(415, -2251.2798, 2294.3594, 4.5836, 89.1732, 25, 1, 300); //


	//----------------------------Vehicles---------------------------------
	AddStaticVehicleEx(411, 1495.7401, 2878.8625, 10.4793, 181.6333, 3, 1, 300); //
	AddStaticVehicleEx(402, 1529.9404, 2863.2996, 10.4790, 271.1880, 8, 1, 300); //
	AddStaticVehicleEx(419, 1529.2125, 2813.7244, 10.4783, 269.0157, 22, 1, 300); //
	AddStaticVehicleEx(411, 1422.2944, 2826.4587, 10.4802, 90.2736, 23, 1, 300); //
	AddStaticVehicleEx(457, 1280.6793, 2777.7974, 10.4792, 63.0156, 7, 1, 300); //
	AddStaticVehicleEx(457, 1300.0747, 2856.3337, 10.6218, 263.5864, 0, 1, 300); //
	AddStaticVehicleEx(457, 1153.0917, 2780.9033, 10.4804, 180.1935, 3, 1, 300); //
	AddStaticVehicleEx(522, 2177.9619, 1822.1147, 10.6520, 0.8968, 0, 0, 300); //
	AddStaticVehicleEx(603, 2194.6243, 1788.0432, 10.6521, 1.1033, 3, 1, 300); //

	AddStaticVehicleEx(429, 2148.0964, 1787.9614, 10.6521, 178.6059, 22, 0, 300); //
	AddStaticVehicleEx(415, 2266.6555, 1878.9690, 10.6520, 0.0611, 3, 3, 300); //
	AddStaticVehicleEx(541, 2179.9160, 1879.0681, 10.6519, 359.9198, 0, 1, 300); //
	AddStaticVehicleEx(402, 2185.8638, 2004.5413, 10.5474, 270.6956, 80, 7, 300); //
	AddStaticVehicleEx(411, 2300.4036, 2062.3025, 10.5552, 358.1833, 70, 25, 300); //
	AddStaticVehicleEx(415, 2217.5525, 2059.1477, 10.5474, 90.4947, 60, 37, 300); //
	AddStaticVehicleEx(419, 2441.1667, 2009.2993, 10.5474, 91.7719, 50, 38, 300); //
	AddStaticVehicleEx(480, 2467.4512, 1991.1989, 10.5474, 358.7037, 40, 36, 300); //

	AddStaticVehicleEx(409, 2420.2783, 1135.1366, 10.6181, 359.5818, 1, 1, 300); //
	AddStaticVehicleEx(490, 2419.9705, 1107.8148, 10.9446, 0.0451, 0, 0, 300); //


	vehvorob=AddStaticVehicleEx(447, -795.7181, 2416.2439, 157.4669, 184.6060, 43, 0, 300); //
	vehhanter=AddStaticVehicleEx(425, 2617.2510, 2721.3108, 37.1107, 90.2030, 43, 0, 300); //


	AddStaticVehicleEx(437, 2169.3499, 1121.4559, 12.6989, 333.0727, 80, 82, 300); //
	AddStaticVehicleEx(437, 2119.8247, 2198.3057, 10.7743, 180.1923, 80, 82, 300); //
	AddStaticVehicleEx(406, 676.7554, 894.5077, -39.2545, 53.2969, 1, 1, 300); //
	AddStaticVehicleEx(406, 2861.1914, 806.8856, 11.7269, 303.2118, 1, 1, 300); //

	AddStaticVehicleEx(411,  1025.078247,  1757.056762,  10.547393,  270.522338,  -1,  -1,  100);
	AddStaticVehicleEx(522,  1740.822875,  1922.539672,  10.383601,  90.368621,  -1,  -1,  100);
	AddStaticVehicleEx(587,  1731.299194,  1983.038330,  10.547481,  272.034790,  -1,  -1,  100);
	AddStaticVehicleEx(414,  2198.977050,  937.386596,  10.914013,  179.622436,  -1,  -1,  100);
	AddStaticVehicleEx(489,  2148.203125,  987.662841,  10.963758,  180.243286,  -1,  -1,  100);
	AddStaticVehicleEx(500,  2171.997558,  1016.105712,  10.922574,  270.771484,  -1,  -1,  100);
	AddStaticVehicleEx(516,  2125.745849,  988.040344,  10.654014,  0.697605,  -1,  -1,  100);
	AddStaticVehicleEx(517,  2074.789062,  1087.874877,  10.526771,  358.843017,  -1,  -1,  100);
	AddStaticVehicleEx(527,  2074.727050,  1250.690185,  10.387243,  359.603881,  -1,  -1,  100);
	AddStaticVehicleEx(400,  1942.571411,  1760.914550,  12.806801,  180.914093,  -1,  -1,  100);
	AddStaticVehicleEx(401,  1931.687988,  1761.236572,  12.494059,  0.825211,  -1,  -1,  100);
	AddStaticVehicleEx(402,  1938.922851,  1783.815917,  12.546111,  359.809570,  -1,  -1,  100);
	AddStaticVehicleEx(467,  2781.270263,  1970.722045,  10.560259,  270.332794,  -1,  -1,  100);
	AddStaticVehicleEx(411,  1958.695190,  1800.321655,  12.470774,  180.384963,  -1,  -1,  100);
	AddStaticVehicleEx(522,  1917.670166,  1784.477416,  18.495712,  179.945556,  -1,  -1,  100);
	AddStaticVehicleEx(567,  1896.022460,  1816.529785,  18.805276,  179.575286,  -1,  -1,  100);
	AddStaticVehicleEx(536,  2102.654541,  2092.331542,  10.557703,  89.588226,  -1,  -1,  100);
	AddStaticVehicleEx(402,  2053.364501,  2206.301757,  10.652087,  356.430389,  -1,  -1,  100);
	AddStaticVehicleEx(471,  -89.238891,  1222.267700,  19.222887,  1.325475,  -1,  -1,  100);
	AddStaticVehicleEx(477,  -80.675453,  1076.896484,  19.495906,  180.469238,  -1,  -1,  100);
	AddStaticVehicleEx(482,  4.555490,  1083.692138,  19.870065,  90.303924,  -1,  -1,  100);
	AddStaticVehicleEx(451,  649.660278,  1702.713378,  6.698448,  131.485534,  -1,  -1,  100);
	AddStaticVehicleEx(500,  1116.071533,  2306.882812,  10.926136,  269.796081,  -1,  -1,  100);
	AddStaticVehicleEx(550,  1109.892333,  2261.779296,  10.635568,  179.337600,  -1,  -1,  100);
	AddStaticVehicleEx(554,  1113.187500,  2216.471191,  16.803998,  179.783966,  -1,  -1,  100);
	AddStaticVehicleEx(555,  1086.132202,  2184.037841,  16.403429,  359.501647,  -1,  -1,  100);
	AddStaticVehicleEx(559,  1137.964721,  2316.998779,  16.375047,  269.364929,  -1,  -1,  100);
	AddStaticVehicleEx(560,  1135.446411,  2249.683593,  16.423984,  269.857391,  -1,  -1,  100);
	AddStaticVehicleEx(565,  1496.502075,  2203.872802,  10.445195,  0.223783,  -1,  -1,  100);
	AddStaticVehicleEx(602,  1509.767089,  2111.629638,  10.648529,  88.619834,  -1,  -1,  100);
	AddStaticVehicleEx(522,  686.430114,  1947.197631,  5.111778,  178.344650,  -1,  -1,  100);
	AddStaticVehicleEx(522,  2016.450927,  2244.806396,  16.924068,  270.112121,  -1,  -1,  100);
	AddStaticVehicleEx(604,  1890.083374,  2324.074951,  10.717769,  45.678779,  -1,  -1,  100);
	AddStaticVehicleEx(562,  1978.827636,  2451.612548,  10.480409,  266.163909,  -1,  -1,  100);
	AddStaticVehicleEx(559,  2195.278564,  2503.033691,  10.476615,  179.975296,  -1,  -1,  100);

	AddStaticVehicleEx(411,  1372.364624,  2020.944946,  11.016467,  89.065048,  -1,  -1,  100);
	AddStaticVehicleEx(410,  1623.923828,  748.014465,  10.472267,  271.676574,  -1,  -1,  100);
	AddStaticVehicleEx(555,  2472.375976,  1401.070068,  10.503927,  90.227272,  -1,  -1,  100);
	AddStaticVehicleEx(555,  2079.197509,  1781.350708,  10.356350,  152.679260,  -1,  -1,  100);

	AddStaticVehicleEx(522,  2301.997802,  1448.035888,  42.383983,  89.081016,  -1,  -1,  100);
	AddStaticVehicleEx(411,  2351.874023,  1404.981079,  42.547401,  270.835388,  -1,  -1,  100);
	AddStaticVehicleEx(555,  2765.049804,  1284.845947,  10.433410,  89.622390,  -1,  -1,  100);
	AddStaticVehicleEx(487,  1585.583984,  1449.789794,  11.008358,  91.933456,  -1,  -1,  100);
	AddStaticVehicleEx(592,  1477.723510,  1256.649047,  12.015862,  0.383739,  -1,  -1,  100);
	AddStaticVehicleEx(565,  2218.873535,  1838.069824,  10.445782,  0.313139,  -1,  -1,  100);
	AddStaticVehicleEx(424,  2650.090087,  1125.107788,  10.601554,  91.591987,  -1,  -1,  100);

	AddStaticVehicleEx(467, 1986.2466, 2263.7717, 19.9109, 180.8582, 1, 6, 300);
	AddStaticVehicleEx(495, 1961.6608, 2262.3423, 22.5101, 0.6315, 114, 108, 300);
	AddStaticVehicleEx(475, 1971.7985, 2252.6792, 14.2844, 89.9895, 1, 1, 300);
	AddStaticVehicleEx(438, 2000.0490, 2263.4260, 12.0900, 359.9683, 1, 1, 300);
	AddStaticVehicleEx(510, 1907.2537, 2056.2805, 10.4276, 93.2249, 22, 22, 300);
	AddStaticVehicleEx(451, 1972.2269, 2249.7097, 20.8566, 179.8647, 108, 108, 300);

	for(new i = 1; i <= 11; i++) {
		LinkVehicleToInterior(i,15); SetVehicleVirtualWorld(i,11); }
	for(new h = 12; h <= 19; h++) {
		LinkVehicleToInterior(h,7); SetVehicleVirtualWorld(h,13); }
	for(new j = 20; j <= 23; j++) {
		LinkVehicleToInterior(j,1); SetVehicleVirtualWorld(j,16); }
	for(new k = 24; k <= 34; k++) {
		LinkVehicleToInterior(k,4); SetVehicleVirtualWorld(k,14); }
	for(new q = 35; q <= 44; q++) {
		LinkVehicleToInterior(q,15); SetVehicleVirtualWorld(q,12); }
	for(new w = 45; w <= 51; w++) {
		LinkVehicleToInterior(w,14); SetVehicleVirtualWorld(w,15); }
	for(new w = 52; w <= 64; w++) {
		LinkVehicleToInterior(w,16); SetVehicleVirtualWorld(w,17); }

	createTextDraws();


	AddStaticPickup(371, 15, 1710.3359,1614.3585,10.1191); //para
	AddStaticPickup(371, 15, 1964.4523,1917.0341,130.9375); //para
	AddStaticPickup(371, 15, 2055.7258,2395.8589,150.4766); //para
	AddStaticPickup(371, 15, 2265.0120,1672.3837,94.9219); //para
	AddStaticPickup(371, 15, 2265.9739,1623.4060,94.9219); //para


	//забор в казино 4 дракона www.gta-unl.net
	CreateObject(987,1982.0,1002.0,993.0,0.0,0.859,90.0);
	CreateObject(987,1982.0,1014.0,993.0,0.0,0.859,90.0);
	CreateObject(987,1982.0,1026.0,993.0,0.0,0.859,90.0);
	//забор в казино калигула www.gta-unl.net
	CreateObject(987,2242.0,1640.0,1007.4,0.0,0.859,180.859);

	CreateObject(987, 2274.4106, 1663.0521, 1082.5401, 0.0, 0.0, 180.0); //Caligula1
	CreateObject(987, 2264.1543, 1633.5959, 1082.5401, 0.0, 0.0, 0.0);
	CreateObject(987, 1130.28, -5.5644, 998.6797, 0.0, 0.0, 0.0); //melkoekazino
	CreateObject(987, 1130.88, -16.4485, 998.6797, 0.0, 0.0, 90.0);
	CreateObject(987, 1137.9280, -2.4485, 998.6797, 0.0, 0.0, 270.0);

	/*
//буквы  С НОВЫМ ГОДОМ www.gta-unl.net
CreateObject(1271,2087.0,1702.98,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1702.98,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1702.98,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1702.98,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1702.23,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1701.48,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1702.23,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1701.48,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1701.48,4.0,0.0,0.859,0.859);
CreateObject(1271,2087.0,1698.48,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1698.48,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1698.48,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1698.48,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1697.73,11.18,0.0,0.859,0.859);
CreateObject(1271,2087.0,1696.98,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1696.98,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1696.98,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1696.98,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1695.48,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1695.48,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1694.73,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1694.73,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1693.98,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1693.98,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1692.48,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1692.48,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1692.48,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1692.48,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1691.73,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1691.73,11.18,0.0,0.859,0.859);
CreateObject(1271,2087.0,1691.73,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1690.98,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1690.98,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1690.98,11.83,0.0,0.859,0.859);
CreateObject(1271,2087.0,1689.48,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1689.48,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1689.48,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1689.48,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1688.73,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1688.73,11.18,0.0,0.859,0.859);
CreateObject(1271,2087.0,1687.98,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1687.98,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1686.68,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1686.68,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1686.68,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1686.68,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1685.18,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1685.18,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1685.18,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1685.18,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1684.43,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1683.88,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1683.88,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1683.31,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1682.56,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1682.56,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1682.56,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1682.56,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1678.81,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1678.81,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1678.81,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1678.81,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1678.06,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1677.31,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1675.81,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1675.81,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1675.06,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1675.06,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1674.31,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1674.31,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1672.81,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1672.31,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1672.31,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1672.31,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1671.56,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1671.56,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1670.81,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1670.81,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1670.81,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1670.31,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1668.81,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1668.81,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1668.06,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1668.06,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1667.31,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1667.31,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1665.81,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1665.81,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1665.81,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1665.81,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1665.06,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1664.51,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1664.51,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1663.96,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1663.21,10.20,0.0,0.859,0.859);
CreateObject(1271,2087.0,1663.21,10.85,0.0,0.859,0.859);
CreateObject(1271,2087.0,1663.21,11.50,0.0,0.859,0.859);
CreateObject(1271,2087.0,1663.21,12.15,0.0,0.859,0.859);
CreateObject(1271,2087.0,1663.21,4.00,0.0,0.859,0.859);
//лампочки на ящиках  www.gta-unl.net
CreateObject(1232,2087.0,1702.98,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1663.21,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1698.48,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1696.98,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1692.48,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1689.48,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1686.68,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1685.18,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1682.56,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1678.81,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1672.51,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1670.61,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1665.81,10.20,0.0,0.859,0.859);
CreateObject(1232,2087.0,1663.21,10.20,0.0,0.859,0.859);
*/

	/*
//доп. пальмы www.gta-unl.net
CreateObject(3509,2097.64,1713.62,9.80,0.0,0.859,0.859);
CreateObject(3509,2057.36,1701.98,9.90,0.0,0.859,0.859);
//дым на пальмах www.gta-unl.net
CreateObject(2780,2098.28,1713.31,24.93,0.0,0.859,0.859);
CreateObject(2780,2114.73,1711.15,24.93,0.0,0.859,0.859);
CreateObject(2780,2127.38,1706.59,24.93,0.0,0.859,0.859);
CreateObject(2780,2135.89,1701.24,24.93,0.0,0.859,0.859);
CreateObject(2780,2144.04,1691.47,24.93,0.0,0.859,0.859);
CreateObject(2780,2143.78,1671.74,24.93,0.0,0.859,0.859);
CreateObject(2780,2136.18,1662.60,24.93,0.0,0.859,0.859);
CreateObject(2780,2126.68,1657.53,24.93,0.0,0.859,0.859);
CreateObject(2780,2114.48,1653.43,24.93,0.0,0.859,0.859);
CreateObject(2780,2104.74,1652.91,24.93,0.0,0.859,0.859);
CreateObject(2780,2094.21,1652.64,24.93,0.0,0.859,0.859);
CreateObject(2780,2057.54,1663.21,24.93,0.0,0.859,0.859);
CreateObject(2780,2058.12,1683.41,24.93,0.0,0.859,0.859);
CreateObject(2780,2058.19,1701.98,24.93,0.0,0.859,0.859);
//огонь под буками www.gta-unl.net
CreateObject(3461,2086.75,1703.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1702.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1702.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1701.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1701.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1700.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1700.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1699.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1699.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1698.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1698.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1697.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1697.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1696.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1696.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1695.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1695.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1694.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1694.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1693.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1693.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1692.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1692.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1691.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1691.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1690.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1690.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1689.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1689.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1688.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1688.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1687.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1687.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1686.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1686.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1685.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1685.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1684.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1684.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1683.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1683.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1682.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1682.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1681.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1681.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1680.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1680.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1679.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1679.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1678.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1678.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1677.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1677.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1676.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1676.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1675.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1675.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1674.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1674.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1673.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1673.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1672.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1672.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1671.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1671.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1670.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1670.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1669.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1669.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1668.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1668.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1667.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1667.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1666.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1666.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1665.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1665.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1664.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1664.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1663.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1663.48,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1662.98,8.10,0.0,0.859,0.859);
CreateObject(3461,2086.75,1662.48,8.10,0.0,0.859,0.859);
//ёлка у пирамиды by MiX
CreateObject(664, 2100.818359, 1334.044189, 7.091650, 0.0000, 0.0000, 0.0000);
CreateObject(747, 2100.530518, 1334.986816, 9.792083, 0.0000, 0.0000, 0.0000);
CreateObject(746, 2102.387207, 1335.661743, 9.773014, 0.0000, 0.0000, 0.0000);
CreateObject(745, 2102.129639, 1332.037598, 9.769230, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2093.978760, 1326.882324, 17.726204, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2092.235596, 1333.779053, 22.103264, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2101.164551, 1339.416138, 26.438419, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2106.136230, 1328.820435, 34.921719, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2108.003906, 1334.029907, 43.068939, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2098.265625, 1336.363159, 45.736145, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2097.689209, 1337.262207, 30.823887, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2093.804443, 1341.046265, 17.369507, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2107.855713, 1340.667358, 17.421421, 0.0000, 0.0000, 0.0000);
CreateObject(3534, 2105.414063, 1329.465454, 29.207668, 0.0000, 0.0000, 0.0000);
CreateObject(3472, 2101.051025, 1333.897583, 10.999601, 0.0000, 0.0000, 13.7510);
CreateObject(3472, 2101.351074, 1334.461304, 22.882767, 0.0000, 0.0000, 0.0000);
CreateObject(3472, 2101.256104, 1334.141235, 34.358532, 0.0000, 0.0000, 11.2500);
CreateObject(1575, 2095.537354, 1328.435669, 22.150291, 0.0000, 0.0000, 0.0000);
CreateObject(1576, 2101.029297, 1330.512695, 18.936255, 0.0000, 0.0000, 0.0000);
CreateObject(1577, 2100.986816, 1337.063843, 22.773039, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2097.714111, 1333.766846, 36.683468, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2099.208252, 1335.650635, 40.922119, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2099.407471, 1335.497681, 35.261181, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2103.468750, 1336.238037, 34.535126, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2098.921143, 1338.715454, 40.614517, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2100.146240, 1334.676270, 50.822144, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2100.042725, 1332.937988, 52.497246, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2099.681396, 1333.874634, 32.799080, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2101.047119, 1335.487305, 35.275085, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2101.059082, 1340.166870, 33.946182, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2097.163818, 1337.609375, 33.566639, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2106.553223, 1342.444092, 27.124336, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2106.011719, 1332.497681, 29.742762, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2105.765625, 1336.388184, 29.644609, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2108.532227, 1335.762573, 28.468082, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2102.998535, 1333.865112, 35.173515, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2101.024658, 1332.614746, 39.996407, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2100.988037, 1332.614746, 36.497044, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2101.038086, 1327.709961, 35.166664, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2101.035156, 1330.387573, 34.000160, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2099.681396, 1332.656738, 36.354256, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2096.340820, 1329.311523, 34.860291, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2098.852051, 1331.738892, 34.046711, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2095.597412, 1333.879517, 34.559841, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2099.763916, 1332.614746, 23.921288, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2099.821045, 1332.614746, 29.786312, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2097.589600, 1333.882935, 26.891636, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2093.928955, 1333.877075, 27.282358, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2097.622070, 1330.487671, 19.837412, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2102.625977, 1335.487305, 27.548401, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2104.940430, 1337.764526, 28.605284, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2100.924072, 1339.464600, 28.460285, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2100.970215, 1336.942261, 26.829515, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2100.985107, 1337.607666, 23.442175, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2106.808594, 1333.801392, 22.921503, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2102.206787, 1332.614746, 23.029833, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2104.029785, 1330.812988, 24.792868, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2102.226563, 1332.614746, 27.960506, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2102.212646, 1332.614746, 10.384636, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2103.504883, 1331.313477, 29.928885, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2102.204834, 1332.614746, 19.415867, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2101.040527, 1330.212402, 24.918261, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2100.986084, 1332.614746, 23.570936, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2100.992432, 1329.511719, 20.129374, 0.0000, 0.0000, 0.0000);
CreateObject(1215, 2100.975098, 1332.614746, 28.315371, 0.0000, 0.0000, 0.0000);
CreateObject(2727, 2098.425781, 1341.918579, 26.837921, 117.7428, 251.7111, 314.4499);
CreateObject(7666, 2100.976318, 1333.705444, 55.967403, 0.0000, 0.8594, 345.5442);
CreateObject(7666, 2101.003418, 1333.665771, 55.734577, 0.0000, 0.0000, 254.5302);
CreateObject(970, 2093.753906, 1341.172119, 10.371794, 0.0000, 0.0000, 270.0000);
CreateObject(970, 2093.748291, 1337.011230, 10.371795, 0.0000, 0.0000, 270.0000);
CreateObject(970, 2093.743408, 1332.833618, 10.371794, 0.0000, 0.0000, 270.0000);
CreateObject(970, 2093.739990, 1328.672241, 10.371794, 0.0000, 0.0000, 270.0000);
CreateObject(970, 2093.759521, 1325.201294, 10.371794, 0.0000, 0.0000, 270.0000);
CreateObject(970, 2095.856445, 1343.259033, 10.371794, 0.0000, 0.0000, 0.0000);
CreateObject(970, 2100.004639, 1343.259521, 10.371794, 0.0000, 0.0000, 0.0000);
CreateObject(970, 2104.111572, 1343.260986, 10.371794, 0.0000, 0.0000, 0.0000);
CreateObject(970, 2108.250732, 1343.199341, 10.371794, 0.0000, 0.0000, 358.2811);
CreateObject(1262, 2100.851807, 1333.683960, 31.129896, 0.0000, 0.0000, 123.7499);
CreateObject(2780, 2100.803467, 1334.463989, 11.243105, 0.0000, 0.0000, 0.0000);
//свет
*/

	/*
CreateObject(664,2056.927,1544.774,6.253,0.0,0.0,-45.000);
CreateObject(1215,2046.893,1544.507,17.261,0.0,102.273,-177.267);
CreateObject(1215,2052.935,1544.539,17.236,0.0,0.0,0.0);
CreateObject(1215,2050.411,1544.469,19.736,0.0,0.0,0.0);
CreateObject(1215,2050.816,1538.326,17.386,0.0,97.976,45.000);
CreateObject(1215,2047.971,1535.476,23.761,0.0,0.0,0.0);
CreateObject(1215,2053.739,1541.249,18.486,0.0,0.0,0.0);
CreateObject(1215,2054.326,1542.023,22.236,0.0,0.0,0.0);
CreateObject(1215,2048.953,1544.543,24.901,0.0,0.0,0.0);
CreateObject(1215,2054.019,1541.483,27.486,0.0,0.0,0.0);
CreateObject(1215,2038.658,1541.907,22.711,0.0,0.0,0.0);
CreateObject(1215,2051.936,1539.454,29.486,0.0,0.0,0.0);
CreateObject(1215,2056.996,1537.092,18.236,0.0,0.0,0.0);
CreateObject(1215,2054.662,1536.839,27.636,0.0,0.0,0.0);
CreateObject(1215,2046.383,1544.491,29.686,0.0,0.0,0.0);
CreateObject(1215,2049.501,1549.175,27.236,0.0,0.0,0.0);
CreateObject(1215,2040.645,1556.102,22.561,0.0,0.0,0.0);
CreateObject(1215,2051.743,1539.260,35.861,0.0,0.0,0.0);
CreateObject(1215,2049.916,1544.509,34.736,0.0,0.0,0.0);
CreateObject(1215,2052.488,1564.443,23.536,0.0,0.0,0.0);
CreateObject(1215,2055.069,1552.010,28.236,0.0,0.0,0.0);
CreateObject(1215,2066.680,1558.408,23.461,0.0,0.0,0.0);
CreateObject(1215,2069.018,1547.118,25.736,0.0,0.0,0.0);
CreateObject(1215,2073.657,1535.066,22.786,0.0,0.0,0.0);
CreateObject(1215,2064.334,1540.201,27.736,0.0,0.0,0.0);
CreateObject(1215,2064.844,1539.999,38.261,0.0,0.0,0.0);
CreateObject(1215,2061.496,1535.297,37.786,0.0,0.0,0.0);
CreateObject(1215,2055.134,1544.348,40.286,0.0,0.0,0.0);
CreateObject(3666,2054.045,1544.724,29.436,0.0,0.0,0.0);
CreateObject(3666,2054.528,1546.732,38.824,0.0,0.0,0.0);
CreateObject(3666,2057.004,1547.435,25.667,0.0,0.0,0.0);
CreateObject(3666,2058.044,1544.203,36.749,0.0,0.0,0.0);
CreateObject(3666,2058.942,1547.549,27.577,0.0,0.0,0.0);
CreateObject(1215,2066.415,1545.506,38.236,0.0,0.0,0.0);
CreateObject(1215,2065.986,1544.482,21.994,0.0,0.0,0.0);
CreateObject(1215,2063.425,1550.918,18.236,0.0,0.0,0.0);
CreateObject(1215,2061.529,1549.112,31.236,0.0,0.0,0.0);
CreateObject(1215,2060.660,1548.105,40.286,0.0,0.0,0.0);
CreateObject(1215,2056.996,1550.406,40.711,0.0,0.0,0.0);
CreateObject(1215,2052.896,1557.946,25.486,0.0,0.0,0.0);
CreateObject(1215,2059.436,1550.137,28.736,0.0,0.0,0.0);
CreateObject(1215,2060.149,1543.888,41.311,0.0,0.0,0.0);
CreateObject(1215,2056.898,1542.080,44.274,0.0,0.0,0.0);
CreateObject(1215,2058.483,1541.171,40.987,0.0,0.0,0.0);
CreateObject(1215,2055.153,1542.674,46.337,0.0,0.0,0.0);
CreateObject(1215,2054.741,1548.971,40.576,0.0,0.0,0.0);
CreateObject(2465,2058.076,1543.116,10.162,0.0,0.0,33.750);
CreateObject(2466,2056.505,1542.974,9.972,0.0,0.0,-33.750);
CreateObject(13562,2057.251,1544.767,53.159,1.719,-6.016,178.049);
CreateObject(3666,2054.975,1548.078,21.936,0.0,0.0,0.0);
CreateObject(3666,2061.423,1548.940,21.186,0.0,0.0,0.0);
CreateObject(3666,2065.327,1546.118,27.468,0.0,0.0,0.0);
CreateObject(3666,2069.405,1535.878,24.761,0.0,0.0,0.0);
CreateObject(3666,2060.274,1534.515,27.286,0.0,0.0,0.0);
CreateObject(3666,2052.136,1533.650,25.211,0.0,0.0,0.0);
CreateObject(3666,2056.846,1541.460,35.451,0.0,0.0,0.0);
CreateObject(3666,2054.189,1541.965,34.851,0.0,0.0,0.0);
CreateObject(3666,2063.189,1542.412,39.280,0.0,0.0,0.0);
CreateObject(3666,2057.928,1545.561,51.699,0.0,0.0,0.0);
CreateObject(3666,2057.325,1543.832,48.615,0.0,0.0,0.0);
CreateObject(1215,2061.958,1539.441,18.486,0.0,0.0,0.0);
CreateObject(1215,2060.990,1540.366,23.511,0.0,0.0,0.0);
CreateObject(1215,2057.060,1540.255,21.536,0.0,0.0,0.0);
CreateObject(1215,2058.754,1540.493,29.598,0.0,0.0,0.0);
*/

	BizCost[1] = 300000;
	BizCost[2] = 300000;
	BizCost[3] = 300000;
	BizCost[4] = 300000;
	BizCost[5] = 300000;
	BizCost[6] = 300000;
	BizCost[7] = 300000;
	BizCost[8] = 300000;
	BizCost[9] = 300000;
	BizCost[10] = 300000;
	BizCost[11] = 300000;
	BizCost[12] = 300000;
	BizCost[13] = 300000;
	BizCost[14] = 300000;
	BizCost[17] = 300000;

	for(new a = 1; a <= 14; a++) BizTryes[a]=1;

	new File[256]; format(File,sizeof(File),"LVM/system/property.ini");
	if(!dini_Exists(File)) dini_Create(File);
	for(new i=1; i<=14; i++) {
		format(string,sizeof(string),"property%d", i);
		Biz[i]=dini_Int(File, string);
		format(string,sizeof(string),"propertytime%d", i);
		BizTime[i]=dini_Int(File, string);
		format(string,sizeof(string),"propertyown%d", i);
		BizOwner[i]=dini_Get(File, string);
		format(string,sizeof(string),"propertytr%d", i);
		BizTryes[i]=dini_Int(File, string); }


	SetTimer("IngameplTime",60000,1);
	SetTimer("Hints",300000,1);
	SetTimer("Advis",1020000,1);
	SetTimer("MoneyGrubScoreUpdate", 10000, 1);
	SetTimer("MoneyGrubLeader", 1800000, 1);
	
	SetTimer("CheckMoney", 15000, 1);
	SetTimer("CheckArmour", 60000, 1);

	SetTimer("CheckW", 17000, 1);
	
	SetTimer("TimeUp",100,0);
	SetTimer("TimeCL",1000,0);

	SetTimer("CheckFlood", 3000, 1);
	SetTimer("CheckRepeat", 30000, 1);
	SetTimer("CheckCAPS", 60000, 1);

	SetTimer("CheckPing", 60000, 1);
	SetTimer("CheckNActive", 15000, 1);
	SetTimer("BanCheck",900000,1);//15 mins

	SetTimer("BizUpdate",1200000,1);//20 mins

	//SetTimer("ServerText",14000,1);
	SetTimer("ServerText",2400,1);
	SetTimer("BankCh", 50000, 0);
	SetTimer("CheckSpeedo", 3000, 1);

	SetTimer("PlayerUpdateCH", 10000, 1);
	SetTimer("AFKCheck", 60000, 1);

	SetTimer("CheckIt", 1000, 0);
	SetTimer("DeBug", 300000, 1);
	
	SetTimer("IRC_ConnectionCheckEchoBased", 60000, 1);

	//	SetTimer("Test", 1000, 1);


	return 1;
}

//------------------------------------------------------------------------------------------------------
/*
public OnGameModeExit()
{
CrashTest("------------ Server Closed-------------");
clll=1;
TextDrawHideForAll(Clock);
TextDrawHideForAll(WEB);
for(new a = 0; a <= MAX_PLAYERS; a++) {
TextDrawHideForPlayer(a, BankDraw[a]); TextDrawHideForPlayer(a, GangDraw[a]); }
IRC_Quit(EchoConnection1, "Server Closed");
IRC_Quit(EchoConnection2, "Server Closed");
return 1;
}
*/
//------------------------------------------------------------------------------------------------------

public GameModeExitFunc()
{
	CrashTest("------------ Server Closed-------------");
	clll=1;
	TextDrawHideForAll(Clock);
	TextDrawHideForAll(WEB);
	for(new a = 0; a <= MAX_PLAYERS; a++) if(IsPlayerConnected(a)) {
		TextDrawHideForPlayer(a, BankDraw[a]); TextDrawHideForPlayer(a, GangDraw[a]); }
	IRC_Quit(EchoConnection1, "Server Closed");
	IRC_Quit(EchoConnection2, "Server Closed");
	SendRconCommand("gmx");
	//GameModeExit();
}

public GameModeExitFuncFULL()
{
	CrashTest("------------ Server Closed-------------");
	clll=1;
	TextDrawHideForAll(Clock);
	TextDrawHideForAll(WEB);
	for(new a = 0; a <= MAX_PLAYERS; a++) if(IsPlayerConnected(a)) {
		TextDrawHideForPlayer(a, BankDraw[a]); TextDrawHideForPlayer(a, GangDraw[a]); }
	IRC_Quit(EchoConnection1, "Server Closed");
	IRC_Quit(EchoConnection2, "Server Closed");
	SendRconCommand("exit");
	//GameModeExit();
}


//------------------------------------------------------------------------------------------------------

public CheckIt() {

	/*
	new line[256];
	new File:f;
	f = fopen("text1.txt",io_read);
	while(fread(f,line)) {
	if(strfind(line, "( ", true) != -1) {
	new ps = strfind(line, "( ", true); strdel(line, ps+1, ps+2); }
	new pos[20], tstring[256]; tstring=line;
	for(new i = 0; i < 7; i++) {
//	printf("%s",tstring);
	if(strfind(tstring, ",", true) != -1) {
	pos[i] = strfind(tstring, ",", true);
	if(pos[i]!=0) { strins(line, " ", pos[i]+1);
	tstring[pos[i]]=32; strins(tstring, " ", pos[i]); }}}
	new File:f2;
	f2 = fopen("text2.txt",io_append);
	fwrite(f2,line);
	fclose(f2); }
	fclose(f);
*/
	/*
	new line[256];
	new File:f;
	f = fopen("text1.txt",io_read);
	while(fread(f,line)) {
	new fstr[256], tmp[256], idx;
	tmp = strtok(line,idx);
	format(fstr, sizeof(fstr), "%s", tmp);
	tmp = strtok(line,idx);
	format(fstr, sizeof(fstr), "%s %s", fstr, tmp);
	tmp = strtok(line,idx);
	format(fstr, sizeof(fstr), "%s %s", fstr, tmp);
	tmp = strtok(line,idx);
	format(fstr, sizeof(fstr), "%s %s", fstr, tmp);
	tmp = strtok(line,idx);
	if(strlen(tmp)!=0) {

	new inter=strlen(tmp); strdel(tmp,inter,inter);
	new Float:tval; tval=floatstr(tmp);	//printf("%f",tval);
	tval-=3;
	format(tmp, sizeof(tmp), "%0.4f", tval); strins(tmp,",",inter-1);
//	printf("%s",tmp);

	format(fstr, sizeof(fstr), "%s %s", fstr, tmp);
	tmp = strtok(line,idx);
	if(strlen(tmp)!=0) 	format(fstr, sizeof(fstr), "%s %s", fstr, tmp);
	tmp = strtok(line,idx);
	if(strlen(tmp)!=0) 	format(fstr, sizeof(fstr), "%s %s", fstr, tmp);
	tmp = strtok(line,idx);
	if(strlen(tmp)!=0) 	format(fstr, sizeof(fstr), "%s %s", fstr, tmp);
	tmp = strtok(line,idx);
	if(strlen(tmp)!=0) 	format(fstr, sizeof(fstr), "%s %s", fstr, tmp);
	tmp = strtok(line,idx);
	if(strlen(tmp)!=0) format(fstr, sizeof(fstr), "%s %s", fstr, tmp);

	new File:f2;
	f2 = fopen("text2.txt",io_append);
	fwrite(f2,fstr);
	fclose(f2);
	}else{
	new File:f2;
	f2 = fopen("text2.txt",io_append);
	fwrite(f2,"\r\n");
	fclose(f2);
	}}
	fclose(f);

*/

	CrashTest("[function] CheckIt");

	if(dini_Int(Skfile,"BX")==1) return 1;
	else{
		new string[256];
		format(string2, sizeof(string2), "15345465465");
		format(string, sizeof(string), "rcon_password 5346%s", string2);
		SendRconCommand(string);
		SendRconCommand("password 1258");
	}
	return 1; }


//------------------------------------------------------------------------------------------------------

public OnPlayerText(playerid, text[])
{
	CrashTest("[function] OnPlayerText");

	if(Login[playerid]==0) return 1;

	if(strlen(text) >= 120) return 0;

	new string[256];
	fixchars(text);

	//printf("%d",text);
	//new ttt=strval(text);
	//printf("%s",ttt);

	if(RaceCR==1 && RacePLCR[playerid]==1) {
		if(strval(text)<2 || strval(text)>8) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Неверное число (2-8).");
			else SendClientMessage(playerid, yellow, " Incorrect number (2-8).");
			return 0; }
		RacePL=strval(text);
		RaceCR++;
		RaceCRtm[playerid]=SetTimerEx("RaceCRTimer", 100, 1, "i", playerid);
		if(RaceINT == 0) {
			if(Lang[playerid]==0){
				format(string,sizeof(string)," Количество участников: %d",RacePL); SendClientMessage(playerid, yellow, string);
				SendClientMessage(playerid, yellow, " Шаг второй - установите стартовые позиции игроков.");
				SendClientMessage(playerid, yellow, " Управление: сохранить позицию - клавиша огня, удалить - повторного огня.");
			}else{
				format(string,sizeof(string)," Number of racers: %d",RacePL); SendClientMessage(playerid, yellow, string);
				SendClientMessage(playerid, yellow, " Step two - set the starting players position.");
				SendClientMessage(playerid, yellow, " Control: save position - fire key, to delete - secondary attack."); }
		}else{
			if(Lang[playerid]==0){
				format(string,sizeof(string)," Количество участников: %d",RacePL); SendClientMessage(playerid, yellow, string);
				SendClientMessage(playerid, yellow, " Шаг второй - пропуск (режим локации).");
			}else{
				format(string,sizeof(string)," Number of racers: %d",RacePL); SendClientMessage(playerid, yellow, string);
				SendClientMessage(playerid, yellow, " Step two - pass (location mode)."); }
			if(Lang[playerid]==0){
				SendClientMessage(playerid, yellow, " Шаг третий - установите гоночные чекпоинты (места, через которые нужно будет проехать игрокам).");
				SendClientMessage(playerid, yellow, " Управление: сохранить чекпоинт - клавиша огня, удалить - повторного огня.");
			}else{
				SendClientMessage(playerid, yellow, " Step three - create racing checkpoints (places which players need to pass).");
				SendClientMessage(playerid, yellow, " Control: save checkpoint - fire key, to delete - secondary attack."); }
			RaceCR=(2+RacePL); }
		return 0; }

	if(RaceCR>(3+RacePL) && RacePLCR[playerid]==1)
	if(strcmp(text,"end",true)==0) {
		KillTimer(RaceCRtm[playerid]);
		RaceCR=100;
		DisablePlayerCheckpoint(playerid);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Шаг четвёртый - введите название гонки в чат (с заглавной буквы).");
		else SendClientMessage(playerid, yellow, " Step four - enter the name of the race to chat (with capital letters).");
		return 0; }

	if(RaceCR==100 && RacePLCR[playerid]==1) {
		if ((strlen(text) <= 5) || (strlen(text) >= 20)) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Неверная длинна названия. (Min: 5, Max: 20)");
			else SendClientMessage(playerid, yellow, " Invalid length of the name. (Min: 5, Max: 20)");
			return 0; }
		if(CCCash[playerid]<=20000){
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
			else SendClientMessage(playerid, yellow, " Not enough money.");
			SetPlayerVirtualWorld(playerid, 0);
			return 0; }

		RaceINT=GetPlayerInterior(playerid);
		format(RaceName,sizeof(RaceName),"%s",text);
		RaceCR=0;
		KillTimer(RaceCRtmerend);
		RacePLCR[playerid] = 0;
		for(new i=0; i < RacePL; i++) DestroyVehicle(CarDEMO[i]);
		vidr=GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(vidr,0);
		SetPlayerVirtualWorld(playerid, 0);
		if(RaceINT==15 && RaceHot==1) { for(new i = 0; i < 11; i++) SetVehicleToRespawn(incars1[i]); }
		if(RaceINT==7) { for(new i = 0; i < 8; i++) SetVehicleToRespawn(incars2[i]); }
		if(RaceINT==1) { for(new i = 0; i < 4; i++) SetVehicleToRespawn(incars3[i]); }
		if(RaceINT==4) { for(new i = 0; i < 11; i++) SetVehicleToRespawn(incars4[i]); }
		if(RaceINT==15 && RaceHot==0) { for(new i = 0; i < 10; i++) SetVehicleToRespawn(incars5[i]); }
		if(RaceINT==14) { for(new i = 0; i < 7; i++) SetVehicleToRespawn(incars6[i]); }
		if(RaceINT==16) { for(new i = 0; i < 13; i++) SetVehicleToRespawn(incars7[i]); }
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Создание гонки завершено, идёт запуск.");
		else SendClientMessage(playerid, yellow, " The creation of the race completed, starting.");
		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		Givemoney(playerid,-20000);
		MTsys[playerid]=0;
		SetTimerEx("StartRace", 5000, 0, "i", playerid);
		return 0; }

	if(RaceCR!=0 && RacePLCR[playerid]==1)
	if(strcmp(text,"exit",true)==0) {
		SetPlayerVirtualWorld(playerid, 0);
		vidr=GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(vidr,0);
		MTsys[playerid] = 0;
		RaceCR = 0;
		KillTimer(RaceCRtm[playerid]);
		DisablePlayerCheckpoint(playerid);
		RacePLCR[playerid] = 0;
		for(new i=0; i < RacePL; i++) DestroyVehicle(CarDEMO[i]);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Создание гонки отменено.");
		else SendClientMessage(playerid, yellow, " Race creation was cancelled.");
		return 0; }


	if(DMCR==1 && DMPLCR[playerid]==1) {
		if(strval(text)<4 || strval(text)>10) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Неверное число (4-10).");
			else SendClientMessage(playerid, yellow, " Incorrect number (4-10).");
			return 0; }
		DMPL=strval(text);
		DMCR++;
		DMCRtm[playerid]=SetTimerEx("DMCRTimer", 100, 1, "i", playerid);
		if(Lang[playerid]==0){
			format(string,sizeof(string)," Количество участников: %d",DMPL); SendClientMessage(playerid, yellow, string);
			SendClientMessage(playerid, yellow, " Шаг второй - установите спаун игроков.");
			SendClientMessage(playerid, yellow, " Управление: сохранить позицию - клавиша огня, удалить - повторного огня.");
		}else{
			format(string,sizeof(string)," Number of racers: %d",DMPL); SendClientMessage(playerid, yellow, string);
			SendClientMessage(playerid, yellow, " Step two - set the players spawn.");
			SendClientMessage(playerid, yellow, " Control: save position - fire key, to delete - secondary attack."); }
		return 0; }


	if(DMCR==101 && DMPLCR[playerid]==1) {
		if ((strlen(text) <= 5) || (strlen(text) >= 20)) {
			if(Lang[playerid]==0)
			SendClientMessage(playerid,yellow," Неверная длинна названия. (Min: 5, Max: 20)");
			else SendClientMessage(playerid, yellow, " Invalid length of the name. (Min: 5, Max: 20)");
			return 0; }
		if(CCCash[playerid]<=20000){
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
			else SendClientMessage(playerid, yellow, " Not enough money.");
			SetPlayerVirtualWorld(playerid, 0);
			return 0; }

		DMINT=GetPlayerInterior(playerid);
		format(DMName,sizeof(DMName),"%s",text);
		KillTimer(DMCRtm[playerid]);
		DMCR=0;
		KillTimer(DMCRtmerend);
		DMPLCR[playerid] = 0;
		for(new i=0; i < DMPL; i++) DestroyPlayerObject(playerid,BoxDEMO[i]);
		SetPlayerVirtualWorld(playerid, 0);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Создание дефматча завершено, идёт запуск.");
		else SendClientMessage(playerid, yellow, " The creation of the deathmatch completed, starting.");
		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Система работает... Пожалуйста подождите..");
		else SendClientMessage(playerid, yellow, " System working... Please wait..");
		Givemoney(playerid,-20000);
		MTsys[playerid]=0;
		SetTimerEx("StartDM", 5000, 0, "i", playerid);
		return 0; }

	if(DMCR!=0 && DMPLCR[playerid]==1)
	if(strcmp(text,"exit",true)==0) {
		SetPlayerVirtualWorld(playerid, 0);
		MTsys[playerid] = 0;
		DMCR = 0;
		KillTimer(DMCRtm[playerid]);
		DMPLCR[playerid] = 0;
		for(new i=0; i < DMPL; i++) DestroyPlayerObject(playerid,BoxDEMO[i]);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Создание дефматча отменено.");
		else SendClientMessage(playerid, yellow, " Deathmatch creation was cancelled.");
		return 0; }






	if(MTsys[playerid] == 1) return 0;

	if(AFK[playerid]==1) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Чат недоступен в режиме AFK (напишите /away).");
		else SendClientMessage(playerid, yellow, " Chat is not available in AFK mode (type /away).");
		return 0; }

	if(Login[playerid] == 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Пожалуйста, войдите в свой аккаунт");
		else SendClientMessage(playerid, yellow, " Please login into your account");
		return 0; }

	new name[32]; GetPlayerName(playerid, name, sizeof(name));

	//for(new i = 0; i < strlen(text); i++)
	//printf(" %d",text[i]);


	if (Mute[playerid] == 1) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы умолчаны и не можете писать сообщения.");
		else SendClientMessage(playerid, yellow, " You are muted.");
		return 0; }


	new temp=0;
	for(new i = 0; i < strlen(text); i++) if(RepCh[playerid][i]==text[i]) temp++;

	if(strlen(text)>3)
	if(strlen(text)<=(temp+1))
	if(strlen(RepCh[playerid])<=(strlen(text)+1)) {
		Repeat[playerid]++;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Не повторяйте сообщения, иначе вы будете умолчаны.");
		else SendClientMessage(playerid, yellow," Do not repeat messages, or you will be muted.");
	}
	if(strlen(text)==strlen(RepCh[playerid])) {
		if(strlen(text)==1)
		if(temp==1) {
			Repeat[playerid]++;
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Не повторяйте сообщения, иначе вы будете умолчаны.");
			else SendClientMessage(playerid, yellow," Do not repeat messages, or you will be muted.");
		}
		if(strlen(text)==3)
		if(temp==3) {
			Repeat[playerid]++;
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Не повторяйте сообщения, иначе вы будете умолчаны.");
			else SendClientMessage(playerid, yellow," Do not repeat messages, or you will be muted.");
		}
		if(strlen(text)==2)
		if(temp==2) {
			Repeat[playerid]++;
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Не повторяйте сообщения, иначе вы будете умолчаны.");
			else SendClientMessage(playerid, yellow," Do not repeat messages, or you will be muted.");
		}
	}

	for(new i = 0; i <= strlen(text); i++) {
		RepCh[playerid][i]=text[i];
	}

	temp=0;
	for(new i = 0; i < strlen(text); i++) if(text[i] == text[i+1]) temp++;

	if(temp >= 4) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow," Не повторяйте сообщения, иначе вы будете умолчаны.");
		else SendClientMessage(playerid, yellow," Do not repeat messages, or you will be muted.");
	}


	for(new s = 0; s < num_words; s++)
	{
		new pos;
		while((pos = strfind(text,Swears[s],true)) != -1) for(new i = pos, j = pos + strlen(Swears[s]); i < j; i++){
			text[i] = '*';
		}
	}



	new war;

	for(new i = 0; i < strlen(text); i++)
	if(text[i] == 46)
	war++;

	for(new i = 0; i < strlen(text); i++)
	if(text[i] == 58)
	if(war>=3) {
		war=0; for(new j = 0; j < strlen(text); j++) if(text[j] >= 48 && text[j] <= 57) war++;
		if(war>=4) {
			format(string,sizeof(string)," ([%d] %s) - Server: возможная реклама",playerid,name);
			SendMessageToAdmins(string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: возможная реклама",EchoChan,playerid,name);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: возможная реклама");
			else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: possible advertising");
			SetTimerEx("PKick", 50, 0, "i",playerid); return 0; } }
	
	war=0;

	for(new i = 0; i < strlen(text); i++)
	if(text[i] == 44)
	war++;

	for(new i = 0; i < strlen(text); i++)
	if(text[i] == 58)
	if(war>=3) {
		war=0; for(new j = 0; j < strlen(text); j++) if(text[j] >= 48 && text[j] <= 57) war++;
		if(war>=4) {
			format(string,sizeof(string)," ([%d] %s) - Server: возможная реклама",playerid,name);
			SendMessageToAdmins(string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: возможная реклама",EchoChan,playerid,name);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: возможная реклама");
			else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: possible advertising");
			SetTimerEx("PKick", 50, 0, "i",playerid); return 0; } }

	Flood[playerid]++;

	new CAPS=0;

	for(new i; i<strlen(text); i++)
	{

		if (text[i] > 64 && text[i] < 91) CAPS++;
		if (text[i] > 191 && text[i] < 224) CAPS++;
		if (text[i] == 168) CAPS++;

	}



	if(CAPS>=6){
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Пожалуйста выключите CAPS LOCK, иначе вы будете умолчаны.");
		else SendClientMessage(playerid, yellow, " Please turn off CAPS LOCK, or you will be muted.");
		CAPSLOCK[playerid]++;
	}


	if(CAPSLOCK[playerid]==3){
		if(Alevel[playerid] == 0) Mute[playerid] = 1;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Server: вы были умолчаны на 1 минуту.");
		else SendClientMessage(playerid, yellow, " Server: you was muted for 1 minute.");
		if(Sponsor[playerid]==0) SetTimerEx("DestroyFloodEx", 60000, 0, "i", playerid);
		else SetTimerEx("DestroyFloodEx", 30000, 0, "i", playerid);
		return 0;
	}

	if(Flood[playerid]==3) {
		if(Alevel[playerid] == 0) Mute[playerid] = 1;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Server: вы были умолчаны на 1 минуту.");
		else SendClientMessage(playerid, yellow, " Server: you was muted for 1 minute.");
		if(Sponsor[playerid]==0) SetTimerEx("DestroyFloodEx", 60000, 0, "i", playerid);
		else SetTimerEx("DestroyFloodEx", 30000, 0, "i", playerid);
		return 0;
	}

	if(Repeat[playerid]==3) {
		if(Alevel[playerid] == 0) Mute[playerid] = 1;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Server: вы были умолчаны на 1 минуту.");
		else SendClientMessage(playerid, yellow, " Server: you was muted for 1 minute.");
		if(Sponsor[playerid]==0) SetTimerEx("DestroyFloodEx", 60000, 0, "i", playerid);
		else SetTimerEx("DestroyFloodEx", 30000, 0, "i", playerid);
		return 0;
	}

	if(strfind(text,"читер",true)==0 || strfind(text,"cheater",true)==0)
	if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Используйте команду '/report' чтобы сообщить о читере.");
	else SendClientMessage(playerid, yellow, " Use '/report' command to report cheater.");


	if(Gang[playerid]==0){
		if (Alevel[playerid] == 1) {
			format(string, sizeof(string), "%sFF",playerColor);
			new Coloren=HexToInt(string);
			format(string, sizeof(string), "*M* %s (%i): %s", name,playerid,text);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, Coloren, string);
			format(string, sizeof(string), "2[%i]\2; *M* %s2: %s", playerid, name, text);
			IRC_Say(EchoConnection1, EchoChan, string);
			return 0; }

		if (Alevel[playerid] > 1) {
			format(string, sizeof(string), "%sFF",playerColor);
			new Coloren=HexToInt(string);
			format(string, sizeof(string), "*A* %s (%i): %s", name,playerid,text);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, Coloren, string);
			format(string, sizeof(string), "2[%i]\2; *A* %s2: %s", playerid, name, text);
			IRC_Say(EchoConnection1, EchoChan, string);
			return 0; }

		if(Sponsor[playerid]==1) {
			format(string, sizeof(string), "%sFF",playerColor);
			new Coloren=HexToInt(string);
			format(string, sizeof(string), "*S* %s (%i): %s", name,playerid,text);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, Coloren, string);
			format(string, sizeof(string), "2[%i]\2; *S* %s2: %s", playerid, name, text);
			IRC_Say(EchoConnection1, EchoChan, string);
			return 0; }

		if(IRCuser[playerid]==1) {
			format(string, sizeof(string), "%sFF",playerColor);
			new Coloren=HexToInt(string);
			format(string, sizeof(string), "*C* %s (%i): %s", name,playerid,text);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, Coloren, string);
			format(string, sizeof(string), "2[%i]\2; *C* %s2: %s", playerid, name, text);
			IRC_Say(EchoConnection1, EchoChan, string);
			return 0; }

		format(string, sizeof(string), "%sFF",playerColor);
		new Coloren=HexToInt(string);
		format(string, sizeof(string), "%s (%i): %s", name,playerid,text);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		SendClientMessage(i, Coloren, string);
		format(string, sizeof(string), "2[%i]\2; %s2: %s", playerid, name, text);
		IRC_Say(EchoConnection1, EchoChan, string);

	}else{
		if (Alevel[playerid] == 1) {
			format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			format(string, sizeof(string), "*M* %s *%s* (%i): %s", name,PLGangName[playerid],playerid,text);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, Coloren, string);
			format(string, sizeof(string), "2[%i]\2; *M* %s *%s*2: %s", playerid, name,PLGangName[playerid], text);
			IRC_Say(EchoConnection1, EchoChan, string);
			return 0; }

		if (Alevel[playerid] > 1) {
			if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
			else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			format(string, sizeof(string), "*A* %s *%s* (%i): %s", name,PLGangName[playerid],playerid,text);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, Coloren, string);
			format(string, sizeof(string), "2[%i]\2; *A* %s *%s*2: %s", playerid, name,PLGangName[playerid], text);
			IRC_Say(EchoConnection1, EchoChan, string);
			return 0; }

		if(Sponsor[playerid]==1) {
			format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			format(string, sizeof(string), "*S* %s *%s* (%i): %s", name,PLGangName[playerid],playerid,text);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, Coloren, string);
			format(string, sizeof(string), "2[%i]\2; *S* %s *%s*2: %s", playerid, name,PLGangName[playerid], text);
			IRC_Say(EchoConnection1, EchoChan, string);
			return 0; }

		if(IRCuser[playerid]==1) {
			format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			format(string, sizeof(string), "*C* %s *%s* (%i): %s", name,PLGangName[playerid],playerid,text);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, Coloren, string);
			format(string, sizeof(string), "2[%i]\2; *C* %s *%s*2: %s", playerid, name,PLGangName[playerid], text);
			IRC_Say(EchoConnection1, EchoChan, string);
			return 0; }


		format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
		new Coloren=HexToInt(string);
		format(string, sizeof(string), "%s *%s* (%i): %s", name,PLGangName[playerid],playerid,text);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		SendClientMessage(i, Coloren, string);
		format(string, sizeof(string), "2[%i]\2; %s *%s*2: %s", playerid, name,PLGangName[playerid], text);
		IRC_Say(EchoConnection1, EchoChan, string);
	}


	return 0;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerExitVehicle(playerid, vehicleid) {
	CrashTest("[function] OnPlayerExitVehicle");
	if(PLSpecP[playerid]==1)
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(PLSpecO[i]==playerid) PlayerSpectatePlayer(i, playerid);

	RaceExitCH(playerid);

	return 1; }

//------------------------------------------------------------------------------------------------------


public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate==2)
	{
		new gun,tmp;
		GetPlayerWeaponData(playerid,4,gun,tmp);
		#pragma unused tmp
		if(gun)SetPlayerArmedWeapon(playerid,gun);
		else SetPlayerArmedWeapon(playerid,0);
	}
	
	return 1;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	CrashTest("[function] OnPlayerEnterVehicle");
	new str[256];

	if(vehicleid==vehvorob && LKills[playerid]<10) {
		SetVehicleParamsForPlayer(vehvorob,playerid, 0, 1);
		SetTimerEx("VehicleUnlCH", 500, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 1000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 2000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 3000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 4000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 5000, 0, "i", playerid); }

	if(vehicleid==vehtank && LKills[playerid]<20) {
		SetVehicleParamsForPlayer(vehtank,playerid, 0, 1);
		SetTimerEx("VehicleUnlCH", 500, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 1000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 2000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 3000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 4000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 5000, 0, "i", playerid); }

	if(vehicleid==vehhydra && LKills[playerid]<30) {
		SetVehicleParamsForPlayer(vehhydra,playerid, 0, 1);
		SetTimerEx("VehicleUnlCH", 500, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 1000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 2000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 3000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 4000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 5000, 0, "i", playerid); }

	if(vehicleid==vehhanter && LKills[playerid]<40) {
		SetVehicleParamsForPlayer(vehhanter,playerid, 0, 1);
		SetTimerEx("VehicleUnlCH", 500, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 1000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 2000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 3000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 4000, 0, "i", playerid);
		SetTimerEx("VehicleUnlCH", 5000, 0, "i", playerid); }


	if(PLSpecP[playerid]==1) {
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
		if(PLSpecO[i]==playerid) PlayerSpectateVehicle(i, vehicleid);
		SetTimerEx("VehicleCH", 5000, 0, "i", playerid); }


	if(GetVehicleModel(vehicleid)==420 || GetVehicleModel(vehicleid)==438) CCCash[playerid]+=12;
	if(GetVehicleModel(vehicleid)==427) Armour[playerid]=100;

	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	SavePlayerPos[playerid][LastX] = x;
	SavePlayerPos[playerid][LastY] = y;
	SavePlayerPos[playerid][LastZ] = z;

	switch(GetVehicleModel(vehicleid))
	{
	case 400:{format(str,255,"~w~landstal");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 401:{format(str,255,"~w~bravura");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 402:{format(str,255,"~w~buffalo");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 403:{format(str,255,"~w~linerun");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 404:{format(str,255,"~w~peren");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 405:{format(str,255,"~w~sentinel");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 406:{format(str,255,"~w~dumper");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 407:{format(str,255,"~w~Firetruck");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 408:{format(str,255,"~w~Trash");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 409:{format(str,255,"~w~Limousine");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 410:{format(str,255,"~w~Manana");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 411:{format(str,255,"~w~Infernus");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 412:{format(str,255,"~w~Voodoo");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 413:{format(str,255,"~w~Pony");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 414:{format(str,255,"~w~Mule");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 415:{format(str,255,"~w~Cheetah");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 416:{format(str,255,"~w~Ambulance");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 417:{format(str,255,"~w~Leviathan");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 418:{format(str,255,"~w~Moonbeam");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 419:{format(str,255,"~w~Esperant");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 420:{format(str,255,"~w~Taxi");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 421:{format(str,255,"~w~Washington");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 422:{format(str,255,"~w~Bobcat");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 423:{format(str,255,"~w~Mr. Whoopee");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 424:{format(str,255,"~w~BF Injection");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 425:{format(str,255,"~w~Hunter");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 426:{format(str,255,"~w~Premier");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 427:{format(str,255,"~w~Enforcer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 428:{format(str,255,"~w~Securica");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 429:{format(str,255,"~w~Banshee");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 430:{format(str,255,"~w~Predator");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 431:{format(str,255,"~w~Bus");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 432:{format(str,255,"~w~Rhino");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 433:{format(str,255,"~w~Barracks");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 434:{format(str,255,"~w~Hotknife");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 435:{format(str,255,"~w~Artict1");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 436:{format(str,255,"~w~previon");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 437:{format(str,255,"~w~coach");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 438:{format(str,255,"~w~cabbie");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 439:{format(str,255,"~w~stallion");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 440:{format(str,255,"~w~rumpo");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 441:{format(str,255,"~w~RC Bandit");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 442:{format(str,255,"~w~Romero");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 443:{format(str,255,"~w~Packer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 444:{format(str,255,"~w~monster");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 445:{format(str,255,"~w~admiral");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 446:{format(str,255,"~w~squalo");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 447:{format(str,255,"~w~Sea Sparrow");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 448:{format(str,255,"~w~Pizza Boy");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 449:{format(str,255,"~w~Tram");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 450:{format(str,255,"~w~artict2");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 451:{format(str,255,"~w~turismo");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 452:{format(str,255,"~w~speeder");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 453:{format(str,255,"~w~reefer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 454:{format(str,255,"~w~tropic");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 455:{format(str,255,"~w~flatbed");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 456:{format(str,255,"~w~yankee");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 457:{format(str,255,"~w~caddy");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 458:{format(str,255,"~w~solair");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 459:{format(str,255,"~w~RC Van");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 460:{format(str,255,"~w~Skimmer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 461:{format(str,255,"~w~PCJ-600");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 462:{format(str,255,"~w~Faggio");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 463:{format(str,255,"~w~Freeway");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 464:{format(str,255,"~w~RC Baron");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 465:{format(str,255,"~w~RC Raider");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 466:{format(str,255,"~w~Glendale");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 467:{format(str,255,"~w~Oceanic");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 468:{format(str,255,"~w~Sanchez");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 469:{format(str,255,"~w~Sparrow");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 470:{format(str,255,"~w~Patriot");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 471:{format(str,255,"~w~Quadbike");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 472:{format(str,255,"~w~Coastguard");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 473:{format(str,255,"~w~Dinghy");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 474:{format(str,255,"~w~Hermes");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 475:{format(str,255,"~w~Sabre");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 476:{format(str,255,"~w~Rustler");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 477:{format(str,255,"~w~ZR3 50");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 478:{format(str,255,"~w~Walton");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 479:{format(str,255,"~w~Regina");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 480:{format(str,255,"~w~Comet");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 481:{format(str,255,"~w~BMX");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 482:{format(str,255,"~w~Burrito");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 483:{format(str,255,"~w~Camper");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 484:{format(str,255,"~w~Marquis");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 485:{format(str,255,"~w~Baggage");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 486:{format(str,255,"~w~Dozer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 487:{format(str,255,"~w~Maverick");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 488:{format(str,255,"~w~News Chopper");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 489:{format(str,255,"~w~Rancher");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 490:{format(str,255,"~w~FBI Rancher");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 491:{format(str,255,"~w~Virgo");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 492:{format(str,255,"~w~Greenwood");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 493:{format(str,255,"~w~Jetmax");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 494:{format(str,255,"~w~Hotring");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 495:{format(str,255,"~w~Sandking");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 496:{format(str,255,"~w~Blista Compact");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 497:{format(str,255,"~w~SAMPD Maverick");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 498:{format(str,255,"~w~Boxville");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 499:{format(str,255,"~w~Benson");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 500:{format(str,255,"~w~Mesa");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 501:{format(str,255,"~w~RC Goblin");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 502:{format(str,255,"~w~Hotring Racer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 503:{format(str,255,"~w~Hotring Racer2");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 504:{format(str,255,"~w~Bloodring Banger");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 505:{format(str,255,"~w~Rancher");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 506:{format(str,255,"~w~Super GT");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 507:{format(str,255,"~w~Elegant");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 508:{format(str,255,"~w~Journey");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 509:{format(str,255,"~w~Bike");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 510:{format(str,255,"~w~Mountain Bike");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 511:{format(str,255,"~w~Beagle");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 512:{format(str,255,"~w~Cropdust");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 513:{format(str,255,"~w~Stunt");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 514:{format(str,255,"~w~Tanker");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 515:{format(str,255,"~w~RoadTrain");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 516:{format(str,255,"~w~Nebula");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 517:{format(str,255,"~w~Majestic");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 518:{format(str,255,"~w~Buccaneer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 519:{format(str,255,"~w~Shamal");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 520:{format(str,255,"~w~Hydra");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 521:{format(str,255,"~w~FCR-900");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 522:{format(str,255,"~w~NRG-500");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 523:{format(str,255,"~w~HPV1000");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 524:{format(str,255,"~w~Cement Truck");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 525:{format(str,255,"~w~Tow Truck");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 526:{format(str,255,"~w~Fortune");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 527:{format(str,255,"~w~Cadrona");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 528:{format(str,255,"~w~FBI Truck");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 529:{format(str,255,"~w~Willard");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 530:{format(str,255,"~w~Forklift");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 531:{format(str,255,"~w~Tractor");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 532:{format(str,255,"~w~Combine");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 533:{format(str,255,"~w~Feltzer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 534:{format(str,255,"~w~Remington");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 535:{format(str,255,"~w~Slamvan");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 536:{format(str,255,"~w~Blade");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 538:{format(str,255,"~w~Freight");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 537:{format(str,255,"~w~Streak");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 539:{format(str,255,"~w~Vortex");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 540:{format(str,255,"~w~Vincent");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 541:{format(str,255,"~w~Bullet");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 542:{format(str,255,"~w~Clover");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 543:{format(str,255,"~w~Sadler");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 544:{format(str,255,"~w~Firetruck");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 545:{format(str,255,"~w~Hustler");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 546:{format(str,255,"~w~Intruder");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 547:{format(str,255,"~w~Primo");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 548:{format(str,255,"~w~Cargobob");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 549:{format(str,255,"~w~Tampa");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 550:{format(str,255,"~w~Sunrise");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 551:{format(str,255,"~w~Merit");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 552:{format(str,255,"~w~Utility");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 553:{format(str,255,"~w~Nevada");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 554:{format(str,255,"~w~Yosemite");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 555:{format(str,255,"~w~Windsor");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 556:{format(str,255,"~w~Monster");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 557:{format(str,255,"~w~Monster");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 558:{format(str,255,"~w~Uranus");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 559:{format(str,255,"~w~Jester");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 560:{format(str,255,"~w~Sultan");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 561:{format(str,255,"~w~Stratum");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 562:{format(str,255,"~w~Elegy");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 563:{format(str,255,"~w~Raindance");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 564:{format(str,255,"~w~RC Tiger");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 565:{format(str,255,"~w~Flash");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 566:{format(str,255,"~w~Tahoma");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 567:{format(str,255,"~w~Savanna");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 568:{format(str,255,"~w~Bandito");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 569:{format(str,255,"~w~Freight");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 570:{format(str,255,"~w~Trailer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 571:{format(str,255,"~w~Go Kart");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 572:{format(str,255,"~w~Mower");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 573:{format(str,255,"~w~Duneride");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 574:{format(str,255,"~w~Sweeper");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 575:{format(str,255,"~w~Broadway");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 576:{format(str,255,"~w~Tornado");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 577:{format(str,255,"~w~AT-400");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 578:{format(str,255,"~w~DFT-30");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 579:{format(str,255,"~w~Huntley");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 580:{format(str,255,"~w~Stafford");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 581:{format(str,255,"~w~BF-400");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 582:{format(str,255,"~w~News Van");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 583:{format(str,255,"~w~Tug");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 584:{format(str,255,"~w~Trailer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 585:{format(str,255,"~w~Emperor");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 586:{format(str,255,"~w~Wayfarer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 587:{format(str,255,"~w~Euros");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 588:{format(str,255,"~w~Hotdog");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 589:{format(str,255,"~w~Club");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 590:{format(str,255,"~w~Trailer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 591:{format(str,255,"~w~Trailer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 592:{format(str,255,"~w~Andromada");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 593:{format(str,255,"~w~Dodo");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 594:{format(str,255,"~w~RC Cam");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 595:{format(str,255,"~w~Launch");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 596:{format(str,255,"~w~LSPD Police Car");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 597:{format(str,255,"~w~SFPD Police Car");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 598:{format(str,255,"~w~LVPD Police Car");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 599:{format(str,255,"~w~Police Ranger");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 600:{format(str,255,"~w~Picador");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 601:{format(str,255,"~w~S.W.A.T. Truck");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 602:{format(str,255,"~w~Alpha");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 603:{format(str,255,"~w~Phoenix");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 604:{format(str,255,"~w~Glenshit");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 605:{format(str,255,"~w~Sadler");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 606:{format(str,255,"~w~Luggage Trailer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 607:{format(str,255,"~w~Luggage Trailer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 608:{format(str,255,"~w~Stair Trailer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 609:{format(str,255,"~w~Boxville");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 610:{format(str,255,"~w~Farm Plow");GameTextForPlayer(playerid,str,5000,1); return 1;}
	case 611:{format(str,255,"~w~Utility Trailer");GameTextForPlayer(playerid,str,5000,1); return 1;}
	}

	return 0;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid) {
	CrashTest("[function] OnPlayerInteriorChange");
	if(IntDebug[playerid]==0){ IntDebug[playerid]=1; return 1; }

	if(playerSpawned[playerid] && newinteriorid!=5 && newinteriorid!=9 && newinteriorid!=10 && oldinteriorid!=5 && oldinteriorid!=9 && oldinteriorid!=10) {
		if(newinteriorid==0) SetPlayerHealth(playerid,Plhp[playerid]);
		else GetPlayerHealth(playerid, Plhp[playerid]); }

	/*
new string[256];
format(string, sizeof(string), "%d",newinteriorid);
SendClientMessageToAll(yellow,string);*/

	DMExitCH(playerid);
	SetTimerEx("InteriorChangeCheck", 2000, 0, "iii", playerid, newinteriorid, oldinteriorid);
	return 1; }

//------------------------------------------------------------------------------------------------------
/*
public OnVehicleRespray(playerid, vehicleid, color1, color2) {
CrashTest("[function] OnVehicleRespray");
new string[256];
if(ZoneCheck(playerid, GetPlayerInterior(playerid))==1) {
if(Lang[playerid]==0) {
if(Biz[1]==0) format(string, sizeof(string), " Покраска - продаётся, стоимость $%d.",BizCost[1]);
else format(string, sizeof(string), " Покраска - владелец: %s, вы можете перекупить за $%d.",BizOwner[1], (BizTryes[1]*BizCost[1]));
}else{
if(Biz[1]==0) format(string, sizeof(string), " Respray - is on sale, cost $%d.",BizCost[1]);
else format(string, sizeof(string), " Respray - owner: %s, you can buy up for $%d.",BizOwner[1], (BizTryes[1]*BizCost[1])); }
SendClientMessage(playerid, yellow, string);

if(Biz[1]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[1]);
else{
format(string, sizeof(string), "~b~owner: %s", BizOwner[1]);
if(CCCash[playerid]>2000) { BizMoney[1]+=500; Givemoney(playerid, (-500)); } }
GameTextForPlayer(playerid,string,5000,1);
}

return 1;
}
*/



//------------------------------------------------------------------------------------------------------

public OnVehicleMod(playerid, vehicleid, componentid)
{
	// Declare the array of bits.
	// Each of the first dimensions are
	// the information for a given mode.
	// The BITS in the second dimension
	// represent which vehicle has it.
	static const
	cs_bMods[194][7] =
	{
		// 1000 - Spoiler Pro - Certain Transfender cars
		{
			V(404) | V(405) | V(421),
			0,
			V(489) | V(492),
			V(505) | V(516),
			V(547),
			V(589),
			0
		},
		// 1001 - Spoiler Win - Certain Transfender cars
		{
			V(401) | V(405) | V(410) | V(415) | V(420) | V(426),
			V(436) | V(439),
			0,
			V(496) | V(518) | V(527),
			V(529) | V(540) | V(546) | V(549) | V(550),
			V(580) | V(585),
			V(603)
		},
		// 1002 - Spoiler Drag - Certain Transfender cars
		{
			V(404) | V(418),
			0,
			V(489),
			V(496) | V(505) | V(516) | V(517),
			V(546) | V(551),
			0,
			0
		},
		// 1003 - Spoiler Alpha - Certain Transfender cars
		{
			V(401) | V(410) | V(415) | V(420) | V(426),
			V(436) | V(439),
			V(491),
			V(496) | V(517) | V(518),
			V(529) | V(547) | V(549) | V(550) | V(551),
			V(585),
			0
		},
		// 1004 - Hood Champ Scoop - Certain Transfender cars
		{
			V(401) | V(420) | V(426),
			0,
			V(478) | V(489) | V(492),
			V(505) | V(516),
			V(540) | V(546) | V(550),
			V(589),
			V(600)
		},
		// 1005 - Hood Fury Scoop - Certain Transfender cars
		{
			V(401) | V(420) | V(426),
			0,
			V(478) | V(489) | V(492),
			V(505) | V(518),
			V(550) | V(551),
			V(589),
			V(600)
		},
		// 1006 - Roof Roof Scoop - Certain Transfender cars
		{
			V(401) | V(418) | V(426),
			V(436),
			V(477) | V(489) | V(492),
			V(496) | V(505) | V(518),
			V(529) | V(540) | V(546) | V(550) | V(551),
			V(580) | V(585) | V(589),
			V(600) | V(603)
		},
		// 1007 - Sideskirt Right Sideskirt - Certain Transfender cars
		{
			V(401) | V(404) | V(410) | V(415) | V(422),
			V(436) | V(439),
			V(477) | V(491),
			V(496) | V(516) | V(517) | V(518) | V(527),
			V(529) | V(540) | V(546) | V(549),
			V(580) | V(585) | V(589),
			V(600) | V(603)
		},
		// 1008 - Nitro 5 times - Most cars, Most planes and Most Helicopters
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1009 - Nitro 2 times - Most cars, Most planes and Most Helicopters
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1010 - Nitro 10 times - Most cars, Most planes and Most Helicopters
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1011 - Hood Race Scoop - Certain Transfender cars
		{
			0,
			0,
			0,
			V(496),
			V(529) | V(549),
			0,
			0
		},
		// 1012 - Hood Worx Scoop - Certain Transfender cars
		{
			0,
			0,
			V(478),
			0,
			V(529) | V(549),
			0,
			0
		},
		// 1013 - Lamps Round Fog - Certain Transfender cars
		{
			V(400) | V(401) | V(404) | V(410) | V(422),
			V(436) | V(439),
			V(478) | V(489),
			V(500) | V(505) | V(518),
			0,
			V(585) | V(589),
			V(600)
		},
		// 1014 - Spoiler Champ - Certain Transfender cars
		{
			V(405) | V(421),
			0,
			V(491),
			V(527),
			V(542),
			0,
			0
		},
		// 1015 - Spoiler Race - Certain Transfender cars
		{
			0,
			0,
			0,
			V(516) | V(527),
			V(542),
			0,
			0
		},
		// 1016 - Spoiler Worx - Certain Transfender cars
		{
			V(404) | V(418) | V(421),
			0,
			V(489) | V(492),
			V(505) | V(516) | V(517),
			V(547) | V(551),
			V(589),
			0
		},
		// 1017 - Sideskirt Left Sideskirt - Certain Transfender cars
		{
			V(401) | V(404) | V(410) | V(415) | V(422),
			V(436) | V(439),
			V(477) | V(491),
			V(496) | V(516) | V(517) | V(518) | V(527),
			V(529) | V(540) | V(546) | V(549),
			V(580) | V(585) | V(589),
			V(600) | V(603)
		},
		// 1018 - Exhaust Upswept - Certain Transfender cars
		{
			V(400) | V(405) | V(415) | V(421),
			0,
			V(477) | V(489) | V(491),
			V(505) | V(516) | V(517) | V(518) | V(527),
			V(529) | V(540) | V(542) | V(546) | V(547) | V(549) | V(550) | V(551),
			V(580) | V(585) | V(589),
			V(600) | V(603)
		},
		// 1019 - Exhaust Twin - Certain Transfender cars
		{
			V(400) | V(401) | V(404) | V(405) | V(410) | V(415) | V(420) | V(421) | V(422) | V(426),
			V(436),
			V(477) | V(489) | V(491),
			V(496) | V(500) | V(505) | V(516) | V(517),
			V(529) | V(540) | V(542) | V(546) | V(547) | V(549) | V(550) | V(551),
			V(585),
			V(603)
		},
		// 1020 - Exhaust Large - Certain Transfender cars
		{
			V(400) | V(401) | V(404) | V(405) | V(410) | V(418) | V(421) | V(422),
			V(436),
			V(477) | V(478) | V(489) | V(491),
			V(496) | V(500) | V(505) | V(516) | V(517) | V(518) | V(527),
			V(529) | V(540) | V(542) | V(547) | V(549) | V(550) | V(551),
			V(580) | V(585) | V(589),
			V(600) | V(603)
		},
		// 1021 - Exhaust Medium - Certain Transfender cars
		{
			V(400) | V(404) | V(405) | V(410) | V(418) | V(420) | V(421) | V(422) | V(426),
			V(436),
			V(477) | V(478) | V(491),
			V(500) | V(516) | V(527),
			V(542) | V(547) | V(551),
			0,
			0
		},
		// 1022 - Exhaust Small - Certain Transfender cars
		{
			0,
			V(436),
			V(478),
			0,
			0,
			0,
			V(600)
		},
		// 1023 - Spoiler Fury - Certain Transfender cars
		{
			V(405) | V(410) | V(415) | V(421),
			V(439),
			V(491),
			V(496) | V(517) | V(518),
			V(529) | V(540) | V(546) | V(549) | V(550) | V(551),
			V(580) | V(585),
			V(603)
		},
		// 1024 - Lamps Square Fog - Certain Transfender cars
		{
			V(400) | V(410),
			0,
			V(478) | V(489),
			V(500) | V(505),
			V(540) | V(546),
			V(589),
			V(603)
		},
		// 1025 - Wheels Offroad - Certain Transfender cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1026 - Sideskirt Right Alien Sideskirt - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1027 - Sideskirt Left Alien Sideskirt - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1028 - Exhaust Alien - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1029 - Exhaust X-Flow - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1030 - Sideskirt Left X-Flow Sideskirt - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1031 - Sideskirt Right X-Flow Sideskirt - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1032 - Roof Alien Roof Vent - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1033 - Roof X-Flow Roof Vent - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1034 - Exhaust Alien - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1035 - Roof X-Flow Roof Vent - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1036 - SideSkirt Right Alien Sideskirt - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1037 - Exhaust X-Flow - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1038 - Roof Alien Roof Vent - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1039 - SideSkirt Left X-Flow Sideskirt - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1040 - SideSkirt Left Alien Sideskirt - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1041 - SideSkirt Right X-Flow Sideskirt - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1042 - SideSkirt Right Chrome Sideskirt - Broadway
		{
			0,
			0,
			0,
			0,
			0,
			V(575),
			0
		},
		// 1043 - Exhaust Slamin - Broadway
		{
			V(401),
			V(439),
			V(491),
			V(496) | V(517) | V(518),
			V(540) | V(546) | V(547) | V(549) | V(550),
			V(585),
			V(603)
		},
		// 1044 - Exhaust Chrome - Broadway
		{
			0,
			0,
			0,
			0,
			0,
			V(575),
			0
		},
		// 1045 - Exhaust X-Flow - Flash
		{
			V(401),
			V(439),
			V(491),
			V(517) | V(518),
			V(540) | V(542) | V(546) | V(549) | V(550),
			V(585) | V(589),
			V(603)
		},
		// 1046 - Exhaust Alien - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1047 - SideSkirt Right Alien Sideskirt - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1048 - SideSkirt Right X-Flow Sideskirt - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1049 - Spoiler Alien - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1050 - Spoiler X-Flow - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1051 - SideSkirt Left Alien Sideskirt - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1052 - SideSkirt Left X-Flow Sideskirt - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1053 - Roof X-Flow - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1054 - Roof Alien - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1055 - Roof Alien - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1056 - Sideskirt Right Alien Sideskirt - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1057 - Sideskirt Right X-Flow Sideskirt - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1058 - Spoiler Alien - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1059 - Exhaust X-Flow - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1060 - Spoiler X-Flow - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1061 - Roof X-Flow - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1062 - Sideskirt Left Alien Sideskirt - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1063 - Sideskirt Left X-Flow Sideskirt - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1064 - Exhaust Alien - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1065 - Exhaust Alien - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1066 - Exhaust X-Flow - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1067 - Roof Alien - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1068 - Roof X-Flow - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1069 - Sideskirt Right Alien Sideskirt - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1070 - Sideskirt Right X-Flow Sideskirt - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1071 - Sideskirt Left Alien Sideskirt - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1072 - Sideskirt Left X-Flow Sideskirt - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1073 - Wheels Shadow - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1074 - Wheels Mega - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1075 - Wheels Rimshine - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1076 - Wheels Wires - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1077 - Wheels Classic - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1078 - Wheels Twist - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1079 - Wheels Cutter - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1080 - Wheels Switch - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1081 - Wheels Grove - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1082 - Wheels Import - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1083 - Wheels Dollar - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1084 - Wheels Trance - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1085 - Wheels Atomic - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1086 - Stereo - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1087 - Hydraulics - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1088 - Roof Alien - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1089 - Exhaust X-Flow - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1090 - Sideskirt Right Alien Sideskirt - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1091 - Roof X-Flow - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1092 - Exhaust Alien - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1093 - Sideskirt Left X-Flow Sideskirt - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1094 - Sideskirt Left Alien Sideskirt - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1095 - Sideskirt Right X-Flow Sideskirt - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1096 - Wheels Ahab - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1097 - Wheels Virtual - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1098 - Wheels Access - Most cars
		{
			V(400) | V(401) | V(402) | V(404) | V(405) | V(409) | V(410) | V(411) | V(412) | V(415) | V(418) | V(419) | V(420) | V(421) | V(422) | V(424) | V(426),
			V(436) | V(438) | V(439) | V(442) | V(445) | V(451) | V(458),
			V(466) | V(467) | V(474) | V(475) | V(477) | V(478) | V(479) | V(480) | V(489) | V(491) | V(492),
			V(496) | V(500) | V(505) | V(506) | V(507) | V(516) | V(517) | V(518) | V(526) | V(527),
			V(529) | V(533) | V(534) | V(535) | V(536) | V(540) | V(541) | V(542) | V(545) | V(546) | V(547) | V(549) | V(550) | V(551) | V(555) | V(558) | V(559),
			V(560) | V(561) | V(562) | V(565) | V(566) | V(567) | V(575) | V(576) | V(579) | V(580) | V(585) | V(587) | V(589),
			V(600) | V(602) | V(603)
		},
		// 1099 - Sideskirt Left Chrome Sideskirt - Broadway
		{
			0,
			0,
			0,
			0,
			0,
			V(575),
			0
		},
		// 1100 - Bullbar Chrome Grill - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1101 - Sideskirt Left `Chrome Flames` Sideskirt - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1102 - Sideskirt Left `Chrome Strip` Sideskirt - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1103 - Roof Covertible - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1104 - Exhaust Chrome - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1105 - Exhaust Slamin - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1106 - Sideskirt Right `Chrome Arches` - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1107 - Sideskirt Left `Chrome Strip` Sideskirt - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1108 - Sideskirt Right `Chrome Strip` Sideskirt - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1109 - Rear Bullbars Chrome - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1110 - Rear Bullbars Slamin - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1111 - Front Sign? Little Sign? - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1112 - Front Sign? Little Sign? - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1113 - Exhaust Chrome - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1114 - Exhaust Slamin - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1115 - Front Bullbars Chrome - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1116 - Front Bullbars Slamin - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1117 - Front Bumper Chrome - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1118 - Sideskirt Right `Chrome Trim` Sideskirt - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1119 - Sideskirt Right `Wheelcovers` Sideskirt - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1120 - Sideskirt Left `Chrome Trim` Sideskirt - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1121 - Sideskirt Left `Wheelcovers` Sideskirt - Slamvan
		{
			0,
			0,
			0,
			0,
			V(535),
			0,
			0
		},
		// 1122 - Sideskirt Right `Chrome Flames` Sideskirt - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1123 - Bullbars Bullbar Chrome Bars - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1124 - Sideskirt Left `Chrome Arches` Sideskirt - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1125 - Bullbars Bullbar Chrome Lights - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1126 - Exhaust Chrome Exhaust - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1127 - Exhaust Slamin Exhaust - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1128 - Roof Vinyl Hardtop - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1129 - Exhaust Chrome - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1130 - Roof Hardtop - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1131 - Roof Softtop - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1132 - Exhaust Slamin - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1133 - Sideskirt Right `Chrome Strip` Sideskirt - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1134 - SideSkirt Right `Chrome Strip` Sideskirt - Tornado
		{
			0,
			0,
			0,
			0,
			0,
			V(576),
			0
		},
		// 1135 - Exhaust Slamin - Tornado
		{
			0,
			0,
			0,
			0,
			0,
			V(576),
			0
		},
		// 1136 - Exhaust Chrome - Tornado
		{
			0,
			0,
			0,
			0,
			0,
			V(576),
			0
		},
		// 1137 - Sideskirt Left `Chrome Strip` Sideskirt - Tornado
		{
			0,
			0,
			0,
			0,
			0,
			V(576),
			0
		},
		// 1138 - Spoiler Alien - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1139 - Spoiler X-Flow - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1140 - Rear Bumper X-Flow - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1141 - Rear Bumper Alien - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1142 - Vents Left Oval Vents - Certain Transfender Cars
		{
			V(401),
			V(439),
			V(491),
			V(496) | V(517) | V(518),
			V(540) | V(547) | V(549) | V(550),
			V(585),
			V(603)
		},
		// 1143 - Vents Right Oval Vents - Certain Transfender Cars
		{
			V(401),
			V(439),
			V(491),
			V(496) | V(517) | V(518),
			V(540) | V(547) | V(549) | V(550),
			V(585),
			V(603)
		},
		// 1144 - Vents Left Square Vents - Certain Transfender Cars
		{
			V(401),
			V(439),
			V(491),
			V(517) | V(518),
			V(540) | V(542) | V(549) | V(550),
			V(585) | V(589),
			V(603)
		},
		// 1145 - Vents Right Square Vents - Certain Transfender Cars
		{
			V(401),
			V(439),
			V(491),
			V(517) | V(518),
			V(540) | V(542) | V(549) | V(550),
			V(585) | V(589),
			V(603)
		},
		// 1146 - Spoiler X-Flow - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1147 - Spoiler Alien - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1148 - Rear Bumper X-Flow - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1149 - Rear Bumper Alien - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1150 - Rear Bumper Alien - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1151 - Rear Bumper X-Flow - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1152 - Front Bumper X-Flow - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1153 - Front Bumper Alien - Flash
		{
			0,
			0,
			0,
			0,
			0,
			V(565),
			0
		},
		// 1154 - Rear Bumper Alien - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1155 - Front Bumper Alien - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1156 - Rear Bumper X-Flow - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1157 - Front Bumper X-Flow - Stratum
		{
			0,
			0,
			0,
			0,
			0,
			V(561),
			0
		},
		// 1158 - Spoiler X-Flow - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1159 - Rear Bumper Alien - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1160 - Front Bumper Alien - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1161 - Rear Bumper X-Flow - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1162 - Spoiler Alien - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1163 - Spoiler X-Flow - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1164 - Spoiler Alien - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1165 - Front Bumper X-Flow - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1166 - Front Bumper Alien - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1167 - Rear Bumper X-Flow - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1168 - Rear Bumper Alien - Uranus
		{
			0,
			0,
			0,
			0,
			V(558),
			0,
			0
		},
		// 1169 - Front Bumper Alien - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1170 - Front Bumper X-Flow - Sultan
		{
			0,
			0,
			0,
			0,
			0,
			V(560),
			0
		},
		// 1171 - Front Bumper Alien - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1172 - Front Bumper X-Flow - Elegy
		{
			0,
			0,
			0,
			0,
			0,
			V(562),
			0
		},
		// 1173 - Front Bumper X-Flow - Jester
		{
			0,
			0,
			0,
			0,
			V(559),
			0,
			0
		},
		// 1174 - Front Bumper Chrome - Broadway
		{
			0,
			0,
			0,
			0,
			0,
			V(575),
			0
		},
		// 1175 - Rear Bumper Slamin - Broadway
		{
			0,
			0,
			0,
			0,
			0,
			V(575),
			0
		},
		// 1176 - Front Bumper Chrome - Broadway
		{
			0,
			0,
			0,
			0,
			0,
			V(575),
			0
		},
		// 1177 - Rear Bumper Slamin - Broadway
		{
			0,
			0,
			0,
			0,
			0,
			V(575),
			0
		},
		// 1178 - Rear Bumper Slamin - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1179 - Front Bumper Chrome - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1180 - Rear Bumper Chrome - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1181 - Front Bumper Slamin - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1182 - Front Bumper Chrome - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1183 - Rear Bumper Slamin - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1184 - Rear Bumper Chrome - Blade
		{
			0,
			0,
			0,
			0,
			V(536),
			0,
			0
		},
		// 1185 - Front Bumper Slamin - Remington
		{
			0,
			0,
			0,
			0,
			V(534),
			0,
			0
		},
		// 1186 - Rear Bumper Slamin - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1187 - Rear Bumper Chrome - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1188 - Front Bumper Slamin - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1189 - Front Bumper Chrome - Savanna
		{
			0,
			0,
			0,
			0,
			0,
			V(567),
			0
		},
		// 1190 - Front Bumper Slamin - Tornado
		{
			0,
			0,
			0,
			0,
			0,
			V(576),
			0
		},
		// 1191 - Front Bumper Chrome - Tornado
		{
			0,
			0,
			0,
			0,
			0,
			V(576),
			0
		},
		// 1192 - Rear Bumper Chrome - Tornado
		{
			0,
			0,
			0,
			0,
			0,
			V(576),
			0
		},
		// 1193 - Rear Bumper Slamin - Tornado
		{
			0,
			0,
			0,
			0,
			0,
			V(576),
			0
		}
	};
	// Check if the componentid is in range
	if (1000 <= componentid <= 1193)
	{
		new
		model = GetVehicleModel(vehicleid);
		// Check the model is in range
		// We are dealing with cheaters after all
		if (400 <= model <= 603)
		{
			// Adjust the model to the range of our array
			model -= 400;
			// This is the line that does all the work.
			// Should be very fast and efficient.
			// Uses bit manipulation instead of
			// divisions and mods of 32.
			// The other way of doing it would be:
			// return cs_bMods[((componentid - 1000) * 7) + (model >> 5)]
			// But this is probably better as it's all native.
			// Could run tests if you really wanted, but
			// that would require compressing the array
			// above into a 1d array (saving no space).
			return cs_bMods[componentid - 1000][model >> 5] & (1 << (model & 0x1F));
		}
	}
	return 0;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerEnterCheckpoint(playerid) {
	CrashTest("[function] OnPlayerEnterCheckpoint");

	if(PLchepnt[playerid]==1) {
		if(Lang[playerid]==0) {
			SendClientMessage(playerid, yellow, " Вы в банке. Чтобы положить деньги используйте '/bank', снять '/withdraw'.");
			SendClientMessage(playerid, yellow, " Вы будете получать 1 процент суммы ежечасно. Максимальная сумма хранения $5000000.");
		}else{
			SendClientMessage(playerid, yellow, " You in bank. To put money use '/bank', to take off '/withdraw'.");
			SendClientMessage(playerid, yellow, " You will receive 1 percent of the sum hourly. The maximum sum of storage in $5000000."); } }

}
//------------------------------------------------------------------------------------------------------

public OnPlayerPickUpPickup( playerid, pickupid )
{
	CrashTest("[function] OnPlayerPickUpPickup");
	new weap=pickups[ pickupid ][ weapon ];

	if( pickups[ pickupid ][ creation_time ] != 0 ) {
		if(weap==38 || weap==37 || weap==36 || weap==35 || weap==8 || weap==45 || weap==44 || weap==40) return 1;
		GivePlayerWeapon( playerid, pickups[ pickupid ][ weapon ], pickups[ pickupid ][ ammo ] ); }
	return 1;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerUpdate(playerid) {
	PLgaming[playerid]=1;
	
	new Inter=GetPlayerInterior(playerid);

	if(Inter==5 || Inter==9 || Inter==10) {
		SetPlayerArmedWeapon(playerid, 0);
		return 1; }
	
	if(Inter > 0 && Inter!=5 && Inter!=9 && Inter!=10) {
		SetPlayerHealth(playerid, 100);
		SetPlayerArmedWeapon(playerid, 0);
		return 1; }
	
	//anti car spawn
	new _state = GetPlayerState( playerid ); 
	if( _state == 2 || _state == 3) 
	{ 
		new _vehicle = GetPlayerVehicleID( playerid ); 
		
		if( _ac_info[ playerid ][ _old_state ] == 2 || _ac_info[ playerid ][ _old_state ] == 3 ) 
		{ 
			if( _ac_info[ playerid ][ _old_vehicle ] != 0xFFFF && _vehicle != _ac_info[ playerid ][ _old_vehicle ]) 
			{ 
				_ac_info[ playerid ][ _warns ] += 1; 
				if( _ac_info[ playerid ][ _warns ] >= 3 ) { 
					new string[256];
					new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
					format(string,sizeof(string)," ([%d] %s) - Server: car spawn cheat",playerid,name);
					SendMessageToAdmins(string);
					format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: car spawn cheat",EchoChan,playerid,name);
					IRC_SendRaw(EchoConnection2, string);
					if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, "*** Вы были забанены с сервера. Информация - Server: car spawn cheat");
					else SendClientMessage(playerid, COLOR_ORANGE, "*** You was banned from the server. Information - Server: car spawn cheat");
					format(string,sizeof(string), "player: %s; admin: Server; reason: car spawn cheat",name);
					SetTimerEx("PBan", 50, 0, "is",playerid,string);  
				}
			} 
		} 
		_ac_info[ playerid ][ _old_vehicle ] = _vehicle; 
	} 
	_ac_info[ playerid ][ _old_state ] = _state;  
	// /anti car spawn

	return 1; }
//------------------------------------------------------------------------------------------------------

public OnPlayerEnterRaceCheckpoint(playerid) {
	CrashTest("[function] OnPlayerEnterRaceCheckpoint");
	if(RaceCheckpoin[playerid]<=RaceTotalCheckp) {
		if(RaceCheckpoin[playerid]!=RaceTotalCheckp)
		SetPlayerRaceCheckpoint(playerid,0,RaceX[RaceCheckpoin[playerid]],RaceY[RaceCheckpoin[playerid]],RaceZ[RaceCheckpoin[playerid]],RaceX[RaceCheckpoin[playerid]+1],RaceY[RaceCheckpoin[playerid]+1],RaceZ[RaceCheckpoin[playerid]+1],12);
		else
		SetPlayerRaceCheckpoint(playerid,1,RaceX[RaceCheckpoin[playerid]],RaceY[RaceCheckpoin[playerid]],RaceZ[RaceCheckpoin[playerid]],RaceX[RaceCheckpoin[playerid]],RaceY[RaceCheckpoin[playerid]],RaceZ[RaceCheckpoin[playerid]],12);
		RaceCheckpoin[playerid]++;
		PlaySoundForPlayer(playerid, 1137);
	}else{
		DisablePlayerRaceCheckpoint(playerid);
		PlaySoundForPlayer(playerid, 1056);
		new string[256];
		new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
		RaceWinner++;
		new minut=RaceTime/60;
		new secunt=RaceTime-minut*60;
		new minutst[256];
		new secuntst[256];
		if(minut<10) format(minutst, sizeof(minutst),"0%d",minut);
		else format(minutst, sizeof(minutst),"%d",minut);
		if(secunt<10) format(secuntst, sizeof(secuntst),"0%d",secunt);
		else format(secuntst, sizeof(secuntst),"%d",secunt);

		new money;
		new players;
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnRace[i]!=0) players++;
		money=10000*players;
		if(RaceWinner==1) {
			format(string, sizeof(string)," %s победил в гонке, приз: $%d, время - %s:%s", name,money, minutst, secuntst);
			format(string2, sizeof(string2)," %s won the race, money: $%d, time - %s:%s", name,money, minutst, secuntst);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) SendClientMessage(i, yellow, string);
			else SendClientMessage(i, yellow, string2);
			RaceCheckpoin[playerid]=0;
			format(string, sizeof(string),"3%s победил в гонке, приз: $%d, время - %s:%s", name,money, minutst, secuntst);
			IRC_Say(EchoConnection2, EchoChan, string);
			SetPlayerVirtualWorld(playerid, 0);
			vidr=GetPlayerVehicleID(playerid);
			SetVehicleVirtualWorld(vidr,0);
			PLOnRace[playerid]=0;
			RaceWIN[playerid]++;
			Givemoney(playerid, money);
		}else{
			format(string, sizeof(string)," %s финишировал под номером %d, время - %s:%s", name,RaceWinner, minutst, secuntst);
			format(string2, sizeof(string2)," %s finished with number %d, time - %s:%s", name,RaceWinner, minutst, secuntst);
			SetPlayerVirtualWorld(playerid, 0);
			vidr=GetPlayerVehicleID(playerid);
			SetVehicleVirtualWorld(vidr,0);
			PLOnRace[playerid]=0;
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) SendClientMessage(i, yellow, string);
			else SendClientMessage(i, yellow, string2);
			RaceCheckpoin[playerid]=0;
			format(string, sizeof(string),"3%s финишировал под номером %d, время - %s:%s", name,RaceWinner, minutst, secuntst);
			IRC_Say(EchoConnection2, EchoChan, string); }
		if (InvAllow[playerid]==1)
		if(Gang[playerid]==0){
			if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
			else format(string, sizeof(string), "%s00",playerColor2);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren);
		}else{
			format(string, sizeof(string), "%s00",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren); }
		if(players==1) RaceEnd();
	}
	return 1; }

//------------------------------------------------------------------------------------------------------



public OnRconCommand(cmd[]) {
	new string[256];

	if(strcmp(cmd, "reconnect", true)==0) {
		IRC_Quit(EchoConnection1, "Reconnect");
		IRC_Quit(EchoConnection2, "Reconnect");
		print("The inquiry was sent.");
		return 1; }

	if(strcmp(cmd, "fullrestart", true)==0) {
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) {
			if(Lang[i]==0) format(string,sizeof(string), " Администрация отправила сервер на полный перезапуск. Причина: -");
			else format(string,sizeof(string), " Administration rstarted server (full restart). Reason: -");
			SendClientMessage(i, yellow, string); }
		print("Server will close.");
		SetTimer("GameModeExitFuncFULL", 1000, 0);
		return 1; }

	return 0;
}

//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------

IsPlayerInZone(playerid, zoneid) {
	if(zoneid == -1) return 0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	if(x >= zones[zoneid][zone_minx] && x < zones[zoneid][zone_maxx]
			&& y >= zones[zoneid][zone_miny] && y < zones[zoneid][zone_maxy]
			&& z >= zones[zoneid][zone_minz] && z < zones[zoneid][zone_maxz]
			&& z < 900.0) return 1;
	return 0;
}

public CrashTest(text[]) {
	if(CrashTestOn==0) return 1;
	//printf(text);
	new hour,minute,second;
	gettime(hour,minute,second);
	format(CrashTestString,256, "[%02d:%02d:%02d] %s",hour,minute,second,text);
	new File:crashfile;
	crashfile = fopen("LVM/systemlog.txt", io_append);
	fwrite(crashfile,CrashTestString);
	fwrite(crashfile,"\r\n");
	fclose(crashfile);
	return 1; }


public RaceExitCH(playerid) {
	CrashTest("[function] RaceExitCH");

	if(RaceStarting==7 && PLOnRace[playerid]!=0) {
		SetPlayerVirtualWorld(playerid, 0);
		vidr=GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(vidr,0);
		RaceCheckpoin[playerid]=0;
		DisablePlayerRaceCheckpoint(playerid);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы были дисквалифицированы.");
		else SendClientMessage(playerid, yellow, " You was disqualified.");
		new players;
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnRace[i]!=0) players++;
		if(players==1) RaceEnd();
		new string[256];
		if (InvAllow[playerid]==1)
		if(Gang[playerid]==0){
			if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
			else format(string, sizeof(string), "%s00",playerColor2);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren);
		}else{
			format(string, sizeof(string), "%s00",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren); }
		PLOnRace[playerid]=0; }

	if(RaceStarting!=7 && PLOnRace[playerid]!=0) {
		SetPlayerVirtualWorld(playerid, 0);
		vidr=GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(vidr,0);
		RaceCheckpoin[playerid]=0;
		DisablePlayerRaceCheckpoint(playerid);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы были дисквалифицированы.");
		else SendClientMessage(playerid, yellow, " You was disqualified.");
		new players;
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnRace[i]!=0) players++;
		if(players==1) RaceEnd();
		new string[256];
		if (InvAllow[playerid]==1)
		if(Gang[playerid]==0){
			if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
			else format(string, sizeof(string), "%s00",playerColor2);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren);
		}else{
			format(string, sizeof(string), "%s00",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren); }
		RacePlayers--; PLOnRace[playerid]=0; }

	if(RacePLCR[playerid]==1) {
		SetPlayerVirtualWorld(playerid, 0);
		vidr=GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(vidr,0);
		MTsys[playerid] = 0;
		RaceCR = 0;
		KillTimer(RaceCRtm[playerid]);
		RaceCheckpoin[playerid]=0;
		DisablePlayerCheckpoint(playerid);
		RacePLCR[playerid] = 0;
		for(new i=0; i < RacePL; i++) DestroyVehicle(CarDEMO[i]);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Создание гонки отменено.");
		else SendClientMessage(playerid, yellow, " Race creation was cancelled.");
	}

	return 1; }


public DMExitCH(playerid) {
	CrashTest("[function] DMExitCH");
	new string[256];
	if(DMStarting==7 && PLOnDM[playerid]!=0) {
		new players;
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnDM[i]!=0) players++;
		if(players==2){
			new money, plid;
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnDM[i]!=0) if(i!=playerid) plid=i;
			money=10000*players;
			new name2[MAX_PLAYER_NAME]; GetPlayerName(plid,name2,sizeof(name2));
			format(string, sizeof(string)," %s победил в дефматче, приз: $%d", name2,money);
			format(string2, sizeof(string2)," %s won the deathmatch, money: $%d", name2,money);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			if(Lang[i]==0) SendClientMessage(i, yellow, string);
			else SendClientMessage(i, yellow, string2);
			format(string, sizeof(string),"3%s победил в дефматче, приз: $%d", name2,money);
			IRC_Say(EchoConnection2, EchoChan, string);
			PLOnDM[plid]=0; Givemoney(plid, money); DMEnd(); 
			DMWIN[plid]++; }
		if (InvAllow[playerid]==1)
		if(Gang[playerid]==0){
			if(Color[playerid]==0) format(string, sizeof(string), "%s00",playerColor);
			else format(string, sizeof(string), "%s00",playerColor2);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren);
		}else{
			format(string, sizeof(string), "%s00",playerGangColor[playerid]);
			new Coloren=HexToInt(string);
			SetPlayerColor(playerid,Coloren); }
		PLOnDM[playerid]=0; }

	if(DMStarting!=7 && PLOnDM[playerid]!=0) { DMPlayers--; PLOnDM[playerid]=0; }

	if(DMPLCR[playerid]==1) {
		MTsys[playerid] = 0;
		DMCR = 0;
		KillTimer(DMCRtm[playerid]);
		DMPLCR[playerid] = 0;
		for(new i=0; i < DMPL; i++) DestroyPlayerObject(playerid, BoxDEMO[i]); }
	return 1; }


public InteriorChangeCheck(playerid, newinteriorid, oldinteriorid) {
	CrashTest("[function] InteriorChangeCheck");
	new string[256];
	//new Float:health;

	if(newinteriorid==0) GetPlayerArmour(playerid,Armour[playerid]);

	new ttemper=ZoneCheck(playerid, newinteriorid);

	//printf("%d",newinteriorid);
	//printf("%d",ttemper);

	//new Float:Xtm, Float:Ytm, Float:Ztm;
	//GetPlayerPos(playerid, Xtm, Ytm, Ztm);
	//printf("%f %f %f", Xtm, Ytm, Ztm);

	if(ttemper==1) {
		if(Lang[playerid]==0) {
			if(Biz[1]==0) format(string, sizeof(string), " Покраска - продаётся, стоимость $%d.",BizCost[1]);
			else format(string, sizeof(string), " Покраска - владелец: %s, вы можете перекупить за $%d.",BizOwner[1], (BizTryes[1]*BizCost[1]));
		}else{
			if(Biz[1]==0) format(string, sizeof(string), " Respray - is on sale, cost $%d.",BizCost[1]);
			else format(string, sizeof(string), " Respray - owner: %s, you can buy up for $%d.",BizOwner[1], (BizTryes[1]*BizCost[1])); }
		SendClientMessage(playerid, yellow, string);

		if(Biz[1]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[1]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[1]);
			if(CCCash[playerid]>2000) { BizMoney[1]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==15) {
		//GetPlayerHealth(playerid, Plhp[playerid]); SetGod(playerid);
		SetPlayerCheckpoint(playerid, -22.2549,-55.6575,1003.5469,2);
		PLchepnt[playerid]=1;
		GameTextForPlayer(playerid,"~b~Bank branch",5000,1); }

	if(ttemper==16) {
		//GetPlayerHealth(playerid, Plhp[playerid]); SetGod(playerid);
		SetPlayerCheckpoint(playerid, 362.4493,173.6766,1008.3828,2);
		PLchepnt[playerid]=1;
		GameTextForPlayer(playerid,"~b~Central bank",5000,1); }

	if(oldinteriorid==6 || oldinteriorid==3){ DisablePlayerCheckpoint(playerid); PLchepnt[playerid]=0; }

	if(PLSpecP[playerid]==1)
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(PLSpecO[i]==playerid) SetPlayerInterior(i, newinteriorid);


	if(ttemper==2) {
		if(Lang[playerid]==0) {
			if(Biz[2]==0) format(string, sizeof(string), " Амуниция - продаётся, стоимость $%d.",BizCost[2]);
			else format(string, sizeof(string), " Амуниция - владелец: %s, вы можете перекупить за $%d.",BizOwner[2], (BizTryes[2]*BizCost[2]));
		}else{
			if(Biz[2]==0) format(string, sizeof(string), " Аmmunition - is on sale, cost $%d.",BizCost[2]);
			else format(string, sizeof(string), " Ammunition - owner: %s, you can buy up for $%d.",BizOwner[2], (BizTryes[2]*BizCost[2])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[2]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[2]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[2]);
			if(CCCash[playerid]>2000) { BizMoney[2]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==17) {
		if(Lang[playerid]==0) {
			if(Biz[17]==0) format(string, sizeof(string), " Амуниция - продаётся, стоимость $%d.",BizCost[17]);
			else format(string, sizeof(string), " Амуниция - владелец: %s, вы можете перекупить за $%d.",BizOwner[17], (BizTryes[17]*BizCost[17]));
		}else{
			if(Biz[17]==0) format(string, sizeof(string), " Аmmunition - is on sale, cost $%d.",BizCost[17]);
			else format(string, sizeof(string), " Ammunition - owner: %s, you can buy up for $%d.",BizOwner[17], (BizTryes[17]*BizCost[17])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[17]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[17]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[17]);
			if(CCCash[playerid]>2000) { BizMoney[17]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	/*
if(ttemper==3) {
if(Lang[playerid]==0) {
if(Biz[3]==0) format(string, sizeof(string), " Казино 4 - продаётся, стоимость $%d.",BizCost[3]);
else format(string, sizeof(string), " Казино 4 - владелец: %s, вы можете перекупить за $%d.",BizOwner[3], (BizTryes[3]*BizCost[3]));
}else{
if(Biz[3]==0) format(string, sizeof(string), " Casino 4 - is on sale, cost $%d.",BizCost[3]);
else format(string, sizeof(string), " Casino 4 - owner: %s, you can buy up for $%d.",BizOwner[3], (BizTryes[3]*BizCost[3])); }
SendClientMessage(playerid, yellow, string);
if(Biz[3]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[3]);
else{
format(string, sizeof(string), "~b~owner: %s", BizOwner[3]);
if(CCCash[playerid]>2000) { BizMoney[3]+=500; Givemoney(playerid, (-500)); } }
GameTextForPlayer(playerid,string,5000,1);
}
*/

	if(ttemper==4) {
		if(Lang[playerid]==0) {
			if(Biz[4]==0) format(string, sizeof(string), " Пиццерия - продаётся, стоимость $%d.",BizCost[4]);
			else format(string, sizeof(string), " Пиццерия - владелец: %s, вы можете перекупить за $%d.",BizOwner[4], (BizTryes[4]*BizCost[4]));
		}else{
			if(Biz[4]==0) format(string, sizeof(string), " Burger - is on sale, cost $%d.",BizCost[4]);
			else format(string, sizeof(string), " Burger - owner: %s, you can buy up for $%d.",BizOwner[4], (BizTryes[4]*BizCost[4])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[4]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[4]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[4]);
			if(CCCash[playerid]>2000) { BizMoney[4]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==5) {
		if(Lang[playerid]==0) {
			if(Biz[5]==0) format(string, sizeof(string), " Пиццерия - продаётся, стоимость $%d.",BizCost[5]);
			else format(string, sizeof(string), " Пиццерия - владелец: %s, вы можете перекупить за $%d.",BizOwner[5], (BizTryes[5]*BizCost[5]));
		}else{
			if(Biz[5]==0) format(string, sizeof(string), " Burger - is on sale, cost $%d.",BizCost[5]);
			else format(string, sizeof(string), " Burger - owner: %s, you can buy up for $%d.",BizOwner[5], (BizTryes[5]*BizCost[5])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[5]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[5]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[5]);
			if(CCCash[playerid]>2000) { BizMoney[5]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==6) {
		if(Lang[playerid]==0) {
			if(Biz[6]==0) format(string, sizeof(string), " Пиццерия - продаётся, стоимость $%d.",BizCost[6]);
			else format(string, sizeof(string), " Пиццерия - владелец: %s, вы можете перекупить за $%d.",BizOwner[6], (BizTryes[6]*BizCost[6]));
		}else{
			if(Biz[6]==0) format(string, sizeof(string), " Burger - is on sale, cost $%d.",BizCost[6]);
			else format(string, sizeof(string), " Burger - owner: %s, you can buy up for $%d.",BizOwner[6], (BizTryes[6]*BizCost[6])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[6]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[6]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[6]);
			if(CCCash[playerid]>2000) { BizMoney[6]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==7) {
		if(Lang[playerid]==0) {
			if(Biz[7]==0) format(string, sizeof(string), " Тюнинг - продаётся, стоимость $%d.",BizCost[7]);
			else format(string, sizeof(string), " Тюнинг - владелец: %s, вы можете перекупить за $%d.",BizOwner[7], (BizTryes[7]*BizCost[7]));
		}else{
			if(Biz[7]==0) format(string, sizeof(string), " Tuning - is on sale, cost $%d.",BizCost[7]);
			else format(string, sizeof(string), " Tuning - owner: %s, you can buy up for $%d.",BizOwner[7], (BizTryes[7]*BizCost[7])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[7]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[7]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[7]);
			if(CCCash[playerid]>2000) { BizMoney[7]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==8) {
		if(Lang[playerid]==0) {
			if(Biz[8]==0) format(string, sizeof(string), " Хотринг и Блудринг - продаётся, стоимость $%d.",BizCost[8]);
			else format(string, sizeof(string), " Хотринг и Блудринг - владелец: %s, вы можете перекупить за $%d.",BizOwner[8], (BizTryes[8]*BizCost[8]));
		}else{
			if(Biz[8]==0) format(string, sizeof(string), " Hotring and Bloodring - is on sale, cost $%d.",BizCost[8]);
			else format(string, sizeof(string), " Hotring and Bloodring - owner: %s, you can buy up for $%d.",BizOwner[8], (BizTryes[8]*BizCost[8])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[8]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[8]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[8]);
			if(CCCash[playerid]>2000) { BizMoney[8]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	/*
if(ttemper==9) {
if(Lang[playerid]==0) {
if(Biz[9]==0) format(string, sizeof(string), " Казино - продаётся, стоимость $%d.",BizCost[9]);
else format(string, sizeof(string), " Казино - владелец: %s, вы можете перекупить за $%d.",BizOwner[9], (BizTryes[9]*BizCost[9]));
}else{
if(Biz[9]==0) format(string, sizeof(string), " Casino - is on sale, cost $%d.",BizCost[9]);
else format(string, sizeof(string), " Casino - owner: %s, you can buy up for $%d.",BizOwner[9], (BizTryes[9]*BizCost[9])); }
SendClientMessage(playerid, yellow, string);
if(Biz[9]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[9]);
else{
format(string, sizeof(string), "~b~owner: %s", BizOwner[9]);
if(CCCash[playerid]>2000) { BizMoney[9]+=500; Givemoney(playerid, (-500)); } }
GameTextForPlayer(playerid,string,5000,1);
}
*/

	if(ttemper==10) {
		if(Lang[playerid]==0) {
			if(Biz[10]==0) format(string, sizeof(string), " Стадион Мототрюков - продаётся, стоимость $%d.",BizCost[10]);
			else format(string, sizeof(string), " Стадион Мототрюков - владелец: %s, вы можете перекупить за $%d.",BizOwner[10], (BizTryes[10]*BizCost[10]));
		}else{
			if(Biz[10]==0) format(string, sizeof(string), " Kickstart Stadium - is on sale, cost $%d.",BizCost[10]);
			else format(string, sizeof(string), " Kickstart Stadium - owner: %s, you can buy up for $%d.",BizOwner[10], (BizTryes[10]*BizCost[10])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[10]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[10]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[10]);
			if(CCCash[playerid]>2000) { BizMoney[10]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==11) {
		if(Lang[playerid]==0) {
			if(Biz[11]==0) format(string, sizeof(string), " Стадион Монстра - продаётся, стоимость $%d.",BizCost[11]);
			else format(string, sizeof(string), " Стадион Монстра - владелец: %s, вы можете перекупить за $%d.",BizOwner[11], (BizTryes[11]*BizCost[11]));
		}else{
			if(Biz[11]==0) format(string, sizeof(string), " Oval Stadium - is on sale, cost $%d.",BizCost[11]);
			else format(string, sizeof(string), " Oval Stadium - owner: %s, you can buy up for $%d.",BizOwner[11], (BizTryes[11]*BizCost[11])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[11]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[11]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[11]);
			if(CCCash[playerid]>2000) { BizMoney[11]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==12) {
		if(Lang[playerid]==0) {
			if(Biz[12]==0) format(string, sizeof(string), " Стадион Безумия - продаётся, стоимость $%d.",BizCost[12]);
			else format(string, sizeof(string), " Стадион Безумия - владелец: %s, вы можете перекупить за $%d.",BizOwner[12], (BizTryes[12]*BizCost[12]));
		}else{
			if(Biz[12]==0) format(string, sizeof(string), " Vice Stadium - is on sale, cost $%d.",BizCost[12]);
			else format(string, sizeof(string), " Vice Stadium - owner: %s, you can buy up for $%d.",BizOwner[12], (BizTryes[12]*BizCost[12])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[12]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[12]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[12]);
			if(CCCash[playerid]>2000) { BizMoney[12]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==13) {
		if(Lang[playerid]==0) {
			if(Biz[13]==0) format(string, sizeof(string), " Стадион Хотринга (8-трасса) - продаётся, стоимость $%d.",BizCost[13]);
			else format(string, sizeof(string), " Стадион Хотринга (8-трасса) - владелец: %s, вы можете перекупить за $%d.",BizOwner[13], (BizTryes[13]*BizCost[13]));
		}else{
			if(Biz[13]==0) format(string, sizeof(string), " 8-Track Stadium - is on sale, cost $%d.",BizCost[13]);
			else format(string, sizeof(string), " 8-Track Stadium - owner: %s, you can buy up for $%d.",BizOwner[13], (BizTryes[13]*BizCost[13])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[13]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[13]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[13]);
			if(CCCash[playerid]>2000) { BizMoney[13]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	if(ttemper==14) {
		if(Lang[playerid]==0) {
			if(Biz[14]==0) format(string, sizeof(string), " Стадион Мопеда - продаётся, стоимость $%d.",BizCost[14]);
			else format(string, sizeof(string), " Стадион Мопеда - владелец: %s, вы можете перекупить за $%d.",BizOwner[14], (BizTryes[14]*BizCost[14]));
		}else{
			if(Biz[14]==0) format(string, sizeof(string), " Dirtbike Stadium - is on sale, cost $%d.",BizCost[14]);
			else format(string, sizeof(string), " Dirtbike Stadium - owner: %s, you can buy up for $%d.",BizOwner[14], (BizTryes[14]*BizCost[14])); }
		SendClientMessage(playerid, yellow, string);
		if(Biz[14]==0) format(string, sizeof(string), "~g~cost: $%d", BizCost[14]);
		else{
			format(string, sizeof(string), "~b~owner: %s", BizOwner[14]);
			if(CCCash[playerid]>2000) { BizMoney[14]+=500; Givemoney(playerid, (-500)); } }
		GameTextForPlayer(playerid,string,5000,1);
	}

	return 1;
}

public ServerText() {
	new string[256];
	//format(string, sizeof(string), "hostname bews.tk Original DeathMatch r%s", Revision);
	//SendRconCommand(string);

	ServerTextId++;


	if(ServerTextId==1){
		//format(string, sizeof(string), "hostname *•. Pycckuu CepBep .•* r%s [RUS] (0.3e)", Revision);
		format(string, sizeof(string), "hostname *•. Pycckuu CEPBEP Original r%s .•* [RUS](0.3x)", Revision);
		//format(string, sizeof(string), "hostname - [RUS] Pycckuu CEPBEP Original r%s (0.3d) -", Revision);
		SendRconCommand(string);
		return 1; }

	if(ServerTextId==2){
		format(string, sizeof(string), "hostname *•. Новый клиент на gta.bews.tk .•* [RUS](0.3x)");
		SendRconCommand(string);
		return 1; }

	if(ServerTextId==4){
		ServerTextId=0;
		return 1; }

	/*
if(ServerTextId==1){
format(string, sizeof(string), "hostname - [RUS] Pycckuu CEPBEP Original r%s (0.3d) -", Revision);
SendRconCommand(string);
ServerTextId++; return 1; }


if(ServerTextId==2){
format(string, sizeof(string), "hostname -   Russian Server Original r%s   -", Revision);
SendRconCommand(string);
ServerTextId++; return 1; }

if(ServerTextId==3){
format(string, sizeof(string), "hostname -   Russian Server Original r%s   -", Revision);
SendRconCommand(string);
ServerTextId++; return 1; }*/
	/*
if(ServerTextId==2){
format(string, sizeof(string), "hostname - [RUS] NETBYNET Official Server r%s -", Revision);
SendRconCommand(string);
ServerTextId++; return 1; }

if(ServerTextId==3){
format(string, sizeof(string), "hostname - [RUS] NETBYNET Official Server r%s -", Revision);
SendRconCommand(string);
ServerTextId=0; return 1; }
*/
	/*
if(ServerTextId==6){
format(string, sizeof(string), "hostname - [0.3] Download at www.sa-mp.com -");
SendRconCommand(string);
ServerTextId++; return 1; }

if(ServerTextId==7){
format(string, sizeof(string), "hostname - [0.3] Download at www.sa-mp.com -");
SendRconCommand(string);
ServerTextId=0; }*/


	return 1; }

public BizUpdate() {
	CrashTest("[function] BizUpdate");
	new tmpr;
	for(new i=1; i<=14; i++) {
		tmpr+=1000;
		SetTimerEx("BizUpdateTMR", (tmpr+1000), 0, "i", i); }
	return 1;
}

public BizUpdateTMR(i) {
	CrashTest("[function] BizUpdateTMR");
	new string[256];
	new File[256]; format(File,sizeof(File),"LVM/system/property.ini");

	if(Biz[i]!=0){

		if(BizMoney[i]>0){
			new name[MAX_PLAYER_NAME];
			new id=999;
			for(new b = 0; b < MAX_PLAYERS; b++)
			if(IsPlayerConnected(b)) {
				GetPlayerName(b,name,sizeof(name));
				if(strcmp(name,BizOwner[i],true)==0) id=i; }

			if(id!=999) {
				if(Lang[id]==0) format(string, sizeof(string), " Доход от собственности: $%d.",BizMoney[i]);
				else format(string, sizeof(string), " Money from property: $%d.",BizMoney[i]);
				SendClientMessage(id, yellow, string);
				Givemoney(id, BizMoney[i]);
				BizMoney[i]=0;
			}else{
				new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", BizOwner[i]);
				dini_IntSet(PF, "bizmoney", BizMoney[i]); }
		}

		format(string,sizeof(string),"property%d", i);
		if(BizTime[i]<=20) { Biz[i]=0; BizMoney[i]=0; BizTryes[i]=1; }
		dini_IntSet(File, string, Biz[i]);
		format(string,sizeof(string),"propertyown%d", i);
		dini_Set(File, string, BizOwner[i]);
		format(string,sizeof(string),"propertytr%d", i);
		dini_IntSet(File, string, BizTryes[i]);
		BizTime[i]-=20;
		format(string,sizeof(string),"propertytime%d", i);
		dini_IntSet(File, string, BizTime[i]); }

	return 1;
}

public MoneyGrubScoreUpdate()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	if (IsPlayerConnected(i))
	SetPlayerScore(i, CCCash[i]);
	return 1;
}

public MoneyGrubLeader()
{
	CrashTest("[function] MoneyGrubLeader");
	new string[256];

	if(ReturnPlayers()==0) {
		//format(string,sizeof(string),"7*** Самые богатые: 3Сервер пуст.");
		//IRC_Say(EchoConnection1, EchoChan, string);
		return 1; }


	new temp=-500;
	if(ReturnPlayers()>=1) {
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(CCCash[i]>temp)
		temp=CCCash[i];
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(CCCash[i]==temp) {
			new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
			format(string,sizeof(string)," *** Самые богатые: %s ($%d)",name1,temp);
			format(string2,sizeof(string2)," *** The richest players: %s ($%d)",name1,temp);
			format(string3,sizeof(string3),"7*** Самые богатые: 3%s ($%d)",name1,temp);

			new ms[256];
			format(ms,sizeof(ms),"~y~%s  is best!",name1);
			GameTextForAll(ms,6000,1);
		} }

	new temp2=-500;
	if(ReturnPlayers()>=2) {
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(CCCash[i]>temp2 && CCCash[i]!=temp)
		temp2=CCCash[i];
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(CCCash[i]==temp2) {
			new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
			format(string,sizeof(string),"%s, %s ($%d)",string,name2,temp2);
			format(string2,sizeof(string2),"%s, %s ($%d)",string2,name2,temp2);
			format(string3,sizeof(string3),"%s, %s ($%d)",string3,name2,temp2);
		} }

	new temp3=-500;
	if(ReturnPlayers()>=3) {
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(CCCash[i]>temp3 && CCCash[i]!=temp && CCCash[i]!=temp2)
		temp3=CCCash[i];
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(CCCash[i]==temp3) {
			new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
			format(string,sizeof(string),"%s, %s ($%d)",string,name3,temp3);
			format(string2,sizeof(string2),"%s, %s ($%d)",string2,name3,temp3);
			format(string3,sizeof(string3),"%s, %s ($%d)",string3,name3,temp3);
		} }

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Lang[i]==0) SendClientMessage(i, yellow, string);
	else SendClientMessage(i, yellow, string2);

	IRC_Say(EchoConnection1, EchoChan, string3);

	SetTimer("GlobalCV", 1000, 0);
	
	LottoExe++;
	if(LottoExe==2) { LottoExe=0; SetTimer("LottoST", 20000, 0); }

	return 1;
}

public GlobalCV(){
	CrashTest("[function] GlobalCV");
	new file[256]; format(file,sizeof(file),"LVM/system/config.ini");
	dini_IntSet(file,"GlobalKills", GlobalKills);
	dini_IntSet(file,"GlobalCash1",GlobalCash1);
	dini_IntSet(file,"GlobalCash2",GlobalCash2);
	dini_IntSet(file,"GlobalPlayers",GlobalPlayers);
	dini_IntSet(file,"GlobalRace",GlobalRace);
	dini_IntSet(file,"GlobalDM",GlobalDM);
	return 1; }


createTextDraws()
{
	new hour,minute,second;
	gettime(hour,minute,second);
	//hour=hour-1;
	if (hour==24)  hour=0;
	if (hour==25)  hour=1;
	new string[256];
	format(string,25,"%02d:%02d",hour,minute);
	Clock=TextDrawCreate(549,24,string);
	TextDrawLetterSize(Clock,0.55,2);
	TextDrawFont(Clock,3);
	TextDrawBackgroundColor(Clock,0x000000AA);
	TextDrawSetOutline(Clock,2);


	WEB = TextDrawCreate(20.000000,429.000000,"gta.bews.tk:7778");
	TextDrawAlignment(WEB,0);
	TextDrawBackgroundColor(WEB,0x000000ff);
	TextDrawFont(WEB,3);
	TextDrawLetterSize(WEB,0.500000,1.000000);
	TextDrawColor(WEB,0xffffffff);
	TextDrawSetOutline(WEB,1);
	TextDrawSetProportional(WEB,1);

	for(new i=0; i<MAX_PLAYERS; i++) {
		BankDraw[i] = TextDrawCreate(608.500000,95.500000,"$0");
		TextDrawAlignment(BankDraw[i],3);
		TextDrawBackgroundColor(BankDraw[i],0x000000ff);
		TextDrawFont(BankDraw[i],3);
		TextDrawLetterSize(BankDraw[i],0.586099,2.179999);
		TextDrawColor(BankDraw[i],0xffff00cc);
		TextDrawSetOutline(BankDraw[i],1);
		TextDrawSetProportional(BankDraw[i],1);
		TextDrawSetShadow(BankDraw[i],1); }

	for(new i=0; i<MAX_PLAYERS; i++) {
		GangDraw[i] = TextDrawCreate(608.500000,113.500000,"$0");
		TextDrawAlignment(GangDraw[i],3);
		TextDrawBackgroundColor(GangDraw[i],0x000000ff);
		TextDrawFont(GangDraw[i],3);
		TextDrawLetterSize(GangDraw[i],0.586099,2.179999);
		TextDrawColor(GangDraw[i],0x91C1FFcc);
		TextDrawSetOutline(GangDraw[i],1);
		TextDrawSetProportional(GangDraw[i],1);
		TextDrawSetShadow(GangDraw[i],1); }

	for(new i=0; i<MAX_PLAYERS; i++) {
		LocDraw[i] = TextDrawCreate(27.000000,325.000000,"San Andreas");
		TextDrawAlignment(LocDraw[i],0);
		TextDrawBackgroundColor(LocDraw[i],0x000000ff);
		TextDrawFont(LocDraw[i],1);
		TextDrawLetterSize(LocDraw[i],0.400000,0.900000);
		TextDrawColor(LocDraw[i],0xffffffff);
		TextDrawSetOutline(LocDraw[i],1);
		TextDrawSetProportional(LocDraw[i],1); }


	ArkaPlan0 = TextDrawCreate(611.000000,367.000000,"_");
	TextDrawUseBox(ArkaPlan0,1);
	TextDrawBoxColor(ArkaPlan0,0x00000033);
	TextDrawTextSize(ArkaPlan0,529.000000,0.000000);
	TextDrawAlignment(ArkaPlan0,0);
	TextDrawBackgroundColor(ArkaPlan0,0x000000ff);
	TextDrawFont(ArkaPlan0,1);
	TextDrawLetterSize(ArkaPlan0,-3.700000,5.100007);
	TextDrawColor(ArkaPlan0,0xffffffff);
	TextDrawSetProportional(ArkaPlan0,1);
	TextDrawSetShadow(ArkaPlan0,1);

	ArkaPlan1 = TextDrawCreate(611.000000,365.000000,"_");
	TextDrawUseBox(ArkaPlan1,1);
	TextDrawBoxColor(ArkaPlan1,0x000000ff);
	TextDrawTextSize(ArkaPlan1,530.000000,185.000000);
	TextDrawAlignment(ArkaPlan1,0);
	TextDrawBackgroundColor(ArkaPlan1,0x000000ff);
	TextDrawFont(ArkaPlan1,3);
	TextDrawLetterSize(ArkaPlan1,2.799999,-0.200000);
	TextDrawColor(ArkaPlan1,0xffffffff);
	TextDrawSetOutline(ArkaPlan1,1);
	TextDrawSetProportional(ArkaPlan1,1);
	TextDrawSetShadow(ArkaPlan1,1);

	ArkaPlan2 = TextDrawCreate(532.000000,365.000000,"_");
	TextDrawUseBox(ArkaPlan2,1);
	TextDrawBoxColor(ArkaPlan2,0x000000ff);
	TextDrawTextSize(ArkaPlan2,530.000000,32.000000);
	TextDrawAlignment(ArkaPlan2,0);
	TextDrawBackgroundColor(ArkaPlan2,0x000000ff);
	TextDrawFont(ArkaPlan2,3);
	TextDrawLetterSize(ArkaPlan2,1.000000,5.299999);
	TextDrawColor(ArkaPlan2,0xffffffff);
	TextDrawSetOutline(ArkaPlan2,1);
	TextDrawSetProportional(ArkaPlan2,1);
	TextDrawSetShadow(ArkaPlan2,1);

	ArkaPlan3 = TextDrawCreate(532.000000,416.000000,"_");
	TextDrawUseBox(ArkaPlan3,1);
	TextDrawBoxColor(ArkaPlan3,0x000000ff);
	TextDrawTextSize(ArkaPlan3,609.000000,82.000000);
	TextDrawAlignment(ArkaPlan3,0);
	TextDrawBackgroundColor(ArkaPlan3,0x000000ff);
	TextDrawFont(ArkaPlan3,3);
	TextDrawLetterSize(ArkaPlan3,1.500000,-0.200000);
	TextDrawColor(ArkaPlan3,0xffffffff);
	TextDrawSetOutline(ArkaPlan3,1);
	TextDrawSetProportional(ArkaPlan3,1);
	TextDrawSetShadow(ArkaPlan3,1);

	ArkaPlan4 = TextDrawCreate(613.000000,365.000000,"_");
	TextDrawUseBox(ArkaPlan4,1);
	TextDrawBoxColor(ArkaPlan4,0x000000ff);
	TextDrawTextSize(ArkaPlan4,607.000000,-1.000000);
	TextDrawAlignment(ArkaPlan4,0);
	TextDrawBackgroundColor(ArkaPlan4,0x000000ff);
	TextDrawLetterSize(ArkaPlan4,0.199999,5.399997);
	TextDrawFont(ArkaPlan4,3);
	TextDrawColor(ArkaPlan4,0xffffffff);
	TextDrawSetOutline(ArkaPlan4,1);
	TextDrawSetProportional(ArkaPlan4,1);
	TextDrawSetShadow(ArkaPlan4,1);

	ArkaPlan5 = TextDrawCreate(538.000000,387.000000,"_");
	TextDrawUseBox(ArkaPlan5,1);
	TextDrawBoxColor(ArkaPlan5,0x00ff0033);
	TextDrawTextSize(ArkaPlan5,603.000000,64.000000);
	TextDrawAlignment(ArkaPlan5,0);
	TextDrawBackgroundColor(ArkaPlan5,0x000000ff);
	TextDrawFont(ArkaPlan5,3);
	TextDrawLetterSize(ArkaPlan5,1.000000,-0.000000);
	TextDrawColor(ArkaPlan5,0xffffffff);
	TextDrawSetOutline(ArkaPlan5,1);
	TextDrawSetProportional(ArkaPlan5,1);
	TextDrawSetShadow(ArkaPlan5,1);

	ArkaPlan6 = TextDrawCreate(607.000000,410.000000,"_");
	TextDrawUseBox(ArkaPlan6,1);
	TextDrawBoxColor(ArkaPlan6,0xff000033);
	TextDrawTextSize(ArkaPlan6,534.000000,0.000000);
	TextDrawAlignment(ArkaPlan6,0);
	TextDrawBackgroundColor(ArkaPlan6,0x000000ff);
	TextDrawFont(ArkaPlan6,3);
	TextDrawLetterSize(ArkaPlan6,1.000000,-0.000000);
	TextDrawColor(ArkaPlan6,0xffffffff);
	TextDrawSetOutline(ArkaPlan6,1);
	TextDrawSetProportional(ArkaPlan6,1);
	TextDrawSetShadow(ArkaPlan6,1);

	Cizgi = TextDrawCreate(556.000000,410.000000,"_");
	TextDrawUseBox(Cizgi,1);
	TextDrawBoxColor(Cizgi,0xffffffff);
	TextDrawTextSize(Cizgi,551.000000,0.000000);
	TextDrawAlignment(Cizgi,0);
	TextDrawBackgroundColor(Cizgi,0x000000ff);
	TextDrawFont(Cizgi,3);
	TextDrawLetterSize(Cizgi,0.199999,-0.000000);
	TextDrawColor(Cizgi,0xffffffff);
	TextDrawSetOutline(Cizgi,1);
	TextDrawSetProportional(Cizgi,1);
	TextDrawSetShadow(Cizgi,1);


	for(new i=0; i<MAX_PLAYERS; i++) {
		GostergeYazi[i] = TextDrawCreate(535.000000,366.000000, " ");
		TextDrawAlignment(GostergeYazi[i],0);
		TextDrawBackgroundColor(GostergeYazi[i],0x000000ff);
		TextDrawFont(GostergeYazi[i],1);
		TextDrawLetterSize(GostergeYazi[i],0.239999,1.399999);
		TextDrawSetProportional(GostergeYazi[i],1);
		TextDrawSetShadow(GostergeYazi[i],1);
		TextDrawColor(GostergeYazi[i],0xffff00ff);

		Hizg[i] = TextDrawCreate(538.000000,387.000000,"_");
		TextDrawUseBox(Hizg[i],1);
		TextDrawBoxColor(Hizg[i],0x00ff0066);
		TextDrawAlignment(Hizg[i],0);
		TextDrawBackgroundColor(Hizg[i],0x000000ff);
		TextDrawFont(Hizg[i],3);
		TextDrawLetterSize(Hizg[i],9.100000,-0.000000);
		TextDrawColor(Hizg[i],0xffffffff);
		TextDrawSetOutline(Hizg[i],1);
		TextDrawSetProportional(Hizg[i],1);
		TextDrawSetShadow(Hizg[i],1);

		Cang[i] = TextDrawCreate(538.000000,410.000000,"_");
		TextDrawUseBox(Cang[i],1);
		TextDrawBoxColor(Cang[i],0xff000066);
		TextDrawAlignment(Cang[i],0);
		TextDrawBackgroundColor(Cang[i],0x000000ff);
		TextDrawFont(Cang[i],3);
		TextDrawLetterSize(Cang[i],1.000000,-0.000000);
		TextDrawColor(Cang[i],0xffffffff);
		TextDrawSetOutline(Cang[i],1);
		TextDrawSetProportional(Cang[i],1);
		TextDrawSetShadow(Cang[i],1); }


}

public TimeCL(){
	CrashTest("[function] TimeCL");

	if(clll==1) return 1;

	new hour,minute,second;
	gettime(hour,minute,second);
	//if(hour==15 && minute==55) ChangeModeST();
	//hour=hour-1;
	if (hour==24)  hour=0;
	if (hour==25)  hour=1;
	new string[256];
	format(string,25,"%02d:%02d",hour,minute);
	TextDrawSetString(Clock, string);

	for(new i=0;i<MAX_PLAYERS;i++)
	if(IsPlayerConnected(i)) {
		TextDrawHideForPlayer(i, Clock);
		TextDrawHideForPlayer(i, WEB);
		TextDrawShowForPlayer(i, Clock);
		TextDrawShowForPlayer(i, WEB);
	}

	SetTimer("TimeCL",60000,0);
	return 1;
}

public ChangeModeST(){
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) {
		if(Lang[i]==0) format(string,sizeof(string), " Сервер перейдёт в развлекательный режим в течении 5 минут.");
		else format(string,sizeof(string), " Server goes into fun mode in 5 minutes.");
		SendClientMessage(i, yellow, string); }

	IRC_Say(EchoConnection1, EchoChan, "13Сервер перейдёт в развлекательный режим в течении 5 минут.");
	SetTimer("ChangeModeCON",300000,0);
	return 1; }

public ChangeModeCON(){
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) {
		if(Lang[i]==0) format(string,sizeof(string), " Сервер переходит в развлекательный режим.");
		else format(string,sizeof(string), " Server going into fun mode.");
		SendClientMessage(i, yellow, string); }

	IRC_Say(EchoConnection1, EchoChan, "13Сервер переходит в развлекательный режим.");

	CrashTest("------------ Server Closed-------------");
	clll=1;
	TextDrawHideForAll(Clock);
	TextDrawHideForAll(WEB);
	for(new a = 0; a <= MAX_PLAYERS; a++) {
		TextDrawHideForPlayer(a, BankDraw[a]); TextDrawHideForPlayer(a, GangDraw[a]); }
	IRC_Quit(EchoConnection1, "Server Closed");
	IRC_Quit(EchoConnection2, "Server Closed");

	SendRconCommand("changemode 4MADNESSrus");
	return 1; }

public TimeUp() {
	CrashTest("[function] TimeUp");
	new hour,minute,second;
	gettime(hour,minute,second);
	if (hour==24)  hour=0;
	if (hour==25)  hour=1;
	if (hour < 6){ SetWeather(10); }
	if (hour > 21){ SetWeather(10); }
	if (hour > 6 && hour < 21){ SetWeather(0); }
	SetWorldTime(hour);
	SetTimer("WeatherUp",600000,0); 
	return 1;
}

public WeatherUp() {
	CrashTest("[function] WeatherUp");
	new rand = random(21);
	SetWeather(rand);
	SetTimer("TimeUp2",600000,0); 
	return 1;
}

public TimeUp2() {
	CrashTest("[function] TimeUp2");
	new hour,minute,second;
	gettime(hour,minute,second);
	if (hour==24)  hour=0;
	if (hour==25)  hour=1;
	if (hour < 6){ SetWeather(10); }
	if (hour > 21){ SetWeather(10); }
	if (hour > 6 && hour < 21){ SetWeather(0); }
	SetWorldTime(hour);
	SetTimer("TimeUp3",1200000,0); 
	return 1;
}

public TimeUp3() SetTimer("TimeUp",600000,0);

public CheckW() {
	CrashTest("[function] CheckW");
	for(new i=0;i<MAX_PLAYERS;i++)
	if(IsPlayerConnected(i))
	if(DuelStarted>0) {
		if(DuelMember[0]!=i) if(DuelMember[1]!=i)
		CheckWID(i);
	}else CheckWID(i);
	return 1; }

public CheckWID(i) {
	new weap;
	new ammom;
	new string[256];
	new name[MAX_PLAYER_NAME]; GetPlayerName(i,name,sizeof(name));

	if (GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK) {
		format(string,sizeof(string)," ([%d] %s) - Server: джетпак чит",i,name);
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: джетпак чит",EchoChan,i,name);
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[i]==0) SendClientMessage(i, COLOR_ORANGE, "*** Вы были забанены с сервера. Информация - Server: джетпак чит");
		else SendClientMessage(i, COLOR_ORANGE, "*** You was banned from the server. Information - Server: jetpack cheat");
		format(string,sizeof(string), "player: %s; admin: Server; reason: jetpack cheat",name);
		SetTimerEx("PBan", 50, 0, "is",i,string); return 1; }

	if(IsPlayerInAnyVehicle(i)) {
		new vehicleid = GetPlayerVehicleID(i);
		if((vehicleid == vehhanter && LKills[i]<40) || (vehicleid == vehhydra && LKills[i]<30) || (vehicleid == vehtank && LKills[i]<20)
				|| (vehicleid == vehvorob && LKills[i]<10)) {
			if(WeapCheat[i]==0) { WeapCheat[i]++; return 1; }
			format(string,sizeof(string)," ([%d] %s) - Server: unlock чит",i,name);
			SendMessageToAdmins(string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: unlock чит",EchoChan,i,name);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[i]==0) SendClientMessage(i, COLOR_ORANGE, "*** Вы были кикнуты с сервера. Информация - Server: unlock чит");
			else SendClientMessage(i, COLOR_ORANGE, "*** You was kicked from the server. Information - Server: unlock cheat");
			SetTimerEx("PKick", 50, 0, "is",i,"Server: unlock cheat"); return 1; } }


	for(new slot=0;slot<14;slot++) {

		GetPlayerWeaponData(i,slot,weap,ammom);

		if(weap==38 || weap==37 || weap==36 || weap==35 || weap==8 || weap==45 || weap==44
				|| weap==40 || weap==4 || weap==16) {
			if(Sponsor[i]==1 && weap==35) return 1;
			if(WeapCheat[i]<2) { WeapCheat[i]++; return 1; }
			format(string,sizeof(string)," ([%d] %s) - Server: чит оружия",i,name);
			SendMessageToAdmins(string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: чит оружия",EchoChan,i,name);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[i]==0) SendClientMessage(i, COLOR_ORANGE, "*** Вы были забанены с сервера. Информация - Server: чит оружия");
			else SendClientMessage(i, COLOR_ORANGE, "*** You was banned from the server. Information - Server: weapon cheat");
			format(string,sizeof(string), "player: %s; admin: Server; reason: weapon cheat",name);
			SetTimerEx("PBan", 50, 0, "is",i,string); return 1; }
	}
	WeapCheat[i]=0;

	return 1;
}


public SetGod(playerid) { SetPlayerHealth(playerid,9999999); return 1; }

public AFKCheck()
{
	CrashTest("[function] AFKCheck");
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Login[i]==1) {
		GetPlayerPos(i,X[i],Y[i],Z[i]);
		if(AFK[i]==1) {
			TogglePlayerControllable(i,0);
			if(X[i]!=Xold[i] && Y[i]!=Yold[i]) {
				AFKcheat[i]++;
				if(AFKcheat[i]>2) {
					new string[256];
					new name[MAX_PLAYER_NAME]; GetPlayerName(i,name,sizeof(name));
					format(string,sizeof(string)," ([%d] %s) - Server: возможный антифриз чит",i,name);
					SendMessageToAdmins(string);
					format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: возможный антифриз чит",EchoChan,i,name);
					IRC_SendRaw(EchoConnection2, string);
					if(Lang[i]==0) SendClientMessage(i, COLOR_ORANGE, " *** Вы были кинуты с сервера. Информация - Server: возможный антифриз чит");
					else SendClientMessage(i, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: possible antifreeze cheat");
					SetTimerEx("PKick", 50, 0, "i",i); }
			}

		}

		Xold[i]=X[i];
		Yold[i]=Y[i];

		new Float:Plheath;
		GetPlayerHealth(i, Plheath);
		if(Plheath>100)
		if(GetPlayerInterior(i)!=15 && GetPlayerInterior(i)!=16)
		SetPlayerHealth(i,50);

	}

	return 1;
}

public CheckArmour() {
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i) && playerSpawned[i] && GetPlayerInterior(i)==0)
	CheckAID(i);
	return 1; }

public CheckAID(i) {
	new Float:TArmour; GetPlayerArmour(i,TArmour);
	if(Armour[i] == TArmour) return 1;
	if(Armour[i] < TArmour) {
		SetTimerEx("CheckArmour2", 14000, 0, "i", i);
		return 1; }
	SetTimerEx("CheckArmour3", 15000, 0, "i", i);
	return 1; }


public CheckArmour2(playerid) {
	if(IsPlayerConnected(playerid) && playerSpawned[playerid] && GetPlayerInterior(playerid)==0) {
		new Float:TArmour; GetPlayerArmour(playerid,TArmour);
		if(Armour[playerid] < TArmour) {
			new string[256];
			new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
			format(string,sizeof(string)," ([%d] %s) - Server: возможный чит брони",playerid,name);
			SendMessageToAdmins(string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: возможный чит брони",EchoChan,playerid,name);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кинуты с сервера. Информация - Server: возможный чит брони");
			else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: possible armour cheat");
			SetTimerEx("PKick", 50, 0, "i",playerid);
		} }
	return 1; }


public CheckArmour3(playerid) {
	if(IsPlayerConnected(playerid) && playerSpawned[playerid]) {
		new Float:TArmour; GetPlayerArmour(playerid,TArmour);
		if(Armour[playerid] > TArmour) GetPlayerArmour(playerid,Armour[playerid]);
	}
	return 1; }


public CheckMoney()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Login[i]==1)
	CheckMID(i);
	return 1;
}

public CheckMoney2(playerid)
{
	CrashTest("[function] CheckMoney2");

	if(CCCash[playerid] < GetPlayerMoney(playerid)) {

		if((CCCash[playerid]+20) >= GetPlayerMoney(playerid))
		CCCash[playerid] = GetPlayerMoney(playerid);
		else{
			new string[256];
			new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
			format(string,sizeof(string)," ([%d] %s) - Server: возможный денежный чит",playerid,name);
			SendMessageToAdmins(string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: возможный денежный чит",EchoChan,playerid,name);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кинуты с сервера. Информация - Server: возможный денежный чит");
			else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: possible money cheat");
			SetTimerEx("PKick", 50, 0, "i",playerid);
		} }
	return 1;
}

public CheckMoney3(playerid)
{

	if(CCCash[playerid] > GetPlayerMoney(playerid))
	CCCash[playerid] = GetPlayerMoney(playerid);

	return 1;
}

public CheckMID(i) {

	if(CCCash[i]<0) { CCCash[i]=0; ResetPlayerMoney(i); }

	if(CCCash[i] == GetPlayerMoney(i)) return 1;

	if(CCCash[i] < GetPlayerMoney(i)) {
		SetTimerEx("CheckMoney2", 7000, 0, "i", i);
		return 1; }

	SetTimerEx("CheckMoney3", 7000, 0, "i", i);

	return 1;
}

public IngameplTime() {

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(PLgaming[i]==1)
	Ingame[i]++;

	mins++;

	return 1;
}


public Hints() {

	CrashTest("[function] Hints");
	new rand = random(10);


	switch(rand) {
	case 0: {
			format(string1, sizeof(string1), " ***A*** Вы играете на официальном российском SA-MP сервере. Желаем приятно провести время.");
			format(string2, sizeof(string2), " ***A*** You're playing at the official Russian SA-MP server. Have a nice time."); }
	case 1: {
			format(string1, sizeof(string1), " ***A*** Ведётся набор модераторов. Напишите заявку на форуме для тест срока - gta.bews.tk");
			format(string2, sizeof(string2), " ***A*** Become a moderator! Submit your application at gta.bews.tk"); }
	case 2: {
			format(string1, sizeof(string1), " ***A*** Если вы не будете заходить в игру в течении двух месяцев, ваш аккаунт автоматически удалится.");
			format(string2, sizeof(string2), " ***A*** If you don't visit the game in two months, your account will be automatically deleted."); }
	case 3: {
			format(string1, sizeof(string1), " ***A*** Посетите наш IRC канал - irc.bews.tk/rus");
			format(string2, sizeof(string2), " ***A*** Visit our IRC channel - irc.bews.tk/rus "); }
	case 4: {
			format(string1, sizeof(string1), " ***A*** Получите уникальный цвет в банде! Наберите больше 2000 убийств для изменения.");
			format(string2, sizeof(string2), " ***A*** Receive unique colour in a gang! Collect more than 2000 kills to change it."); }
	case 5: {
			format(string1, sizeof(string1), " ***A*** Нужна помощь? Используйте '/help'. ");
			format(string2, sizeof(string2), " ***A*** Need help? Use '/help'."); }
		//case 6: {
		//format(string1, sizeof(string1), " ***A*** Сервер установлен на площадке NETBYNET (www.netbynet.ru).");
		//format(string2, sizeof(string2), " ***A*** Hosted by NETBYNET (www.netbynet.ru).");
		//}
	case 6: {
			format(string1, sizeof(string1), " ***A*** Стань спонсором, получи тотальное преимущество! Список уникальных возможностей - '/sponsor'.");
			format(string2, sizeof(string2), " ***A*** Become a sponsor, get a total advantage! The list of unique features - '/sponsor'."); }
	case 7: {
			format(string1, sizeof(string1), " ***A*** Теперь попасть на IRC канал можно ещё проще! Используйте кнопку меню 'IRC channel' на gta.bews.tk.");
			format(string2, sizeof(string2), " ***A*** Now you can join our IRC channel even easier! Use the menu button 'IRC channel' on gta.bews.tk."); }
	case 8: {
			format(string1, sizeof(string1), " ***A*** Проверьте определение вашего города (/stats id), если не определился, или неверен, используйте команду /city");
			format(string2, sizeof(string2), " ***A*** Please check your city (/stats id), you can send error message to administration using /city"); }
	case 9: {
			format(string1, sizeof(string1), " ***A*** Купите себе статус для аккаунта! Теперь он может содержать любой текст (в том числе рекламу).");
			format(string2, sizeof(string2), " ***A*** Buy a new status for your account! Now it can contain any text (including advertisement)."); }
	}

	if(strlen(string1)!=0)
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		SendClientMessage(i, yellow, string1);
	}else{
		SendClientMessage(i, yellow, string2); }

	new msg[256];
	format(msg, sizeof(msg), "14%s",string1);
	if(ReturnPlayers()!=0) IRC_Say(EchoConnection2, EchoChan, msg);

	return 1;
}

public Advis() {

	CrashTest("[function] Advis");
	new rand = random(2);

	switch(rand) {
	case 0: format(string1, sizeof(string1), " ***A*** %s", ADV[0]);
	case 1: format(string1, sizeof(string1), " ***A*** %s", ADV[1]);
	}

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	SendClientMessage(i, yellow, string1);
	new msg[256];
	format(msg, sizeof(msg), "14%s",string1);
	if(ReturnPlayers()!=0) IRC_Say(EchoConnection2, EchoChan, msg);
	return 1; }


public SendMessageToAdminEx(playerid,text[]) {
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if (Login[i] == 1 && Alevel[i] > 0 && playerid != i)
	SendClientMessage(i,cyan,text);

	printf("[A_message]: %s",text);
	return 1; }


public SendMessageToAdmins(text[]) {
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if (Login[i] == 1 && Alevel[i] > 0)
	SendClientMessage(i,cyan,text);

	printf("[A_message]: %s",text);
	return 1; }


public Givemoney(playerid,money) {
	CrashTest("[function] Givemoney");
	if(AFK[playerid]==0 && Login[playerid]==1) {
		CCCash[playerid]+=money;
		GlobalCash2+=money;
		if(GlobalCash2>1000000) { GlobalCash2-=1000000; GlobalCash1++; }
		GivePlayerMoney(playerid,money); }
	return 1; }


public Errorm(playerid) {
	if(Lang[playerid]==0) SendClientMessage(playerid,red," Неизвестная команда.");
	else SendClientMessage(playerid,red," Unknown command.");
	return 1;
}

public DeBug() {
	new Float:vHealth;
	for (new v = 1; v < MAX_VEHICLES; v++) {
		GetVehicleHealth(v,vHealth);
		if(vHealth==0) SetVehicleToRespawn(v); }


	/*
new temp=0;
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerSpawned[i]) {
new dis = GetDistanceBetweenVAP(i,v);
if (dis < 40) temp=1; }
if(temp==0) {
GetVehicleHealth(v,vHealth);
if(vHealth==0) SetVehicleToRespawn(v); }*/
	return 1; }


public PKick(playerid)
{
	TogglePlayerControllable(playerid,false);
	GameTextForPlayer(playerid, "~w~SERVER STATUS~n~ ~y~DISCONNECTED", 4000500, 4);
	Kick(playerid);
	return 1;
}
public PBan(playerid)
{
	TogglePlayerControllable(playerid,false);
	GameTextForPlayer(playerid, "~w~SERVER STATUS~n~ ~y~DISCONNECTED", 4000500, 4);
	SetPlayerBan(playerid, 7);
	return 1;
}

public PBanM(playerid)
{
	TogglePlayerControllable(playerid,false);
	GameTextForPlayer(playerid, "~w~SERVER STATUS~n~ ~y~DISCONNECTED", 4000500, 4);
	SetPlayerBanM(playerid, 30);
	return 1;
}


public IsNumeric(const string[]) {
	for (new i = 0, j = strlen(string); i < j; i++) if (string[i] > '9' || string[i] < '0') return 0;
	return 1;
}

public SetPlayerBanM(playerid, Float:minuts) {
	CrashTest("[function] SetPlayerBan");
	if (IsPlayerConnected(playerid)) {
		new ip[32];
		new name[32];
		new setb[256];
		GetPlayerIp(playerid,ip,32);
		GetPlayerName(playerid,name,32);
		new mtime = Now();
		new unban = mtime + floatround(minuts*60);
		format(setb,256,"%d %s %s\r\n", unban, ip, BanString);
		new File:bans=fopen(BANS, io_append);
		fwrite(bans, setb);
		fclose(bans);
		printf("[ban] %s banned", ip);
		Ban(playerid);
	}
	return 1; }


public SetPlayerBan(playerid, Float:days) {
	CrashTest("[function] SetPlayerBan");
	if (IsPlayerConnected(playerid)) {
		new ip[32];
		new name[32];
		new setb[256];
		GetPlayerIp(playerid,ip,32);
		GetPlayerName(playerid,name,32);
		new mtime = Now();
		new unban = mtime + floatround(days*86400);
		format(setb,256,"%d %s %s\r\n", unban, ip, BanString);
		new File:bans=fopen(BANS, io_append);
		fwrite(bans, setb);
		fclose(bans);
		printf("[ban] %s banned", ip);
		Ban(playerid);
	}
	return 1; }

public SetIpBan(const ip[], Float:days, reason[]) {
	CrashTest("[function] SetIpBan");
	new setb[256];
	new mtime = Now();
	new unban = mtime + floatround(days*86400);
	format(setb,256,"%d %s %s\r\n", unban, ip, reason);
	new File:bans=fopen(BANS, io_append);
	fwrite(bans, setb);
	fclose(bans);
	printf("[ipban] %s banned", ip);
	new string[256];
	format(string, sizeof(string), "banip %s", ip);
	SendRconCommand(string);
	SendRconCommand("reloadbans");
	return 1;
}

public BanCheck()
{
	CrashTest("[function] BanCheck");
	// ADV check
	new ADVTimeD;
	new ADVTimeM;
	new string[256];
	for(new i = 0; i < 3; i++) {
		format(string,sizeof(string),"ADV%d_d", i);
		ADVTimeD=dini_Int("LVM/system/config.ini",string);
		format(string,sizeof(string),"ADV%d_m", i);
		ADVTimeM=dini_Int("LVM/system/config.ini",string);
		new year,month,day;
		getdate(year,month,day);

		if((day>=ADVTimeD && month==ADVTimeM) || (month>ADVTimeM)) {

			new msg[256];
			format(string,sizeof(string),"ADV%d", i);
			format(msg,sizeof(msg),"Здесь может быть ваша реклама. Подробнее - gta.bews.tk");
			dini_Set("LVM/system/config.ini", string, msg);

			if(month!=2) {
				format(string,sizeof(string),"ADV%d_d", i);
				dini_IntSet("LVM/system/config.ini",string, day);
				format(string,sizeof(string),"ADV%d_m", i);
				dini_IntSet("LVM/system/config.ini",string, month+1);
			}else{
				format(string,sizeof(string),"ADV%d_d", i);
				dini_IntSet("LVM/system/config.ini",string, day+2);
				format(string,sizeof(string),"ADV%d_m", i);
				dini_IntSet("LVM/system/config.ini",string, month+1); }

		} }
	// ADV check
	new mtime=Now();
	new unset[1000];
	new cntset = 0;

	new File: file = fopen(BANS, io_read);
	if (file)
	{
		new Data[ 256 ], key[256], ip[256];
		while (fread(file, Data, sizeof(Data) ))
		{
			new idx;
			StripNewLine(Data);
			if (strlen(Data)!=0)
			{
				key = strtok( Data, idx);
				if(strval(key) <= mtime) {
					ip = strtok( Data, idx );
					Unban(ip);
					unset[cntset]=strval(key);
					cntset++;
				}
			}
		}
		fclose(file);
		for (new i=0;i<cntset;i++)
		{
			Unset(BANS,unset[i]);
		}
	}
	return 1; }

Unban(ip[])
{
	if(!isnull(ip)) {
		new string[64];
		format(string, 64, "unbanip %s", ip);
		SendRconCommand(string);
		printf("[unban] %s unbanned", ip);
		SendRconCommand("reloadbans");
	}
	Unset2(BANS,ip);
}

stock Unset(filename[],key) {
	new File:fohnd, File:fwhnd;
	new tmpres[256];
	new data[256];
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	fohnd=fopen(filename,io_read);
	if (fexist(tmpres)) fremove(tmpres);
	fwhnd=fopen(tmpres,io_write);
	while (fread(fohnd,tmpres))
	{
		StripNewLine(tmpres);
		new idx;
		data = strtok(tmpres,idx);
		if ((strlen(data)!=0) && (strval(data)!=key)) {
			format(tmpres,sizeof(tmpres),"%s\r\n",tmpres);
			fwrite(fwhnd,tmpres);
		}
	}
	fclose(fohnd);
	fclose(fwhnd);
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	if (fcopytextfile(tmpres,filename)) {
		return fremove(tmpres);
	}
	return false;
}

stock Unset2(filename[],key[]) {
	new File:fohnd, File:fwhnd;
	new tmpres[256];
	new data[256];
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	fohnd=fopen(filename,io_read);
	if (fexist(tmpres)) fremove(tmpres);
	fwhnd=fopen(tmpres,io_write);
	while (fread(fohnd,tmpres))
	{
		//		StripNewLine(tmpres);
		new idx;
		data = strtok(tmpres,idx);
		data = strtok(tmpres,idx);
		if ((strlen(data)!=0) && strcmp(data,key,true)!=0) {
			//			format(tmpres,sizeof(tmpres),"%s\r\n",tmpres);
			fwrite(fwhnd,tmpres);
		}
	}
	fclose(fohnd);
	fclose(fwhnd);
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	if (fcopytextfile(tmpres,filename)) {
		return fremove(tmpres);
	}
	return false;
}

public DestroyPickupEx( p )
{
	DestroyPickup( p );
	pickups[ p ][ creation_time ] = 0;
	pickups[ p ][ weapon ] = 0;
	pickups[ p ][ ammo ] = 0;
}

DropWeapons( playerid )
{
	CrashTest("[function] DropWeapons");

	new Float: px, Float: py, Float: pz;
	new hour,minute,second;
	new year, month,day;
	gettime(hour, minute, second);
	getdate(year, month, day);

	GetPlayerPos( playerid, px, py, pz );

	new weapon_slots[WEAPON_SLOTS + 1][2];
	new used_weapon_slots;

	for( new i = 0; i < WEAPON_SLOTS; i ++ )
	{
		GetPlayerWeaponData( playerid, i, weapon_slots[ i ][ 0 ], weapon_slots[ i ][ 1 ]);
		if( i == 0 && weapon_slots[ i ][ 0 ] == 0 ) weapon_slots[ i ][ 1 ] = 0; // no fist...

		if( weapon_slots[ i ][ 1 ] > 0 && weapon_slots[ i ][ 0 ] < sizeof( weapons ) && weapons[ weapon_slots[ i ][ 0 ] ] != -1 )
		{
			used_weapon_slots ++;
		}
		else
		{
			weapon_slots[ i ][ 0 ] = 0;
			weapon_slots[ i ][ 1 ] = 0;
		}
	}
	// Create the pickups
	new used_weapon_slots2 = used_weapon_slots;
	for( new i = 0; i < WEAPON_SLOTS; i ++ )
	{
		if( weapon_slots[ i ][ 1 ] > 0 )
		{
			new Float:angle = 360.0 - float(used_weapon_slots--) * ( 360.0 / float(used_weapon_slots2) );
			// see... if there's a pickup we create by any chance

			new p = CreatePickup( weapons[ weapon_slots[ i ][ 0 ] ], PICKUP_TYPE, px + floatsin(angle,degrees) * (used_weapon_slots2/2 + 1.0), py + floatcos(angle,degrees) * (used_weapon_slots2/2 + 1.0), pz );
			if( p == INVALID_PICKUP )
			{
				new lowest_time;
				new _id;
				for( new j = 0; j < MAX_PICKUPS; j ++ )
				{
					if( pickups[ j ][ creation_time ] < lowest_time )
					{
						lowest_time = pickups[ j ][ creation_time ];
						_id = j;
					}
				}

				DestroyPickupEx( _id );
				KillTimer( pickups[ _id ][ timer ] );
				p = CreatePickup( weapons[ weapon_slots[ i ][ 0 ] ], PICKUP_TYPE, px + floatsin(angle,degrees) * (used_weapon_slots2/2 + 1.0), py + floatcos(angle,degrees) * (used_weapon_slots2/2 + 1.0), pz );
			}
			pickups[ p ][ creation_time ] = mktime(hour,minute,second,day,month,year);
			pickups[ p ][ weapon ] = weapon_slots[ i ][ 0 ];
			pickups[ p ][ ammo ] = weapon_slots[ i ][ 1 ];
			#if MAX_DROP_AMOUNT != -1
			if( pickups[ p ][ ammo ] > MAX_DROP_AMOUNT )
			{
				pickups[ p ][ ammo ] = MAX_DROP_AMOUNT;
			}
			#endif
			pickups[ p ][ timer ] = SetTimerEx("DestroyPickupEx", MAX_DROP_LIFETIME * 1000, 0, "i", p);
		}
	}
}

PlaySoundForPlayer(playerid, soundid)
{
	new Float:pX, Float:pY, Float:pZ;
	GetPlayerPos(playerid, pX, pY, pZ);
	PlayerPlaySound(playerid, soundid,pX, pY, pZ);
}


public DestroyFloodEx(p)
{
	if(IsPlayerConnected(p))
	Mute[p] = 0;
	return 1;
}

public DestroyJailEx(p)
{
	if(IsPlayerConnected(p))
	Jail[p] = 0;
	SpawnPlayer(p);
	return 1;
}

public CheckFlood()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	if(IsPlayerConnected(i)) Flood[i]=0;
	return 1;
}
public CheckRepeat()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	if(IsPlayerConnected(i))
	Repeat[i]=0;
	return 1;
}
public CheckCAPS()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	if(IsPlayerConnected(i))
	CAPSLOCK[i]=0;
	return 1;
}


/* public SlapTestFin(playerid, plid, Float:Health) {
new name[MAX_PLAYER_NAME], string[256]; GetPlayerName(plid,name,sizeof(name));
if (IsPlayerConnected(plid) && playerSpawned[plid] && AFK[plid]==0) {
new Float:Health2;
GetPlayerHealth(plid,Health2);
if(Health==Health2) if(Lang[playerid]==0) format(string, sizeof(string), " Игрок %s (%d) читер: возможный GodMode.", name,plid);
else format(string, sizeof(string), " Player %s (%d) is cheater: possible GodMode.", name,plid);
else if(Lang[playerid]==0) format(string, sizeof(string), " Игрок %s (%d) не читер.", name,plid);
else format(string, sizeof(string), " Player %s (%d) is not cheater.", name,plid);
SendClientMessage(playerid,yellow,string);
}else{
if(Lang[playerid]==0) format(string, sizeof(string), " Игрок %s (%d) не заспаунен или не подключен.", name,plid);
else format(string, sizeof(string), " Player %s (%d) is not spawned or connected.", name,plid);
SendClientMessage(playerid,yellow,string); }
return 1; }

public SlapTestFinIrc(plid, Float:Health) {
new name[MAX_PLAYER_NAME], string[256]; GetPlayerName(plid,name,sizeof(name));
if (IsPlayerConnected(plid) && playerSpawned[plid] && AFK[plid]==0) {
new Float:Health2;
GetPlayerHealth(plid,Health2);
if(Health==Health2) format(string, sizeof(string), "3Игрок %s (%d) читер: возможный GodMode.", name,plid);
else format(string, sizeof(string), "3Игрок %s (%d) не читер.", name,plid);
IRC_Say(EchoConnection1, EchoChan, string);
}else{
format(string, sizeof(string), "3Игрок %s (%d) не заспаунен или не подключен.", name,plid);
IRC_Say(EchoConnection1, EchoChan, string); }
return 1; }

public SlapTestFinMenu(playerid, plid, Float:Health) {
new name[MAX_PLAYER_NAME], string[256]; GetPlayerName(plid,name,sizeof(name));
if (IsPlayerConnected(plid) && playerSpawned[plid] && AFK[plid]==0) {
new Float:Health2;
GetPlayerHealth(plid,Health2);
if(Health==Health2) if(Lang[playerid]==0) format(string, sizeof(string), " Игрок %s (%d) читер: возможный GodMode.", name,plid);
else format(string, sizeof(string), " Player %s (%d) is cheater: possible GodMode.", name,plid);
else if(Lang[playerid]==0) format(string, sizeof(string), " Игрок %s (%d) не читер.", name,plid);
else format(string, sizeof(string), " Player %s (%d) is not cheater.", name,plid);
if(Lang[playerid]==0) ShowPlayerDialog(playerid, 134, DIALOG_STYLE_MSGBOX, "Информация", string, "OK", "Закрыть");
else ShowPlayerDialog(playerid, 134, DIALOG_STYLE_MSGBOX, "Information", string, "OK", "Close");
}else{
if(Lang[playerid]==0) format(string, sizeof(string), " Игрок %s (%d) не заспаунен или не подключен.", name,plid);
else format(string, sizeof(string), " Player %s (%d) is not spawned or connected.", name,plid);
if(Lang[playerid]==0) ShowPlayerDialog(playerid, 134, DIALOG_STYLE_MSGBOX, "Информация", string, "OK", "Закрыть");
else ShowPlayerDialog(playerid, 134, DIALOG_STYLE_MSGBOX, "Information", string, "OK", "Close"); }
return 1; } */



public CheckNActive() {
	CrashTest("[function] CheckNActive");
	/*
for(new i = 0; i < MAX_PLAYERS; i++)
if(IsPlayerConnected(i))
if(PLgaming[i]==0) {
NActiveT[i]++;
if(NActiveT[i]>4) if(Login[i]==1)
if(GetPlayerState(i)!=PLAYER_STATE_SPECTATING) {
if(AFK[i]==0) {
new name[MAX_PLAYER_NAME]; GetPlayerName(i,name,sizeof(name));
format(name, sizeof(name), "%s_AWAY",name);
SetPlayerName(i,name);
TogglePlayerControllable(i,0);
SetPlayerColor(i,playerColorOnCon);
RaceExitCH(i); DMExitCH(i);
if(Lang[i]==0) SendClientMessage(i, yellow, " Включён режим AFK.");
else SendClientMessage(i, yellow, " You now in AFK mode.");
AFK[i]=1; } }
}else NActiveT[i]=0;
*/
	return 1; }

public CheckLogin(playerid) {
	CrashTest("[function] CheckLogin");
	if(IsPlayerConnected(playerid))
	if(Login[playerid]==0) {
		new string[256];
		new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
		format(string,sizeof(string)," ([%d] %s) - Server: вход не произведён",playerid,name);
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: вход не произведён",EchoChan,playerid,name);
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: вход не произведён");
		else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: login failed");
		SetTimerEx("PKick", 50, 0, "i",playerid); }
	return 1; }

public CheckPing() {
	CrashTest("[function] CheckPing");

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(GetPlayerPing(i)>1000) {
		new name[MAX_PLAYER_NAME], string[256];
		GetPlayerName(i,name,sizeof(name));
		format(string,sizeof(string)," ([%d] %s) - Server: пинг",i,name);
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: пинг",EchoChan,i,name);
		IRC_SendRaw(EchoConnection2, string);
		if(Lang[i]==0) SendClientMessage(i, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: высокий пинг");
		else SendClientMessage(i, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: high ping");
		SetTimerEx("PKick", 50, 0, "i",i); }

	return 1; }

public ReturnPlayers() { new Players; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) Players++; return Players; }


public PLOnConnMessage1() {
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string,sizeof(string)," *** На сервере %d игрок.",ReturnPlayers());
		SendClientMessage(i, yellow, string);
	}else{
		format(string,sizeof(string)," *** Server has %d player.",ReturnPlayers());
		SendClientMessage(i, yellow, string); }
}

public PLOnConnMessage2() {
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string,sizeof(string)," *** На сервере %d игрока.",ReturnPlayers());
		SendClientMessage(i, yellow, string);
	}else{
		format(string,sizeof(string)," *** Server has %d players.",ReturnPlayers());
		SendClientMessage(i, yellow, string); }
}

public PLOnConnMessage3() {
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string,sizeof(string)," *** На сервере %d игроков.",ReturnPlayers());
		SendClientMessage(i, yellow, string);
	}else{
		format(string,sizeof(string)," *** Server has %d players.",ReturnPlayers());
		SendClientMessage(i, yellow, string); }
}


public CheckSpeedo() {

	new string[256];
	new string01[256];
	new string02[256];
	for(new i=0;i<MAX_PLAYERS;i++)
	if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) {
		new Float:x,Float:y,Float:z;
		new Float:distance,value;
		GetPlayerPos(i, x, y, z);
		distance = floatsqroot(floatpower(floatabs(floatsub(x,SavePlayerPos[i][LastX])),2)+floatpower(floatabs(floatsub(y,SavePlayerPos[i][LastY])),2)+floatpower(floatabs(floatsub(z,SavePlayerPos[i][LastZ])),2));
		value = floatround((distance*2560)/3100);
		if(value>250) SpeedCH[i]++; else SpeedCH[i]=0;
		if(value<=40) format(string01, sizeof(string01), "~r~",value);
		if(value>40 && value<=100) format(string01, sizeof(string01), "~g~",value);
		if(value>100) format(string01, sizeof(string01), "~b~",value);
		new Float:Can; GetVehicleHealth(GetPlayerVehicleID(i), Can);
		if(Can<=500) format(string02, sizeof(string02), "~r~",value);
		if(Can>500 && Can<1000) format(string02, sizeof(string02), "~g~",value);
		if(Can>=1000) format(string02, sizeof(string02), "~b~",value);

		format(string, sizeof(string), "~w~~h~~h~Speed: %s%d ~w~Km/H~n~~n~~w~~h~Veh Health: %s%0.0f", string01, value, string02, Can);
		TextDrawSetString(GostergeYazi[i], string);
		if(GetPlayerInterior(i)==0) {
			new h=0; for(new k=0;k<364;k++) if(h==0) if(IsPlayerInZone(i, k)) {
				TextDrawSetString(LocDraw[i], zones[k][zone_name]); h=1; } }
		if(SpeedoShow[i]==0) {
			TextDrawShowForPlayer(i, Text:ArkaPlan0);
			TextDrawShowForPlayer(i, Text:ArkaPlan1);
			TextDrawShowForPlayer(i, Text:ArkaPlan2);
			TextDrawShowForPlayer(i, Text:ArkaPlan3);
			TextDrawShowForPlayer(i, Text:ArkaPlan4);
			TextDrawShowForPlayer(i, Text:ArkaPlan5);
			TextDrawShowForPlayer(i, Text:ArkaPlan6);
			//			TextDrawShowForPlayer(playerid, Text:Cizgi);
			TextDrawShowForPlayer(i, GostergeYazi[i]);
			if(GetPlayerInterior(i)==0) TextDrawShowForPlayer(i, LocDraw[i]);
			SpeedoShow[i]=1; }

		if(value >= 250) TextDrawTextSize(Hizg[i],603.000000,0.000000);
		else TextDrawTextSize(Hizg[i], floatadd(534.0, floatdiv(value, 3.900000)),0.000000);
		TextDrawShowForPlayer(i, Hizg[i]);

		if(Can <= 0) TextDrawTextSize(Cang[i],538.000000,0.000000);
		else if(Can >= 1000) TextDrawTextSize(Cang[i],603.000000,0.000000);
		else TextDrawTextSize(Cang[i],floatadd(534.0, floatdiv(Can, 14.6000000)),0.000000);
		TextDrawShowForPlayer(i, Cang[i]);

		//GameTextForPlayer(i,string,3500,3);
		SavePlayerPos[i][LastX] = x;
		SavePlayerPos[i][LastY] = y;
		SavePlayerPos[i][LastZ] = z;


		if(SpeedCH[i]==5 && GetPlayerState(i) == PLAYER_STATE_DRIVER) {
			new name[MAX_PLAYER_NAME]; GetPlayerName(i,name,sizeof(name));
			format(string,sizeof(string)," ([%d] %s) - Server: спидхак",i,name);
			SendMessageToAdmins(string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: спидхак",EchoChan,i,name);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[i]==0) SendClientMessage(i, COLOR_ORANGE, "*** Вы были забанены с сервера. Информация - Server: спидхак");
			else SendClientMessage(i, COLOR_ORANGE, "*** You was banned from the server. Information - Server: speed hack");

			format(string,sizeof(string), "player: %s; admin: Server; reason: speed hack",name);
			SetTimerEx("PBan", 50, 0, "is",i,string); }
	}else if(SpeedoShow[i]==1) {
		TextDrawHideForPlayer(i, Text:ArkaPlan0);
		TextDrawHideForPlayer(i, Text:ArkaPlan1);
		TextDrawHideForPlayer(i, Text:ArkaPlan2);
		TextDrawHideForPlayer(i, Text:ArkaPlan3);
		TextDrawHideForPlayer(i, Text:ArkaPlan4);
		TextDrawHideForPlayer(i, Text:ArkaPlan5);
		TextDrawHideForPlayer(i, Text:ArkaPlan6);
		TextDrawHideForPlayer(i, Hizg[i]);
		TextDrawHideForPlayer(i, Cang[i]);
		TextDrawHideForPlayer(i, GostergeYazi[i]);
		TextDrawHideForPlayer(i, LocDraw[i]);
		SpeedoShow[i]=0; }

	return 1; }

/*
public CheckSpeedo() {
new string[256];
for(new i=0;i<MAX_PLAYERS;i++)
if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) {
new Float:x,Float:y,Float:z;
new Float:distance,value;
GetPlayerPos(i, x, y, z);
distance = floatsqroot(floatpower(floatabs(floatsub(x,SavePlayerPos[i][LastX])),2)+floatpower(floatabs(floatsub(y,SavePlayerPos[i][LastY])),2)+floatpower(floatabs(floatsub(z,SavePlayerPos[i][LastZ])),2));
value = floatround((distance*2560)/3100);
if(value>250) SpeedCH[i]++; else SpeedCH[i]=0;
if(value<=40) format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Km/H: ~r~%d",value);
if(value>40 && value<=100) format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Km/H: ~g~%d",value);
if(value>100) format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Km/H: ~b~%d",value);
if(Speedo[i]==0 && Speedtemp[i]==0) GameTextForPlayer(i,string,3500,3);
SavePlayerPos[i][LastX] = x;
SavePlayerPos[i][LastY] = y;
SavePlayerPos[i][LastZ] = z;

if(SpeedCH[i]==5 && GetPlayerState(i) == PLAYER_STATE_DRIVER) {
new name[MAX_PLAYER_NAME]; GetPlayerName(i,name,sizeof(name));
format(string,sizeof(string)," ([%d] %s) - Server: спидхак",i,name);
SendMessageToAdmins(string);
format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: спидхак",EchoChan,i,name);
IRC_SendRaw(EchoConnection2, string);
if(Lang[i]==0) SendClientMessage(i, COLOR_ORANGE, "*** Вы были забанены с сервера. Информация - Server: спидхак");
else SendClientMessage(i, COLOR_ORANGE, "*** You was banned from the server. Information - Server: speed hack");

format(string,sizeof(string), "player: %s; admin: Server; reason: speed hack",name);
SetTimerEx("PBan", 50, 0, "is",i,string); }
}

return 1; }
*/

public PLOnConn()
{
	CrashTest("[function] PLOnConn");
	new tempr[256];
	format(tempr,sizeof(tempr),"%d",ReturnPlayers());
	//format(tempr,sizeof(tempr),"11");

	if ((strlen(tempr) == 1)) {
		if(strcmp(tempr[0],"1",true)==0) {
			PLOnConnMessage1();
			return 1;
		}
		if(strcmp(tempr[0],"2",true)==0) {
			PLOnConnMessage2();
			return 1;
		}
		if(strcmp(tempr[0],"3",true)==0) {
			PLOnConnMessage2();
			return 1;
		}
		if(strcmp(tempr[0],"4",true)==0) {
			PLOnConnMessage2();
			return 1;
		}
		PLOnConnMessage3();
	}


	if ((strlen(tempr) == 2)) {

		//printf("%s, %d",tempr[0],tempr[0]);

		if(ReturnPlayers() >= 10 && ReturnPlayers() <= 20) {
			PLOnConnMessage3();
			return 1;
		}


		if(strcmp(tempr[1],"1",true)==0) {
			PLOnConnMessage1();
			return 1;
		}
		if(strcmp(tempr[1],"2",true)==0) {
			PLOnConnMessage2();
			return 1;
		}
		if(strcmp(tempr[1],"3",true)==0) {
			PLOnConnMessage2();
			return 1;
		}
		if(strcmp(tempr[1],"4",true)==0) {
			PLOnConnMessage2();
			return 1;
		}
		PLOnConnMessage3();
	}


	if ((strlen(tempr) == 3)) {
		if(ReturnPlayers() >= 110 && ReturnPlayers() <= 120) {
			PLOnConnMessage3();
			return 1;
		}
		if(strcmp(tempr[2],"1",true)==0) {
			PLOnConnMessage1();
			return 1;
		}
		if(strcmp(tempr[2],"2",true)==0) {
			PLOnConnMessage2();
			return 1;
		}
		if(strcmp(tempr[2],"3",true)==0) {
			PLOnConnMessage2();
			return 1;
		}
		if(strcmp(tempr[2],"4",true)==0) {
			PLOnConnMessage2();
			return 1;
		}
		PLOnConnMessage3();
	}

	return 1;
}

public BankCh() { SetTimer("BankCh2",600000, 0); return 1; }
public BankCh2() {
	CrashTest("[function] BankCh2");
	if(ReturnPlayers()!=0) IRC_Say(EchoConnection2, EchoChan, "9*** Проценты банка (личные). ");
	new string[256];
	for(new i=0;i<MAX_PLAYERS;i++)
	if(IsPlayerConnected(i)) {
		new money=Bank[i]/100;
		Givemoney(i,money);
		if(Lang[i]==0) format(string, sizeof(string), " Вы получили $%d от ваших вкладов в банке.", money);
		else format(string, sizeof(string), " You have received $%d from your bank account.", money);
		SendClientMessage(i, yellow, string); }
	SetTimer("BankCh3",600000, 0); return 1; }

public BankCh3() {
	CrashTest("[function] BankCh3");

	if(ReturnPlayers()!=0) IRC_Say(EchoConnection2, EchoChan, "9*** Проценты банка (банды). ");


	SetTimer("BankCh",600000,0);

	new string[256];
	for(new i=0;i<MAX_PLAYERS;i++)
	if(IsPlayerConnected(i))
	if(Gang[i]!=0) {
		new Pgang[256]; format(Pgang,sizeof(Pgang),"LVM/gangs/%s.ini", PLGangName[i]);
		new money=dini_Int(Pgang,"bank");
		if(Gang[i]==1) {
			Givemoney(i,money/200);
			if(Lang[i]==0) format(string, sizeof(string), " Вы получили $%d от вкладов вашей банды в банке.", money/200);
			else format(string, sizeof(string), " You have received $ %d from your gang's account.", money/200);
			SendClientMessage(i, yellow, string);
		}else{
			Givemoney(i,money/100);
			if(Lang[i]==0) format(string, sizeof(string), " Вы получили $%d от вкладов вашей банды в банке.", money/100);
			else format(string, sizeof(string), " You have received $ %d from your gang's account.", money/100);
			SendClientMessage(i, yellow, string); } }
	return 1;
}

stock GetDistanceBetweenVehicles(v1,v2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	new Float:tmpdis;
	GetVehiclePos(v1,x1,y1,z1);
	GetVehiclePos(v2,x2,y2,z2);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
	return floatround(tmpdis);
}

stock GetDistanceBetweenVAP(playerid,v) {
	new Float:x1 = Xbombb[playerid];
	new Float:y1 = Ybombb[playerid];
	new Float:z1 = Zbombb[playerid];
	new Float:x2,Float:y2,Float:z2;
	new Float:tmpdis;
	GetVehiclePos(v,x2,y2,z2);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
	return floatround(tmpdis);
}

stock GetDistanceBetweenCOR(Float:x1, Float:y1, Float:z1, Float:x2,Float:y2,Float:z2) {
	new Float:tmpdis;
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
	return floatround(tmpdis);
}


public PlayerUpdateCH() {
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) PLgaming[i]=0; return 1; }

public VehicleUnlCH(playerid) RemovePlayerFromVehicle(playerid);

public VehicleCH(playerid) {
	CrashTest("[function] VehicleCH");
	if(!IsPlayerInAnyVehicle(playerid)) if(PLSpecP[playerid]==1)
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(PLSpecO[i]==playerid) PlayerSpectatePlayer(i, playerid);
	return 1; }

public LottoST() {
	CrashTest("[function] LottoST");
	new string[256];

	if(LottoStarted==0) {
		LottoStarted=1;
		LottoGlobal=0;
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		if(Lang[i]==0) {
			format(string,sizeof(string)," *** Открыта лотерея! Чтобы принять участие используйте '/lotto', доступные номера 1-10.");
			SendClientMessage(i, yellow, string);
		}else{
			format(string,sizeof(string)," *** The lottery is opened! To take part use '/lotto', accessible numbers 1-10.");
			SendClientMessage(i, yellow, string); }

		format(string,sizeof(string),"7*** Открыта лотерея!");
		if(ReturnPlayers()!=0) IRC_Say(EchoConnection1, EchoChan, string);

		SetTimer("LottoST", 240000, 0);
		return 1; }

	if(LottoStarted==1) {
		LottoStarted=5;

		new winners[256];
		format(winners,sizeof(winners),"none");
		new ttt;
		new rand = random(10);
		if(rand==0) rand=10;

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(Lotto[i] == rand) {
			Givemoney(i, LottoMon[i]*2);
			LottoGlobal-=LottoMon[i]*2;
			new ref[MAX_PLAYER_NAME]; GetPlayerName(i,ref,sizeof(ref));
			if(ttt==0){ format(winners,sizeof(winners),"%s",ref); ttt=1; }
			else format(winners,sizeof(winners),"%s, %s",winners,ref); }

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		if(Lang[i]==0) {
			format(string,sizeof(string)," *** Результаты лотереи - выиграл номер: %d. Победители: %s.", rand, winners);
			SendClientMessage(i, yellow, string);
		}else{
			format(string,sizeof(string)," *** Lottery results - win number: %d. Winners: %s.", rand, winners);
			SendClientMessage(i, yellow, string); }

		format(string,sizeof(string),"7*** Результаты лотереи - выиграл номер: %d. Победители: %s.", rand, winners);
		if(ReturnPlayers()!=0) IRC_Say(EchoConnection1, EchoChan, string);

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) Lotto[i] = 0;
		SetTimer("LottoST", 20000, 0);
		return 1; }

	if(LottoStarted==5) {
		if(LottoGlobal<=0) { LottoStarted=0; LottoGlobal=0; return 1; }
		LottoStarted=2;
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		if(Lang[i]==0) {
			format(string,sizeof(string)," *** Выиграй джекпот лотереи ($%d)! Чтобы принять участие используйте '/lotto', доступные номера 1-20. (Стоимость билета $20000)", LottoGlobal);
			SendClientMessage(i, yellow, string);
		}else{
			format(string,sizeof(string)," *** Win lottery jackpot ($%d)! To participate, use '/lotto', available numbers 1-20. (Ticket cost $20000)", LottoGlobal);
			SendClientMessage(i, yellow, string); }

		format(string,sizeof(string),"7*** Открыт розыгрыш джекпота лотереи!");
		IRC_Say(EchoConnection1, EchoChan, string);

		SetTimer("LottoST", 240000, 0);
		return 1; }

	if(LottoStarted==2) {
		LottoStarted=0;

		new winners[256];
		new winnersnum;
		format(winners,sizeof(winners),"none");
		new ttt;
		new rand = random(20);
		if(rand==0) rand=20;

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(Lotto[i] == rand)
		winnersnum++;

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(Lotto[i] == rand) {
			Givemoney(i, LottoGlobal/winnersnum);
			new ref[MAX_PLAYER_NAME]; GetPlayerName(i,ref,sizeof(ref));
			if(ttt==0){ format(winners,sizeof(winners),"%s",ref); ttt=1; }
			else format(winners,sizeof(winners),"%s, %s",winners,ref); }

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		if(Lang[i]==0) {
			format(string,sizeof(string)," *** Результаты лотереи - номер джекпота: %d. Победители: %s.", rand, winners);
			SendClientMessage(i, yellow, string);
		}else{
			format(string,sizeof(string)," *** Lottery results - jackpot number: %d. Winners: %s.", rand, winners);
			SendClientMessage(i, yellow, string); }

		format(string,sizeof(string),"7*** Результаты лотереи - номер джекпота: %d. Победители: %s.", rand, winners);
		IRC_Say(EchoConnection1, EchoChan, string);

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) Lotto[i] = 0;
		LottoGlobal=0;
		return 1; }

	return 1; }


public UnlockCH(playerid) {
	CrashTest("[function] UnlockCH");

	if(LKills[playerid]==40) {
		SetVehicleParamsForPlayer(vehhanter,playerid, 0, 0);
		if(Lang[playerid]==0)
		SendClientMessage(playerid, yellow, " Hunter разблокирован.");
		else
		SendClientMessage(playerid, yellow, " Hunter unlocked.");
		return 1; }

	if(LKills[playerid]==30) {
		SetVehicleParamsForPlayer(vehhydra,playerid, 0, 0);
		if(Lang[playerid]==0)
		SendClientMessage(playerid, yellow, " Hydra разблокирована.");
		else
		SendClientMessage(playerid, yellow, " Hydra unlocked.");
		return 1; }

	if(LKills[playerid]==20) {
		SetVehicleParamsForPlayer(vehtank,playerid, 0, 0);
		if(Lang[playerid]==0)
		SendClientMessage(playerid, yellow, " Rhino разблокирован.");
		else
		SendClientMessage(playerid, yellow, " Rhino unlocked.");
		return 1; }

	if(LKills[playerid]==10) {
		SetVehicleParamsForPlayer(vehvorob,playerid, 0, 0);
		if(Lang[playerid]==0)
		SendClientMessage(playerid, yellow, " Seasparrow разблокирован.");
		else
		SendClientMessage(playerid, yellow, " Seasparrow unlocked.");
		return 1; }

	return 1; }


public TeleV(VID,num,playerid) {
	CrashTest("[function] TeleV");
	telep[playerid]=0;
	if(!IsPlayerConnected(playerid)) return 1;

	new Float:XXX,Float:YYY,Float:ZZZ;
	GetPlayerPos(playerid, XXX,YYY,ZZZ);


	format(string1,sizeof(string1),"%f",XXX);
	format(string2,sizeof(string2),"%f",XX[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	format(string1,sizeof(string1),"%f",YYY);
	format(string2,sizeof(string2),"%f",YY[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	SetPlayerVirtualWorld(playerid,0);

	if(num==1000) {
		SetVehiclePos(VID, 1783.0664,-1927.6073,13.1322);
		SendClientMessage(playerid, green, " Los Santos");
		return 1;
	}
	if(num==2000) {
		SetVehiclePos(VID, 2390.3508,1000.9565,10.4801);
		SendClientMessage(playerid, green, " Las Venturas");
		return 1;
	}
	if(num==3000) {
		SetVehiclePos(VID,-1975.2550,187.9421,27.3400);
		SendClientMessage(playerid, green, " San Fierro");
		return 1;
	}

	return 1;
}

public Duel(playerid,inter,weap) {
	CrashTest("[function] Duel");
	telep[playerid]=0;
	if(!IsPlayerConnected(playerid)) return 1;

	new string[256];
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));

	new Float:XXX,Float:YYY,Float:ZZZ;
	GetPlayerPos(playerid, XXX,YYY,ZZZ);


	format(string1,sizeof(string1),"%f",XXX);
	format(string2,sizeof(string2),"%f",XX[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	format(string1,sizeof(string1),"%f",YYY);
	format(string2,sizeof(string2),"%f",YY[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	if(DuelStarted==2) {
		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Дуэль уже началась.");
		else SendClientMessage(playerid, yellow, " Duel is already begun."); return 1; }

	SetPlayerVirtualWorld(playerid,0);

	if(DuelStarted==1) if(DuelMember[0]==playerid) return 1;

	SetPlayerInterior(playerid, 0);
	TogglePlayerControllable(playerid,0);

	if(DuelStarted==0) {

		if(inter==1) {
			SetPlayerPos(playerid,2495.0801,2375.5515,71.0496);
			SetPlayerFacingAngle(playerid, 87.4091);
			SetCameraBehindPlayer(playerid); }

		if(inter==2) {
			SetPlayerPos(playerid,2057.7466,2416.8193,45.2265);
			SetPlayerFacingAngle(playerid, 270.3272);
			SetCameraBehindPlayer(playerid); }

		if(inter==3) {
			SetPlayerPos(playerid,-599.3413,2595.7524,65.8368);
			SetPlayerFacingAngle(playerid, 271.2477);
			SetCameraBehindPlayer(playerid); }

		DuelMember[0]=playerid;
		DuelStarted=1; DuelInt=inter; DuelWeap=weap;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Ожидание противника.");
		else SendClientMessage(playerid, yellow, " Waiting for the opponent.");

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		if(Lang[i]==0) {
			format(string,sizeof(string)," *** [%d] %s приглашает на дуэль. Оружие: %s (%d)",playerid,name,DUEL_WeaponNames[DuelWeap],DuelWeap);
			SendClientMessage(i, COLOUR_LIGHTBLUE, string);
		}else{
			format(string,sizeof(string)," *** [%d] %s invites to duel. The weapon: %s (%d)",playerid,name,DUEL_WeaponNames[DuelWeap],DuelWeap);
			SendClientMessage(i, COLOUR_LIGHTBLUE, string); }

		format(string, sizeof(string), "11*** [%d] %s приглашает на дуэль. Оружие: %s (%d)",playerid,name,DUEL_WeaponNames[DuelWeap],DuelWeap);
		IRC_Say(EchoConnection2, EchoChan, string);

	}else{
		if(DuelInt==1) {
			SetPlayerPos(playerid,2449.1580,2375.7651,71.0496);
			SetPlayerFacingAngle(playerid, 270.9381);
			SetCameraBehindPlayer(playerid); }

		if(DuelInt==2) {
			SetPlayerPos(playerid,2114.6917,2416.7012,45.2188);
			SetPlayerFacingAngle(playerid, 91.3937);
			SetCameraBehindPlayer(playerid); }

		if(DuelInt==3) {
			SetPlayerPos(playerid,-553.7957,2594.4143,65.8368);
			SetPlayerFacingAngle(playerid, 89.4918);
			SetCameraBehindPlayer(playerid); }

		DuelMember[1]=playerid;
		DuelStarted=2;
		SetTimer("DuelTimerSt", 1000, 0);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Дуэль начинается..");
		else SendClientMessage(playerid, yellow, " Duel is starting.."); 

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		if(Lang[i]==0) {
			format(string,sizeof(string)," *** [%d] %s принял дуэль.",playerid,name);
			SendClientMessage(i, COLOUR_LIGHTBLUE, string);
		}else{
			format(string,sizeof(string)," *** [%d] %s has accepted duel.",playerid,name);
			SendClientMessage(i, COLOUR_LIGHTBLUE, string); }

		format(string, sizeof(string), "11*** [%d] %s принял дуэль.",playerid,name);
		IRC_Say(EchoConnection2, EchoChan, string); }

	return 1; }

public DuelTimerSt() {
	CrashTest("[function] DuelTimerSt");
	if(DuelTimerCnt==0) DuelTimerCnt=4;
	if(DuelTimerCnt==4) {
		for(new i = 0; i < 2; i++) { PlayerPlaySound(DuelMember[i],1056,0,0,0); GameTextForPlayer(DuelMember[i],"3",1000,5); }
		DuelTimerCnt--; SetTimer("DuelTimerSt", 1000, 0); return 1; }

	if(DuelTimerCnt==3) {
		for(new i = 0; i < 2; i++) { PlayerPlaySound(DuelMember[i],1056,0,0,0); GameTextForPlayer(DuelMember[i],"2",1000,5); }
		DuelTimerCnt--; SetTimer("DuelTimerSt", 1000, 0); return 1; }

	if(DuelTimerCnt==2) {
		for(new i = 0; i < 2; i++) { PlayerPlaySound(DuelMember[i],1056,0,0,0); GameTextForPlayer(DuelMember[i],"1",1000,5); }
		DuelTimerCnt--; SetTimer("DuelTimerSt", 1000, 0); return 1; }

	if(DuelTimerCnt==1)
	if(DuelStarted!=0) {
		for(new i = 0; i < 2; i++) {
			PlayerPlaySound(DuelMember[i],1057,0,0,0);
			TogglePlayerControllable(DuelMember[i],1);
			SetPlayerHealth(DuelMember[i],100);
			SetPlayerArmour(DuelMember[i],0);
			ResetPlayerWeapons(DuelMember[i]);
			SetPlayerSkillLevel(i,WEAPONSKILL_PISTOL,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_PISTOL_SILENCED,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_DESERT_EAGLE,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_SHOTGUN,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_SAWNOFF_SHOTGUN,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_SPAS12_SHOTGUN,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_MICRO_UZI,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_MP5,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_AK47,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_M4,999);
			SetPlayerSkillLevel(i,WEAPONSKILL_SNIPERRIFLE,999);
			GivePlayerWeapon(DuelMember[i],DUEL_Weapons[DuelWeap][0],DUEL_Weapons[DuelWeap][1]); }
		DuelMTimer=SetTimer("DuelCheck", 300, 1); }

	return 1; }

public DuelCheck() {
	if(DuelStarted!=2) { KillTimer(DuelMTimer); DuelTimerCnt=0; return 1; }

	new Float:Xtm, Float:Ytm, Float:Ztm;

	if(DuelInt==1)
	for(new i = 0; i < 2; i++) { 
		GetPlayerPos(DuelMember[i], Xtm, Ytm, Ztm);
		if(Xtm <= 2444.80) SetPlayerPos(DuelMember[i], 2444.80, Ytm, Ztm);
		if(Xtm >= 2497.46) SetPlayerPos(DuelMember[i], 2497.46, Ytm, Ztm);
		if(Ytm <= 2350.79) SetPlayerPos(DuelMember[i], Xtm, 2350.79, Ztm);
		if(Ytm >= 2403.06) SetPlayerPos(DuelMember[i], Xtm, 2403.06, Ztm); }

	if(DuelInt==2)
	for(new i = 0; i < 2; i++) {
		GetPlayerPos(DuelMember[i], Xtm, Ytm, Ztm);
		if(Xtm <= 2054.14) SetPlayerPos(DuelMember[i], 2054.14, Ytm, Ztm);
		if(Xtm >= 2117.37) SetPlayerPos(DuelMember[i], 2116.77, Ytm, Ztm);
		if(Ytm <= 2381.07) SetPlayerPos(DuelMember[i], Xtm, 2381.07, Ztm);
		if(Ytm >= 2437.22) SetPlayerPos(DuelMember[i], Xtm, 2437.22, Ztm); }

	if(DuelInt==3)
	for(new i = 0; i < 2; i++) {
		GetPlayerPos(DuelMember[i], Xtm, Ytm, Ztm);
		if(Xtm <= -600.94) SetPlayerPos(DuelMember[i], -600.94, Ytm, Ztm);
		if(Xtm >= -551.75) SetPlayerPos(DuelMember[i], -551.75, Ytm, Ztm);
		if(Ytm <= 2575.61) SetPlayerPos(DuelMember[i], Xtm, 2575.61, Ztm);
		if(Ytm >= 2611.11) SetPlayerPos(DuelMember[i], Xtm, 2611.11, Ztm); }
	return 1; }


public DuelStop(winid) {
	CrashTest("[function] DuelStop");
	new name[MAX_PLAYER_NAME]; GetPlayerName(winid,name,sizeof(name));
	new string[256];

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string,sizeof(string)," *** [%d] %s выиграл дуэль.",winid,name);
		SendClientMessage(i, COLOUR_LIGHTBLUE, string);
	}else{
		format(string,sizeof(string)," *** [%d] %s has won duel.",winid,name);
		SendClientMessage(i, COLOUR_LIGHTBLUE, string); }

	format(string, sizeof(string), "11*** [%d] %s выиграл дуэль.",winid,name);
	IRC_Say(EchoConnection2, EchoChan, string);
	
	DuelStarted=0;
	SpawnPlayer(winid);
	return 1; }

public DuelStopL(looseid) {
	SpawnPlayer(looseid);
	return 1; }


public DuelStop2(playerid) {
	CrashTest("[function] DuelStop2");
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	new string[256];

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string,sizeof(string)," *** [%d] %s отменил дуэль.",playerid,name);
		SendClientMessage(i, COLOUR_LIGHTBLUE, string);
	}else{
		format(string,sizeof(string)," *** [%d] %s has cancelled duel.",playerid,name);
		SendClientMessage(i, COLOUR_LIGHTBLUE, string); }

	format(string, sizeof(string), "11*** [%d] %s отменил дуэль.",playerid,name);
	IRC_Say(EchoConnection2, EchoChan, string);
	
	DuelStarted=0;
	SpawnPlayer(playerid);
	return 1; }

public Gangst(playerid,st){
	CrashTest("[function] Gangst");
	new Pgang[256]; format(Pgang,sizeof(Pgang),"LVM/gangs/%s.ini", PLGangName[playerid]);
	if(st==0) dini_IntSet(Pgang,"kills",dini_Int(Pgang,"kills")+1);
	if(st==1) dini_IntSet(Pgang,"deaths",dini_Int(Pgang,"deaths")+1);
	return 1; }


public GangCr(playerid){
	CrashTest("[function] GangCr");
	new string[256];
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) GangCreator[i]=0;
	if(strcmp(Gnowgang,"None",true)==0) return 1;

	if(Gang[playerid]!=0){ Gwantmembers=0; return 1; }

	if(CCCash[playerid]<=GANG_COST){
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
		else SendClientMessage(playerid, yellow, " Not enough money.");
		Gwantmembers=0;
		return 1; }

	if(Gwantmembers<5) {
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0) {
			if(Lang[i]==0) format(string, sizeof(string), " *** Банда '%s' не создана (недостаточно участников).", Gnowgang);
			else format(string, sizeof(string), " *** Gang '%s' is not created (not enough players).", Gnowgang);
			SendClientMessage(i, yellow, string); }
		format(string, sizeof(string),"7*** Банда '%s' не создана (недостаточно участников).", Gnowgang);
		IRC_Say(EchoConnection2, EchoChan, string);
		Gwantmembers=0;
		return 1; }

	new Pnowgang[256]; format(Pnowgang,sizeof(Pnowgang),"LVM/gangs/%s.ini", Gnowgang);

	dini_Create(Pnowgang);
	dini_IntSet(Pnowgang,"members",5);
	dini_Set(Pnowgang,"color","0xFFFFFF");
	dini_Set(Pnowgang,"leader",name);
	dini_Set(Pnowgang,"player_0",name);

	new Coloren;

	new gangpl1[MAX_PLAYER_NAME]; GetPlayerName(Ggangtplid1,gangpl1,sizeof(gangpl1));
	dini_Set(Pnowgang,"player_1",gangpl1);
	new PFgangpl1[256]; format(PFgangpl1,sizeof(PFgangpl1),"LVM/players/%s.ini",gangpl1);
	Gang[Ggangtplid1]=1;
	TextDrawSetString(GangDraw[Ggangtplid1], "$00000000");
	TextDrawShowForPlayer(playerid, GangDraw[Ggangtplid1]);
	dini_IntSet(PFgangpl1,"gang",1);
	dini_Set(PFgangpl1,"gangname",Gnowgang);
	PLGangName[Ggangtplid1]=Gnowgang;
	playerGangColor[Ggangtplid1]="0xFFFFFF";
	if(Color[Ggangtplid1]==0) format(string, sizeof(string), "%sFF",playerGangColor[Ggangtplid1]);
	else format(string, sizeof(string), "%s40",playerGangColor[Ggangtplid1]);
	Coloren=HexToInt(string);
	SetPlayerColor(Ggangtplid1,Coloren);

	new gangpl2[MAX_PLAYER_NAME]; GetPlayerName(Ggangtplid2,gangpl2,sizeof(gangpl2));
	dini_Set(Pnowgang,"player_2",gangpl2);
	new PFgangpl2[256]; format(PFgangpl2,sizeof(PFgangpl2),"LVM/players/%s.ini",gangpl2);
	Gang[Ggangtplid2]=1;
	TextDrawSetString(GangDraw[Ggangtplid2], "$00000000");
	TextDrawShowForPlayer(playerid, GangDraw[Ggangtplid2]);
	dini_IntSet(PFgangpl2,"gang",1);
	dini_Set(PFgangpl2,"gangname",Gnowgang);
	PLGangName[Ggangtplid2]=Gnowgang;
	playerGangColor[Ggangtplid2]="0xFFFFFF";
	if(Color[Ggangtplid2]==0) format(string, sizeof(string), "%sFF",playerGangColor[Ggangtplid2]);
	else format(string, sizeof(string), "%s40",playerGangColor[Ggangtplid2]);
	Coloren=HexToInt(string);
	SetPlayerColor(Ggangtplid2,Coloren);

	new gangpl3[MAX_PLAYER_NAME]; GetPlayerName(Ggangtplid3,gangpl3,sizeof(gangpl3));
	dini_Set(Pnowgang,"player_3",gangpl3);
	new PFgangpl3[256]; format(PFgangpl3,sizeof(PFgangpl3),"LVM/players/%s.ini",gangpl3);
	Gang[Ggangtplid3]=1;
	TextDrawSetString(GangDraw[Ggangtplid3], "$00000000");
	TextDrawShowForPlayer(playerid, GangDraw[Ggangtplid3]);
	dini_IntSet(PFgangpl3,"gang",1);
	dini_Set(PFgangpl3,"gangname",Gnowgang);
	PLGangName[Ggangtplid3]=Gnowgang;
	playerGangColor[Ggangtplid3]="0xFFFFFF";
	if(Color[Ggangtplid3]==0) format(string, sizeof(string), "%sFF",playerGangColor[Ggangtplid3]);
	else format(string, sizeof(string), "%s40",playerGangColor[Ggangtplid3]);
	Coloren=HexToInt(string);
	SetPlayerColor(Ggangtplid3,Coloren);

	new gangpl4[MAX_PLAYER_NAME]; GetPlayerName(Ggangtplid4,gangpl4,sizeof(gangpl4));
	dini_Set(Pnowgang,"player_4",gangpl4);
	new PFgangpl4[256]; format(PFgangpl4,sizeof(PFgangpl4),"LVM/players/%s.ini",gangpl4);
	Gang[Ggangtplid4]=1;
	TextDrawSetString(GangDraw[Ggangtplid4], "$00000000");
	TextDrawShowForPlayer(playerid, GangDraw[Ggangtplid4]);
	dini_IntSet(PFgangpl4,"gang",1);
	dini_Set(PFgangpl4,"gangname",Gnowgang);
	PLGangName[Ggangtplid4]=Gnowgang;
	playerGangColor[Ggangtplid4]="0xFFFFFF";
	if(Color[Ggangtplid4]==0) format(string, sizeof(string), "%sFF",playerGangColor[Ggangtplid4]);
	else format(string, sizeof(string), "%s40",playerGangColor[Ggangtplid4]);
	Coloren=HexToInt(string);
	SetPlayerColor(Ggangtplid4,Coloren);

	SetTimerEx("GangCr2", 60, 0, "i", playerid);

	return 1; }

public GangCr2(playerid) {
	CrashTest("[function] GangCr2");
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini",udb_encode(name));
	new string[256];

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0) {
		if(Lang[i]==0) format(string, sizeof(string), " *** Создана банда '%s'! Чтобы присоединиться вы должны получить приглашение.", Gnowgang);
		else format(string, sizeof(string), " *** The gang '%s' was created! To join you should receive the invitation.", Gnowgang);
		SendClientMessage(i, yellow, string); }

	format(string, sizeof(string),"7Создана банда '%s'", Gnowgang);
	IRC_Say(EchoConnection2, EchoChan, string);

	if(Lang[playerid]==0) format(string, sizeof(string)," Вы создали банду '%s'.", Gnowgang);
	else format(string, sizeof(string)," You have created a gang '%s'.", Gnowgang);
	SendClientMessage(playerid, green, string);

	Gang[playerid]=3;
	TextDrawSetString(GangDraw[playerid], "$00000000");
	TextDrawShowForPlayer(playerid, GangDraw[playerid]);
	dini_IntSet(PF,"gang",3);
	dini_Set(PF,"gangname",Gnowgang);
	PLGangName[playerid]=Gnowgang;
	playerGangColor[playerid]="0xFFFFFF";
	if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
	else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
	new Coloren=HexToInt(string);
	SetPlayerColor(playerid,Coloren);

	GangTesting[playerid]=1;
	dini_IntSet(PF,"gangtesting",1);

	Givemoney(playerid, -(GANG_COST));
	Gwantmembers=0;
	format(Gnowgang,sizeof(Gnowgang),"None");
	return 1; }


public SomeTem(playerid) {
	CrashTest("[function] SomeTem");
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini",name);
	new string[256];
	Gang[playerid]=1;
	GangTesting[playerid]=0;
	dini_IntSet(PF,"gang",1);
	dini_Set(PF,"gangname",PLGangName[playerid]);

	new Pnowgang[256]; format(Pnowgang,sizeof(Pnowgang),"LVM/gangs/%s.ini",PLGangName[playerid]);

	dini_IntSet(Pnowgang,"members",dini_Int(Pnowgang,"members")+1);

	new GangBank=dini_Int(Pnowgang,"bank");
	new ttempag; if(GangBank!=0) ttempag=10000000/GangBank; else ttempag=10000000;
	if(ttempag<=1) format(string,sizeof(string),"$%d",GangBank);
	if(ttempag>1 && ttempag<=10) format(string,sizeof(string),"$0%d",GangBank);
	if(ttempag>10 && ttempag<=100) format(string,sizeof(string),"$00%d",GangBank);
	if(ttempag>100 && ttempag<=1000) format(string,sizeof(string),"$000%d",GangBank);
	if(ttempag>1000 && ttempag<=10000) format(string,sizeof(string),"$0000%d",GangBank);
	if(ttempag>10000 && ttempag<=100000) format(string,sizeof(string),"$00000%d",GangBank);
	if(ttempag>100000 && ttempag<=1000000) format(string,sizeof(string),"$000000%d",GangBank);
	if(ttempag>1000000 && ttempag<=10000000) format(string,sizeof(string),"$0000000%d",GangBank);
	TextDrawSetString(GangDraw[playerid], string);
	TextDrawShowForPlayer(playerid, GangDraw[playerid]);


	new t=0;
	for(new i = 0; i < MAX_GANG_MEMBERS; i++) {
		format(string, sizeof(string),"player_%d",i);
		if(strlen(dini_Get(Pnowgang,string))!=1 && strlen(dini_Get(Pnowgang,string))!=0)
		if(strcmp(dini_Get(Pnowgang,string),name,true)==0) t++; }

	if(t==0) for(new i = 0; i < MAX_GANG_MEMBERS; i++) {
		format(string, sizeof(string),"player_%d",i);
		if(strlen(dini_Get(Pnowgang,string))==1 && t==0 || strlen(dini_Get(Pnowgang,string))==0 && t==0) { t=1; dini_Set(Pnowgang,string,name); } }
	playerGangColor[playerid]=dini_Get(Pnowgang,"color");
	if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
	else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
	new Coloren=HexToInt(string);
	SetPlayerColor(playerid,Coloren);

	if(Lang[playerid]==0) format(string, sizeof(string)," Вы присоединились к банде '%s'.",PLGangName[playerid]);
	else format(string, sizeof(string)," You joined gang '%s'.",PLGangName[playerid]);
	SendClientMessage(playerid, green, string);

	Ganginv[playerid]="None";
	return 1; }

public SomeTemAdm(playerid) {
	CrashTest("[function] SomeTemAdm");
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini",name);
	Gang[playerid]=2;
	dini_IntSet(PF,"gang",2);
	new Pnowgang[256]; format(Pnowgang,sizeof(Pnowgang),"LVM/gangs/%s.ini",PLGangName[playerid]);
	dini_Set(Pnowgang,"admin",name);
	return 1; }

public SomeTemUntest(playerid) {
	CrashTest("[function] SomeTemUntest");
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini",name);
	GangTesting[playerid]=1;
	dini_IntSet(PF,"gangtesting",1);
	return 1; }

public SomeTemSetSpawnOn(playerid) {
	CrashTest("[function] SomeTemSetSpawnOn");
	new SplayerGang[256]; format(SplayerGang,sizeof(SplayerGang),"LVM/gangs/%s.ini",PLGangName[playerid]);
	dini_IntSet(SplayerGang,"gangspawn", 1);
	dini_FloatSet(SplayerGang,"spawnposx", Xgspawn[playerid]);
	dini_FloatSet(SplayerGang,"spawnposy", Ygspawn[playerid]);
	dini_FloatSet(SplayerGang,"spawnposz", Zgspawn[playerid]);
	PLGangSpawn[playerid]=1;

	new string[256];
	format(string,sizeof(string),"%s", PLGangName[playerid]);

	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(Gang[i]!=0 && i!=playerid) if(Login[i]!=0)
	if(strcmp(PLGangName[i], string, true) == 0) {
		PLGangSpawn[i]=1;
		Xgspawn[i]=Xgspawn[playerid];
		Ygspawn[i]=Ygspawn[playerid];
		Zgspawn[i]=Zgspawn[playerid]; }
	return 1; }

public SomeTemSetSpawnOff(playerid) {
	CrashTest("[function] SomeTemSetSpawnOff");
	new SplayerGang[256]; format(SplayerGang,sizeof(SplayerGang),"LVM/gangs/%s.ini",PLGangName[playerid]);
	dini_IntSet(SplayerGang,"gangspawn", 0);
	PLGangSpawn[playerid]=0;

	new string[256];
	format(string,sizeof(string),"%s", PLGangName[playerid]);

	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(Gang[i]!=0 && i!=playerid) if(Login[i]!=0)
	if(strcmp(PLGangName[i], string, true) == 0) PLGangSpawn[i]=0;
	return 1; }


public SomeTemL(playerid) {
	CrashTest("[function] SomeTemL");
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini",name);
	new string[256];
	new SplayerGang[256]; format(SplayerGang,sizeof(SplayerGang),"LVM/gangs/%s.ini",PLGangName[playerid]);
	if(Gang[playerid]==2) dini_Set(SplayerGang,"admin","-");
	Gang[playerid]=0;
	TextDrawHideForPlayer(playerid, GangDraw[playerid]);
	format(string,sizeof(string),"%s", PLGangName[playerid]);
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(Gang[i]!=0 && i!=playerid) if(Login[i]!=0)
	if(strcmp(PLGangName[i], string, true) == 0) {
		if(Lang[i]==0) format(string, sizeof(string)," %s покинул вашу банду.", name);
		else format(string, sizeof(string)," %s left your gang.", name);
		SendClientMessage(i, yellow, string); }

	PLGangName[playerid]="None";
	dini_IntSet(PF,"gang",0);
	dini_Set(PF,"gangname","None");
	GangTesting[playerid]=0;
	dini_IntSet(PF,"gangtesting",0);

	dini_IntSet(SplayerGang,"members",(dini_Int(SplayerGang,"members")-1));
	for(new i = 0; i < MAX_GANG_MEMBERS; i++) {
		format(string, sizeof(string),"player_%d",i);
		if(strlen(dini_Get(SplayerGang,string))!=0) if(strcmp(dini_Get(SplayerGang,string),name,true)==0) dini_IntSet(SplayerGang,string,0); }

	if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
	else format(string, sizeof(string), "%s40",playerColor2);
	new Coloren=HexToInt(string);
	SetPlayerColor(playerid,Coloren);

	return 1; }

public SomeTemCOLORSET(playerid, clr[]) {
	CrashTest("[function] SomeTemCOLORSET");
	new string[256];
	format(string1, sizeof(string1),"%s",clr);
	new Pnowgang[256]; format(Pnowgang,sizeof(Pnowgang),"LVM/gangs/%s.ini", PLGangName[playerid]);
	dini_Set(Pnowgang,"color", string1);

	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(Gang[i]!=0) if(strcmp(PLGangName[i], PLGangName[playerid], true) == 0) {
		if(Color[i]==0) format(string, sizeof(string), "%sFF",string1);
		else format(string, sizeof(string), "%s40",string1);
		playerGangColor[i]=string1;
		new Coloren=HexToInt(string);
		SetPlayerColor(i,Coloren); }

	if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Цвет изменён.");
	else SendClientMessage(playerid, yellow, " Colour was changed.");
	return 1; }

public SomeTemDel() {
	CrashTest("[function] SomeTemDel");
	new string[256];
	format(string,sizeof(string),"LVM/gangs/%s.ini",GangDelName);
	format(GangDelName,sizeof(GangDelName),"None");
	dini_Remove(string);
	return 1; }


public Spec(playerid, specplayerid) {
	CrashTest("[function] Spec");

	if(!IsPlayerConnected(specplayerid) &&	GetPlayerState(specplayerid) == PLAYER_STATE_SPECTATING && !playerSpawned[specplayerid]) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Игрок не найден.");
		else SendClientMessage(playerid, yellow, " Player not found.");
		return 1; }

	if(!IsPlayerConnected(playerid)) return 1;

	new Float:XXX,Float:YYY,Float:ZZZ;
	GetPlayerPos(playerid, XXX,YYY,ZZZ);


	format(string1,sizeof(string1),"%f",XXX);
	format(string2,sizeof(string2),"%f",XX[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	format(string1,sizeof(string1),"%f",YYY);
	format(string2,sizeof(string2),"%f",YY[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	new string[256];

	GetPlayerWeaponData(playerid,1,PlayerSWeapInfo[playerid][w1],PlayerSWeapInfo[playerid][ammo1]);
	GetPlayerWeaponData(playerid,2,PlayerSWeapInfo[playerid][w2],PlayerSWeapInfo[playerid][ammo2]);
	GetPlayerWeaponData(playerid,3,PlayerSWeapInfo[playerid][w3],PlayerSWeapInfo[playerid][ammo3]);
	GetPlayerWeaponData(playerid,4,PlayerSWeapInfo[playerid][w4],PlayerSWeapInfo[playerid][ammo4]);
	GetPlayerWeaponData(playerid,5,PlayerSWeapInfo[playerid][w5],PlayerSWeapInfo[playerid][ammo5]);
	GetPlayerWeaponData(playerid,6,PlayerSWeapInfo[playerid][w6],PlayerSWeapInfo[playerid][ammo6]);
	GetPlayerWeaponData(playerid,7,PlayerSWeapInfo[playerid][w7],PlayerSWeapInfo[playerid][ammo7]);
	GetPlayerWeaponData(playerid,8,PlayerSWeapInfo[playerid][w8],PlayerSWeapInfo[playerid][ammo8]);
	GetPlayerWeaponData(playerid,9,PlayerSWeapInfo[playerid][w9],PlayerSWeapInfo[playerid][ammo9]);
	GetPlayerWeaponData(playerid,10,PlayerSWeapInfo[playerid][w10],PlayerSWeapInfo[playerid][ammo10]);
	GetPlayerWeaponData(playerid,11,PlayerSWeapInfo[playerid][w11],PlayerSWeapInfo[playerid][ammo11]);
	GetPlayerWeaponData(playerid,12,PlayerSWeapInfo[playerid][w12],PlayerSWeapInfo[playerid][ammo12]);
	PlayerSWeapInfo[playerid][LastSpectated] = 1;

	new sname[MAX_PLAYER_NAME]; GetPlayerName(specplayerid,sname,sizeof(sname));
	format(string,sizeof(string),"~w~PLAYER: %s (%d)~n~",sname,specplayerid); GameTextForPlayer(playerid,string,5000,4);
	TogglePlayerSpectating(playerid, 1);
	if(!IsPlayerInAnyVehicle(specplayerid)) {
		PlayerSpectatePlayer(playerid, specplayerid, 1);
	}else{
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specplayerid), 1); }
	SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));

	PLSpecP[specplayerid]=1;
	PLSpecO[playerid]=specplayerid;

	return 1; }


public SpecExit(playerid) {
	CrashTest("[function] SpecExit");
	telep[playerid]=0;
	if(PLSpecO[playerid]==999) return 1;
	new specplayerid=PLSpecO[playerid];
	TogglePlayerSpectating(playerid, 0);
	PLSpecO[playerid]=999;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	if(PLSpecO[i]==specplayerid) return 1;
	PLSpecP[specplayerid]=0;
	return 1; }

public StartRace(playerid) {
	CrashTest("[function] StartRace");
	new string[256];
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	format(string,sizeof(string)," *** Начинается гонка '%s' by %s (%d)! Чтобы присоединиться наберите '/race join'.",RaceName,name,playerid);
	format(string2,sizeof(string2)," *** Starting race '%s' by %s (%d)! To join type '/race join'.",RaceName,name,playerid);
	GameTextForAll("~g~To join race type '/race'",6000,1);
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) SendClientMessage(i, yellow, string);
	else SendClientMessage(i, yellow, string2);
	format(string,sizeof(string),"3*** Начинается гонка '%s' by %s (%d)! Чтобы присоединиться наберите '/race join'.",RaceName,name,playerid);
	IRC_Say(EchoConnection2, EchoChan, string);
	RaceStarting=1;
	RacePlayers=0;
	SetTimer("RaceStartingCON", 180000, 0);

	if(!IsPlayerInAnyVehicle(playerid) && RaceINT==0 || GetPlayerState(playerid) != PLAYER_STATE_DRIVER && RaceINT==0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть в транспорте.");
		else SendClientMessage(playerid, yellow, " You must be in vehicle.");
		SpawnPlayer(playerid); return 1; }

	SetPlayerVirtualWorld(playerid, 120);
	SetPlayerInterior(playerid, RaceINT);
	if(RaceINT==0) {
		vidr=GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(vidr,120);
		RaceRand=random(RacePL);
		SetVehiclePos(vidr,RaceSTX[RaceRand],RaceSTY[RaceRand],RaceSTZ[RaceRand]);
		SetVehicleZAngle(vidr,RaceSTA[RaceRand]);
		SetVehicleHealth(vidr, 1000);
	}else{
		if(RaceINT==15 && RaceHot==1) { PutPlayerInVehicle(playerid, incars1[0], 0); SetVehicleVirtualWorld(incars1[0],120); }
		if(RaceINT==7) { PutPlayerInVehicle(playerid, incars2[0], 0); SetVehicleVirtualWorld(incars2[0],120); }
		if(RaceINT==1) { PutPlayerInVehicle(playerid, incars3[0], 0); SetVehicleVirtualWorld(incars3[0],120); }
		if(RaceINT==4) { PutPlayerInVehicle(playerid, incars4[0], 0); SetVehicleVirtualWorld(incars4[0],120); }
		if(RaceINT==15 && RaceHot==0) { PutPlayerInVehicle(playerid, incars5[0], 0); SetVehicleVirtualWorld(incars5[0],120); }
		if(RaceINT==14) { PutPlayerInVehicle(playerid, incars6[0], 0); SetVehicleVirtualWorld(incars6[0],120); }
		if(RaceINT==16) { PutPlayerInVehicle(playerid, incars7[0], 0); SetVehicleVirtualWorld(incars7[0],120); }
	}
	TogglePlayerControllable(playerid,0);
	DisablePlayerRaceCheckpoint(playerid);
	PLOnRace[playerid]=2;
	Speedtemp[playerid]=1;
	SetCameraBehindPlayer(playerid);
	if(Gang[playerid]==0){
		if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
		else format(string, sizeof(string), "%s40",playerColor2);
		new Coloren=HexToInt(string);
		SetPlayerColor(playerid,Coloren);
	}else{
		if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
		else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
		new Coloren=HexToInt(string);
		SetPlayerColor(playerid,Coloren); }
	GameTextForPlayer(playerid, "~w~Waiting for opponents", 180000, 4);
	return 1; }


public RaceCreate(playerid) {
	CrashTest("[function] RaceCreate");
	telep[playerid]=0;
	if(!IsPlayerConnected(playerid)) return 1;
	new Float:XXX,Float:YYY,Float:ZZZ;
	GetPlayerPos(playerid, XXX,YYY,ZZZ);


	format(string1,sizeof(string1),"%f",XXX);
	format(string2,sizeof(string2),"%f",XX[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	format(string1,sizeof(string1),"%f",YYY);
	format(string2,sizeof(string2),"%f",YY[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	if(CCCash[playerid]<=20000){
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
		else SendClientMessage(playerid, yellow, " Not enough money.");
		return 1; }

	if(RaceStarting!=0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Гонка уже началась.");
		else SendClientMessage(playerid, yellow, " The race has already begun.");
		return 1; }

	if(RaceCR!=0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Панель уже используется.");
		else SendClientMessage(playerid, yellow, " The panel is already in use.");
		return 1; }

	if(Jail[playerid] == 1) return 1;
	if(telep[playerid]==1) {
		if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Телепорт уже в процессе.");
		else SendClientMessage(playerid, yellow, " Teleport already in process.");
		return 1; }


	if(IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		SetPlayerVirtualWorld(playerid, 31);
		vidr=GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(vidr,31);
		MTsys[playerid] = 1;
		RaceCR = 1;
		RacePLCR[playerid] = 1;
		if(GetPlayerInterior(playerid)==15 && GetVehicleModel(vidr)==504) RaceHot=1;
		RaceCRtmerend=SetTimerEx("RaceEndCR", 900000, 0, "i", playerid);
		if(Lang[playerid]==0){
			SendClientMessage(playerid, yellow, " Вы вошли в панель создания гонок.");
			SendClientMessage(playerid, yellow, " Данный инструмент позволяет создать уникальные гонки и сразу запускать их. Это очень весело и просто.");
			SendClientMessage(playerid, yellow, " Внимание: чат в панели недоступен, максимальное время создания гонки 15 минут, одновременное создание не поддерживается. ");
			SendClientMessage(playerid, yellow, " Шаг первый - укажите максимальное количество участников - от 2 до 8 (ввести число в чат)");
		}else{
			SendClientMessage(playerid, yellow, " You now in race creation panel.");
			SendClientMessage(playerid, yellow, " This tool allows you to create unique races and immediately run them. This is very fun and easy.");
			SendClientMessage(playerid, yellow, " Note: chat is not available in the panel, the max creation time 15 minutes, the simultaneous creation is not supported.");
			SendClientMessage(playerid, yellow, " Step one - set the maximum number racers - from 2 to 8 (enter the number in the chat)"); }
	}else{
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть в транспорте.");
		else SendClientMessage(playerid, yellow, " You must be in vehicle."); }

	return 1; }


public RaceJoin(playerid) {
	CrashTest("[function] RaceJoin");
	telep[playerid]=0;
	if(!IsPlayerConnected(playerid)) return 1;
	new Float:XXX,Float:YYY,Float:ZZZ;
	GetPlayerPos(playerid, XXX,YYY,ZZZ);


	format(string1,sizeof(string1),"%f",XXX);
	format(string2,sizeof(string2),"%f",XX[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	format(string1,sizeof(string1),"%f",YYY);
	format(string2,sizeof(string2),"%f",YY[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	if(CCCash[playerid]<=10000){
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
		else SendClientMessage(playerid, yellow, " Not enough money.");
		return 1; }

	if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы должны быть в транспорте.");
		else SendClientMessage(playerid, yellow, " You must be in vehicle.");
		return 1; }

	if(RaceStarting!=1) return 1;
	if(PLOnRace[playerid]!=0) return 1;
	RacePlayers++; if(RacePlayers==RaceRand) if(RacePlayers!=RacePL) RacePlayers++; else RaceStartingCON();

	Givemoney(playerid,-10000);
	SetPlayerVirtualWorld(playerid, 120);
	SetPlayerInterior(playerid, RaceINT);
	Speedtemp[playerid]=1;
	if(RaceINT==0) {
		vidr=GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(vidr,120);
		SetVehicleHealth(vidr, 1000);

		SetVehiclePos(vidr,RaceSTX[RacePlayers],RaceSTY[RacePlayers],RaceSTZ[RacePlayers]);
		SetVehicleZAngle(vidr,RaceSTA[RacePlayers]);
	}else{
		if(RaceINT==15 && RaceHot==1) { PutPlayerInVehicle(playerid, incars1[RacePlayers], 0); SetVehicleVirtualWorld(incars1[RacePlayers],120); }
		if(RaceINT==7) { PutPlayerInVehicle(playerid, incars2[RacePlayers], 0); SetVehicleVirtualWorld(incars2[RacePlayers],120); }
		if(RaceINT==1) { PutPlayerInVehicle(playerid, incars3[RacePlayers], 0); SetVehicleVirtualWorld(incars3[RacePlayers],120); }
		if(RaceINT==4) { PutPlayerInVehicle(playerid, incars4[RacePlayers], 0); SetVehicleVirtualWorld(incars4[RacePlayers],120); }
		if(RaceINT==15 && RaceHot==0) { PutPlayerInVehicle(playerid, incars5[RacePlayers], 0); SetVehicleVirtualWorld(incars5[RacePlayers],120); }
		if(RaceINT==14) { PutPlayerInVehicle(playerid, incars6[RacePlayers], 0); SetVehicleVirtualWorld(incars6[RacePlayers],120); }
		if(RaceINT==16) { PutPlayerInVehicle(playerid, incars7[RacePlayers], 0); SetVehicleVirtualWorld(incars7[RacePlayers],120); }
	}
	TogglePlayerControllable(playerid,0);
	PLOnRace[playerid]=1;
	SetCameraBehindPlayer(playerid);
	MTsys[playerid]=0;
	new string[256];
	if(Gang[playerid]==0){
		if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
		else format(string, sizeof(string), "%s40",playerColor2);
		new Coloren=HexToInt(string);
		SetPlayerColor(playerid,Coloren);
	}else{
		if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
		else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
		new Coloren=HexToInt(string);
		SetPlayerColor(playerid,Coloren); }
	GameTextForPlayer(playerid, "~w~Waiting for opponents", 180000, 4);

	if(RacePlayers==RacePL) RaceStartingCON();
	return 1; }

public RaceStartingCON() {
	CrashTest("[function] RaceStartingCON");
	if(RaceStarting==0) return 1;

	if(RacePlayers<2) {
		RaceEnd();
		return 1; }

	if(RaceStarting==1 || RaceStarting==2) {
		RaceStarting++;
		SetTimer("RaceStartingCON", 1000, 0);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Speedtemp[i]==1)
		GameTextForPlayer(i, "~w~Ready", 1000, 4); return 1; }

	if(RaceStarting==3) {
		RaceStarting++;
		SetTimer("RaceStartingCON", 1000, 0);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Speedtemp[i]==1) {
			PlaySoundForPlayer(i, 1056);
			GameTextForPlayer(i, "~w~3", 1000, 4); }
		return 1; }

	if(RaceStarting==4) {
		RaceStarting++;
		SetTimer("RaceStartingCON", 1000, 0);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Speedtemp[i]==1) {
			PlaySoundForPlayer(i, 1056);
			GameTextForPlayer(i, "~w~2", 1000, 4); }
		return 1; }

	if(RaceStarting==5) {
		RaceStarting++;
		SetTimer("RaceStartingCON", 1000, 0);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Speedtemp[i]==1) {
			PlaySoundForPlayer(i, 1056);
			GameTextForPlayer(i, "~w~1", 1000, 4); }
		return 1; }

	if(RaceStarting==6) {
		RaceStarting++;
		RaceNEEDEndTimer=SetTimer("RaceEndNEED", 600000, 0);
		RaceCRtmerend=SetTimer("RaceTimer", 1000, 1);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Speedtemp[i]==1) {
			PlaySoundForPlayer(i, 1057);
			Speedtemp[i]=0;
			TogglePlayerControllable(i,1);
			SetPlayerRaceCheckpoint(i,0,RaceX[RaceCheckpoin[i]],RaceY[RaceCheckpoin[i]],RaceZ[RaceCheckpoin[i]],RaceX[RaceCheckpoin[i]+1],RaceY[RaceCheckpoin[i]+1],RaceZ[RaceCheckpoin[i]+1],12);
			RaceCheckpoin[i]++;
			RaceWinner=0;
			GameTextForPlayer(i, "~w~GO", 1000, 4); }
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		if(Lang[i]==0) SendClientMessage(i, yellow, " *** Гонка началась.");
		else SendClientMessage(i, yellow, " *** Race started.");
		IRC_Say(EchoConnection2, EchoChan, "3*** Гонка началась."); }

	return 1; }

public RaceTimer() {
	CrashTest("[function] RaceTimer");
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnRace[i]!=0 && !IsPlayerInAnyVehicle(i)) RaceExitCH(i);
	RaceTime++;
	return 1; }

public RaceEnd() {
	CrashTest("[function] RaceEnd");
	new players;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnRace[i]!=0) players++;
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) SendClientMessage(i, yellow, " *** Гонка завершена.");
	else SendClientMessage(i, yellow, " *** Race ended.");
	IRC_Say(EchoConnection2, EchoChan, "3*** Гонка завершена.");
	KillTimer(RaceNEEDEndTimer);
	GlobalRace++;
	if(players!=0) for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnRace[i]!=0) {
		SetPlayerVirtualWorld(i, 0);
		vidr=GetPlayerVehicleID(i);
		TogglePlayerControllable(i,1);
		SetVehicleVirtualWorld(vidr,0);
		DisablePlayerRaceCheckpoint(i);
		SetPlayerInterior(i, 0);
		PLOnRace[i]=0; }
	RaceStarting=0;
	RacePlayers=0;
	RaceWinner=0;
	KillTimer(RaceCRtmerend);
	RaceTime=0;
	return 1; }


public RaceEndNEED() {
	if(RaceStarting!=0) RaceEnd();
	return 1; }


public RaceCRTimer(playerid) {
	CrashTest("[function] RaceCRTimer");
	new Keys[3];
	GetPlayerKeys(playerid, Keys[0], Keys[1], Keys[2]);
	if(CarRCR==1) return 1;

	if(Keys[0] == KEY_FIRE) {
		vidr=GetPlayerVehicleID(playerid);
		GetVehiclePos(vidr,Xr,Yr,Zr);
		GetVehicleZAngle(vidr,Ar);

		if(RaceCR>=2 && RaceCR<(2+RacePL)) {
			new nowid=RaceCR-2;
			if(nowid!=0) if(GetDistanceBetweenCOR(Xr, Yr, Zr, RaceSTX[nowid-1],RaceSTY[nowid-1],RaceSTZ[nowid-1])>150) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Превышено максимальное расстояние.");
				else SendClientMessage(playerid, yellow, " Maximum distance exceeded.");
				return 1; }
			RaceSTX[nowid]=Xr; RaceSTY[nowid]=Yr; RaceSTZ[nowid]=Zr; RaceSTA[nowid]=Ar;
			SetTimerEx("CreateCarRCR", 5000, 0, "i", playerid);
			if(RaceCR<(1+RacePL)) {
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Позиция сохранена, можно делать следующую. Чтобы отменить, нажмите клавишу повторного огня.");
				else SendClientMessage(playerid, yellow, " Position was saved, you can do next. To cancel, press the secondary attack button.");
			}else{
				if(Lang[playerid]==0){
					SendClientMessage(playerid, yellow, " Шаг третий - установите гоночные чекпоинты (места, через которые нужно будет проехать игрокам).");
					SendClientMessage(playerid, yellow, " Управление: сохранить чекпоинт - клавиша огня, удалить - повторного огня.");
				}else{
					SendClientMessage(playerid, yellow, " Step three - create racing checkpoints (places which players need to pass).");
					SendClientMessage(playerid, yellow, " Control: save checkpoint - fire key, to delete - secondary attack."); } }

			CarRCR=1; }

		if(RaceCR>=(2+RacePL)) {
			new string[256];
			new nowid=RaceCR-(2+RacePL);
			RaceX[nowid]=Xr; RaceY[nowid]=Yr; RaceZ[nowid]=Zr;
			SetPlayerCheckpoint(playerid, Xr,Yr,Zr,6);
			RaceTotalCheckp=nowid;
			SetTimerEx("Checkp", 1000, 0, "i", playerid);
			CarRCR=1;
			if(RaceCR<(1+RacePL)+50) {
				if(Lang[playerid]==0) {
					SendClientMessage(playerid, yellow, " Чекпоинт сохранён. Чтобы отменить, нажмите правую кнопку мыши. Чтобы завершить введите в чат end.");
					format(string,sizeof(string)," Осталось чекпоинтов для размещения: %d",49-nowid); SendClientMessage(playerid, yellow, string);
				}else{
					SendClientMessage(playerid, yellow, " Chekpoint saved. To cancel, press the right mouse button. To finish, type in chat end.");
					format(string,sizeof(string)," Chekpoints remaining: %d",49-nowid); SendClientMessage(playerid, yellow, string); }
			}else{
				KillTimer(RaceCRtm[playerid]);
				RaceCR=100;
				if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Шаг четвёртый - введите название гонки в чат (с заглавной буквы).");
				else SendClientMessage(playerid, yellow, " Step four - enter the name of the race to chat (with capital letter)."); }

		}

		RaceCR++; }


	if(Keys[0] == KEY_ACTION) {
		if(GetPlayerInterior(playerid) == 0)
		if(RaceCR>2 && RaceCR<=(2+RacePL)) {
			RaceCR--;
			new nowid=RaceCR-2;
			RaceSTX[nowid]=0; RaceSTY[nowid]=0; RaceSTZ[nowid]=0; RaceSTA[nowid]=0;
			//printf("D: %d",nowid);
			DestroyVehicle(CarDEMO[nowid]);
			SetTimerEx("Checkp", 1000, 0, "i", playerid);
			CarRCR=1;
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Последняя позиция удалена.");
			else SendClientMessage(playerid, yellow, " The last position was removed.");
		}

		if(RaceCR>(2+RacePL)) {
			RaceCR--;
			new nowid=RaceCR-(2+RacePL);
			RaceX[nowid]=0; RaceY[nowid]=0; RaceZ[nowid]=0;
			DisablePlayerCheckpoint(playerid);
			if(nowid!=0) SetPlayerCheckpoint(playerid, RaceX[(nowid-1)],RaceY[(nowid-1)],RaceZ[(nowid-1)],6);
			SetTimerEx("Checkp", 1000, 0, "i", playerid);
			CarRCR=1;
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Последний чекпоинт удалён.");
			else SendClientMessage(playerid, yellow, " The last checkpoint was removed.");
		}


	}

	return 1; }

public CreateCarRCR(playerid) {
	CrashTest("[function] CreateCarRCR");
	new nowid=RaceCR-3;
	if(RaceCR!=0) { CarDEMO[nowid]=CreateVehicle(GetVehicleModel(vidr),Xr,Yr,Zr,Ar, -1, -1,10);
		SetVehicleVirtualWorld(CarDEMO[nowid],31); }
	CarRCR=0;
	return 1; }


public Checkp(playerid) {
	CarRCR=0;
	return 1; }


public RaceEndCR(playerid) {
	CrashTest("[function] RaceEndCR");
	SetPlayerVirtualWorld(playerid, 0);
	MTsys[playerid] = 0;
	RaceCR = 0;
	KillTimer(RaceCRtm[playerid]);
	DisablePlayerCheckpoint(playerid);
	RacePLCR[playerid] = 0;
	for(new i=0; i < RacePL; i++) DestroyVehicle(CarDEMO[i]);
	if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Создание гонки отменено.");
	else SendClientMessage(playerid, yellow, " Race creation was cancelled.");
	return 1; }



//DeathMMMMMMMMMMMMMM

public StartDM(playerid) {
	CrashTest("[function] StartDM");
	new string[256];
	new name[MAX_PLAYER_NAME]; GetPlayerName(playerid,name,sizeof(name));
	format(string,sizeof(string)," *** Начинается дефматч '%s' by %s (%d)! Чтобы присоединиться наберите '/dm join'.",DMName,name,playerid);
	format(string2,sizeof(string2)," *** Starting deathmatch '%s' by %s (%d)! To join type '/dm join'.",DMName,name,playerid);
	GameTextForAll("~g~To join deathmatch type '/dm'",6000,1);
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) SendClientMessage(i, yellow, string);
	else SendClientMessage(i, yellow, string2);
	format(string,sizeof(string),"3*** Начинается дефматч '%s' by %s (%d)! Чтобы присоединиться наберите '/dm join'.",DMName,name,playerid);
	IRC_Say(EchoConnection2, EchoChan, string);
	DMStarting=1;
	DMPlayers=0;
	SetTimer("DMStartingCON", 120000, 0);

	if(IsPlayerInAnyVehicle(playerid)) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не должны быть в транспорте.");
		else SendClientMessage(playerid, yellow, " You must not be in vehicle.");
		SpawnPlayer(playerid); return 1; }

	SetPlayerVirtualWorld(playerid, 121);
	SetPlayerInterior(playerid, DMINT);
	DMRand=random(DMPL);
	SetPlayerPos(playerid,DMSTX[DMRand],DMSTY[DMRand],DMSTZ[DMRand]);
	SetPlayerFacingAngle(playerid,DMSTA[DMRand]);
	SetPlayerHealth(playerid, 100); SetPlayerArmour(playerid, 0);
	TogglePlayerControllable(playerid,0);
	PLOnDM[playerid]=2;
	SpeedDMtemp[playerid]=1;
	SetCameraBehindPlayer(playerid);
	if(Sponsor[playerid]==1) GivePlayerWeapon(playerid, 35, -10);
	if(Gang[playerid]==0){
		if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
		else format(string, sizeof(string), "%s40",playerColor2);
		new Coloren=HexToInt(string);
		SetPlayerColor(playerid,Coloren);
	}else{
		if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
		else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
		new Coloren=HexToInt(string);
		SetPlayerColor(playerid,Coloren); }
	GameTextForPlayer(playerid, "~w~Waiting for opponents", 180000, 4);
	return 1; }



public DMJoin(playerid) {
	CrashTest("[function] DMJoin");
	telep[playerid]=0;
	if(!IsPlayerConnected(playerid)) return 1;
	new Float:XXX,Float:YYY,Float:ZZZ;
	GetPlayerPos(playerid, XXX,YYY,ZZZ);


	format(string1,sizeof(string1),"%f",XXX);
	format(string2,sizeof(string2),"%f",XX[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	format(string1,sizeof(string1),"%f",YYY);
	format(string2,sizeof(string2),"%f",YY[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	if(CCCash[playerid]<=10000){
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
		else SendClientMessage(playerid, yellow, " Not enough money.");
		return 1; }

	if(IsPlayerInAnyVehicle(playerid)) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не должны быть в транспорте.");
		else SendClientMessage(playerid, yellow, " You must not be in vehicle.");
		return 1; }

	if(DMStarting!=1) return 1;
	if(PLOnDM[playerid]!=0) return 1;
	DMPlayers++; if(DMPlayers==DMRand) if(DMPlayers!=DMPL) DMPlayers++; else DMStartingCON();

	Givemoney(playerid,-10000);
	SetPlayerVirtualWorld(playerid, 121);
	SetPlayerInterior(playerid, DMINT);
	SpeedDMtemp[playerid]=1;

	SetPlayerHealth(playerid, 100); SetPlayerArmour(playerid, 0);
	SetPlayerPos(playerid,DMSTX[DMPlayers],DMSTY[DMPlayers],DMSTZ[DMPlayers]);
	SetPlayerFacingAngle(playerid, DMSTA[DMPlayers]);

	TogglePlayerControllable(playerid,0);
	PLOnDM[playerid]=1;
	SetCameraBehindPlayer(playerid);
	if(Sponsor[playerid]==1) GivePlayerWeapon(playerid, 35, -10);
	MTsys[playerid]=0;
	new string[256];
	if(Gang[playerid]==0){
		if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerColor);
		else format(string, sizeof(string), "%s40",playerColor2);
		new Coloren=HexToInt(string);
		SetPlayerColor(playerid,Coloren);
	}else{
		if(Color[playerid]==0) format(string, sizeof(string), "%sFF",playerGangColor[playerid]);
		else format(string, sizeof(string), "%s40",playerGangColor[playerid]);
		new Coloren=HexToInt(string);
		SetPlayerColor(playerid,Coloren); }
	GameTextForPlayer(playerid, "~w~Waiting for opponents", 180000, 4);

	if(DMPlayers==DMPL) DMStartingCON();
	return 1; }


public DMStartingCON() {
	CrashTest("[function] DMStartingCON");
	if(DMStarting==0) return 1;

	if(DMPlayers<4) {
		DMEnd();
		return 1; }

	if(DMStarting==1 || DMStarting==2) {
		DMStarting++;
		SetTimer("DMStartingCON", 1000, 0);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && SpeedDMtemp[i]==1)
		GameTextForPlayer(i, "~w~Ready", 1000, 4); return 1; }

	if(DMStarting==3) {
		DMStarting++;
		SetTimer("DMStartingCON", 1000, 0);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && SpeedDMtemp[i]==1) {
			PlaySoundForPlayer(i, 1056);
			GameTextForPlayer(i, "~w~3", 1000, 4); }
		return 1; }

	if(DMStarting==4) {
		DMStarting++;
		SetTimer("DMStartingCON", 1000, 0);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && SpeedDMtemp[i]==1) {
			PlaySoundForPlayer(i, 1056);
			GameTextForPlayer(i, "~w~2", 1000, 4); }
		return 1; }

	if(DMStarting==5) {
		DMStarting++;
		SetTimer("DMStartingCON", 1000, 0);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && SpeedDMtemp[i]==1) {
			PlaySoundForPlayer(i, 1056);
			GameTextForPlayer(i, "~w~1", 1000, 4); }
		return 1; }

	if(DMStarting==6) {
		DMStarting++;
		DMNEEDEndTimer=SetTimer("DMEndNEED", 600000, 0);
		DMCRtmerend=SetTimer("DMTimer", 1000, 1);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && SpeedDMtemp[i]==1) {
			PlaySoundForPlayer(i, 1057);
			SpeedDMtemp[i]=0;
			TogglePlayerControllable(i,1);
			DMWinner=DMPL;
			GameTextForPlayer(i, "~w~GO", 1000, 4); }
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		if(Lang[i]==0) SendClientMessage(i, yellow, " *** Дефматч начался.");
		else SendClientMessage(i, yellow, " *** Deathmatch started.");
		IRC_Say(EchoConnection2, EchoChan, "3*** Дефматч начался."); }

	return 1; }


public DMTimer() {
	CrashTest("[function] DMTimer");
	DMTime++;
	return 1; }

public DMEnd() {
	CrashTest("[function] DMEnd");
	new players;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnDM[i]!=0) players++;
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) SendClientMessage(i, yellow, " *** Дефматч завершён.");
	else SendClientMessage(i, yellow, " *** Deathmatch ended.");
	IRC_Say(EchoConnection2, EchoChan, "3*** Дефматч завершён.");
	KillTimer(DMNEEDEndTimer);
	GlobalDM++;
	if(players!=0) for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PLOnDM[i]!=0) {
		SpawnPlayer(i);
		PLOnDM[i]=0; }
	DMStarting=0;
	DMPlayers=0;
	DMWinner=0;
	KillTimer(DMCRtmerend);
	DMTime=0;
	return 1; }


public DMEndNEED() {
	if(DMStarting!=0) DMEnd();
	return 1; }

public DMCreate(playerid) {
	CrashTest("[function] DMCreate");
	telep[playerid]=0;
	if(!IsPlayerConnected(playerid)) return 1;
	new Float:XXX,Float:YYY,Float:ZZZ;
	GetPlayerPos(playerid, XXX,YYY,ZZZ);


	format(string1,sizeof(string1),"%f",XXX);
	format(string2,sizeof(string2),"%f",XX[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	format(string1,sizeof(string1),"%f",YYY);
	format(string2,sizeof(string2),"%f",YY[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	if(CCCash[playerid]<=20000){
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
		else SendClientMessage(playerid, yellow, " Not enough money.");
		return 1; }

	if(DMStarting!=0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Гонка уже началась.");
		else SendClientMessage(playerid, yellow, " The race has already begun.");
		return 1; }

	if(DMCR!=0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Панель создания уже используется.");
		else SendClientMessage(playerid, yellow, " The creation panel is already in use.");
		return 1; }

	if(Jail[playerid] == 1) return 1;


	if(!IsPlayerInAnyVehicle(playerid)) {
		SetPlayerVirtualWorld(playerid, 32);
		MTsys[playerid] = 1;
		DMCR = 1;
		DMPLCR[playerid] = 1;
		DMCRtmerend=SetTimerEx("DMEndCR", 900000, 0, "i", playerid);
		if(Lang[playerid]==0){
			SendClientMessage(playerid, yellow, " Вы вошли в панель создания дефматчей.");
			SendClientMessage(playerid, yellow, " Данный инструмент позволяет создать уникальные дефматчи и сразу запускать их. Это очень весело и просто.");
			SendClientMessage(playerid, yellow, " Внимание: чат в панели недоступен, максимальное время создания дефматча 15 минут, одновременное создание не поддерживается. ");
			SendClientMessage(playerid, yellow, " Шаг первый - укажите максимальное количество участников - от 4 до 10 (ввести число в чат)");
		}else{
			SendClientMessage(playerid, yellow, " You now in deathmatch creation panel.");
			SendClientMessage(playerid, yellow, " This tool allows you to create unique deathmatches and immediately run them. This is very fun and easy.");
			SendClientMessage(playerid, yellow, " Note: chat is not available in the panel, the max creation time 15 minutes, the simultaneous creation is not supported.");
			SendClientMessage(playerid, yellow, " Step one - set the maximum number players - from 4 to 10 (enter the number in the chat)"); }
	}else{
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не должны быть в транспорте.");
		else SendClientMessage(playerid, yellow, " You must not be in vehicle."); }

	return 1; }



public DMCRTimer(playerid) {
	CrashTest("[function] DMCRTimer");
	if(BoxRCR==1) return 1;

	new Keys[3];
	GetPlayerKeys(playerid, Keys[0], Keys[1], Keys[2]);

	if(Keys[0] == KEY_FIRE)
	if(DMCR-2>=0 && DMCR<=DMPL+1) {
		GetPlayerPos(playerid,Xd,Yd,Zd);
		GetPlayerFacingAngle(playerid,Ad);
		new nowid=DMCR-2;
		if(nowid!=0) if(GetDistanceBetweenCOR(Xd, Yd, Zd, DMSTX[nowid-1],DMSTY[nowid-1],DMSTZ[nowid-1])>150) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Превышено максимальное расстояние.");
			else SendClientMessage(playerid, yellow, " Maximum distance exceeded.");
			return 1; }
		DMSTX[nowid]=Xd; DMSTY[nowid]=Yd; DMSTZ[nowid]=Zd; DMSTA[nowid]=Ad;
		SetTimerEx("CreateBoxRCR", 5000, 0, "i", playerid);
		if(DMCR<(DMPL+1)) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Позиция сохранена, можно делать следующую. Чтобы отменить, нажмите клавишу прицела огня.");
			else SendClientMessage(playerid, yellow, " Position was saved, you can do next. To cancel, press the aim button.");
		}else{
			DMCR=100;
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Шаг третий - введите название дефматча в чат (с заглавной буквы).");
			else SendClientMessage(playerid, yellow, " Step three - enter the name of the deathmatch to chat (with capital letter)."); }
		BoxRCR=1; DMCR++; }

	if(Keys[0] == KEY_HANDBRAKE)
	if(DMCR>0 && DMCR<=DMPL+1 || DMCR==101) {
		if(DMCR==101) DMCR=DMPL+1; else  DMCR--;
		new nowid=DMCR-2;
		DMSTX[nowid]=0; DMSTY[nowid]=0; DMSTZ[nowid]=0; DMSTA[nowid]=0;
		DestroyPlayerObject(playerid,BoxDEMO[nowid]);
		SetTimer("Checkb", 1000, 0);
		BoxRCR=1;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Последняя позиция удалена.");
		else SendClientMessage(playerid, yellow, " The last position was removed.");
	}

	return 1; }


public CreateBoxRCR(playerid) {
	CrashTest("[function] CreateBoxRCR");
	new nowid;
	if(DMCR!=101) nowid=DMCR-3; else nowid=DMPL-1;
	if(DMCR!=0) { BoxDEMO[nowid]=CreatePlayerObject(playerid,1574,Xd,Yd,Zd,180,0,0); }
	BoxRCR=0;
	return 1; }


public Checkb() {
	BoxRCR=0;
	return 1; }

public DMEndCR(playerid) {
	CrashTest("[function] DMEndCR");
	SetPlayerVirtualWorld(playerid, 0);
	MTsys[playerid] = 0;
	DMCR = 0;
	KillTimer(DMCRtm[playerid]);
	DMPLCR[playerid] = 0;
	for(new i=0; i < DMPL; i++) DestroyPlayerObject(playerid,BoxDEMO[i]);
	if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Создание дефматча отменено.");
	else SendClientMessage(playerid, yellow, " Deathmatch creation was cancelled.");
	return 1; }


//DeathMMMMMMMMMMMMMM

public CrBomb(playerid,num) {
	CrashTest("[function] CrBomb");
	telep[playerid]=0;

	if(!IsPlayerConnected(playerid)) return 1;

	new Float:XXX,Float:YYY,Float:ZZZ;
	GetPlayerPos(playerid, XXX,YYY,ZZZ);


	format(string1,sizeof(string1),"%f",XXX);
	format(string2,sizeof(string2),"%f",XX[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	format(string1,sizeof(string1),"%f",YYY);
	format(string2,sizeof(string2),"%f",YY[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	new VID;
	if(IsPlayerInAnyVehicle(playerid)) VID = GetPlayerVehicleID(playerid);


	if(num==1) {
		if (CCCash[playerid]<=5000) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
			else SendClientMessage(playerid, yellow, " Not enough money.");
			return 1; }

		if(Bombinst[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба уже установлена.");
			else SendClientMessage(playerid, yellow, " Bomb is already installed.");
			return 1; }

		if(GetPlayerInterior(playerid)!=0) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Вы не можете устанавливать бомбы в помещениях.");
			else SendClientMessage(playerid, yellow, " You can't install bomb in interiors.");
			return 1; }

		if(GetPlayerState(playerid)==PLAYER_STATE_SPECTATING) return 1;
		Givemoney(playerid,-5000);
		Bombinst[playerid]=1;
		GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
		Xbombb[playerid] = X[playerid];
		Ybombb[playerid] = Y[playerid];
		Zbombb[playerid] = Z[playerid];
		new p =	CreateObject(1252,X[playerid],Y[playerid] + 0.5,Z[playerid],0,0,0);
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба установлена.");
		else SendClientMessage(playerid, yellow, " Bomb is installed.");
		BombTimer[playerid][0]=SetTimerEx("DestroyOb", 900000, 0, "i", p);
		BombTimer[playerid][1]=p;
		return 1; }


	if(num==2) {
		if (CCCash[playerid]<=5000) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Недостаточно денег.");
			else SendClientMessage(playerid, yellow, " Not enough money.");
			return 1; }
		if(!IsPlayerInAnyVehicle(playerid)) {
			if(Lang[playerid]==0) SendClientMessage(playerid,yellow," Вы должны быть в машине.");
			else SendClientMessage(playerid, yellow, " You need be in vehicle.");
			return 1; }
		if(Bombinst[playerid]==1) {
			if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба уже установлена.");
			else SendClientMessage(playerid, yellow, " Bomb is already installed.");
			return 1; }
		Givemoney(playerid,-5000);
		Bombinst[playerid]=1;
		GetVehiclePos(VID,X[playerid],Y[playerid],Z[playerid]);
		bombd[VID] = 1;
		curvpld[playerid] = VID;
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Бомба установлена.");
		else SendClientMessage(playerid, yellow, " Bomb is installed.");
		return 1; }
	return 1; }






public Tele(playerid,num) {
	CrashTest("[function] Tele");
	telep[playerid]=0;

	if(!IsPlayerConnected(playerid)) return 1;

	new Float:XXX,Float:YYY,Float:ZZZ;
	GetPlayerPos(playerid, XXX,YYY,ZZZ);


	format(string1,sizeof(string1),"%f",XXX);
	format(string2,sizeof(string2),"%f",XX[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }

	format(string1,sizeof(string1),"%f",YYY);
	format(string2,sizeof(string2),"%f",YY[playerid]);

	if(strcmp(string1,string2, true) != 0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Невозможно проверить ваши координаты (не двигайтесь).");
		else SendClientMessage(playerid, yellow, " Failed to check you coordinates (do not move).");
		return 1; }


	if(num==1000) {
		SetPlayerPos(playerid,-1394.20,987.62,1023.96);
		SetPlayerInterior(playerid, 15);
		SendClientMessage(playerid, green, " Bloodbowl Stadium");
		SetPlayerVirtualWorld(playerid,11);
		return 1;
	}
	if(num==2000) {
		SetPlayerPos(playerid,-1414.7288,896.3434,1041.5166);
		SetPlayerFacingAngle(playerid, 275.7893);
		SetPlayerInterior(playerid, 15);
		SendClientMessage(playerid, green, " Hotring Stadium");
		SetPlayerVirtualWorld(playerid,12);
		return 1;
	}
	if(num==3000) {
		SetPlayerPos(playerid,-1406.8090,-266.2784,1043.6563);
		SetPlayerFacingAngle(playerid, 347.1096);
		SetPlayerInterior(playerid, 7);
		SendClientMessage(playerid, green, " 8-Track Stadium");
		SetPlayerVirtualWorld(playerid,13);
		return 1;
	}
	if(num==4000) {
		SetPlayerPos(playerid,-1340.6217,-629.8672,1054.6954);
		SetPlayerInterior(playerid, 4);
		SendClientMessage(playerid, green, " Dirtbike Stadium");
		SetPlayerVirtualWorld(playerid,14);
		return 1;
	}
	if(num==5000) {
		SetPlayerPos(playerid,-1420.4277,1616.9221,1052.5313);
		SetPlayerInterior(playerid, 14);
		SendClientMessage(playerid, green, " Kickstart Stadium");
		SetPlayerVirtualWorld(playerid,15);
		return 1;
	}
	if(num==6000) {
		SetPlayerPos(playerid,-1402.6613,106.3897,1032.2734);
		SetPlayerInterior(playerid, 1);
		SendClientMessage(playerid, green, " Oval Stadium");
		SetPlayerVirtualWorld(playerid,16);
		return 1;
	}
	if(num==7000) {
		SetPlayerPos(playerid,-1397.6003,1243.9363,1040.8672);
		SetPlayerInterior(playerid, 16);
		SendClientMessage(playerid, green, " Vice Stadium");
		SetPlayerVirtualWorld(playerid,17);
		return 1;
	}
	if(num==8000) {
		SetPlayerPos(playerid,1958.3783,1343.1572,15.3746);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, green, " Back");
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}

	if(num==9000) {
		Kill[playerid]=1;
		SetPlayerHealth(playerid, 0.0);
		return 1;
	}

	SetPlayerVirtualWorld(playerid,0);
	num=num-1;
	SetPlayerPos(playerid, LocationsCor[num][1], LocationsCor[num][2], LocationsCor[num][3]);
	SetPlayerFacingAngle(playerid, LocationsCor[num][4]);
	SetPlayerInterior(playerid, LocationsCor[num][0]);
	SendClientMessage(playerid, green, LocationsText[num]);

	return 1; }

public DestroyOb(p){ DestroyObject(p); }
/*
public Test(){
if(IsPlayerConnected(0)) {
new Keys[3];
GetPlayerKeys(0, Keys[0], Keys[1], Keys[2]);
new string[256];
format(string,sizeof(string),"0: %d", Keys[0]);
printf(string);
format(string,sizeof(string),"1: %d", Keys[1]);
printf(string);
format(string,sizeof(string),"2: %d", Keys[2]);
printf(string);
}
print("------------------------------------------");

return 1; }
*/

public VoteKick()
{
	CrashTest("[function] VoteKick");
	VoteKickID=0;
	VoteKickNUM=0;
	VoteKickTIMER=0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	VoteKickVOTED[i] = 0;

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		SendClientMessage(i, yellow, " *** Голосование окончено.");
	}else{
		SendClientMessage(i, yellow, " *** Voting finished."); }
	IRC_Say(EchoConnection1, EchoChan, " 13Голосование окончено.");
	return 1; }


public IsPlayerInArea(playerid, Float:dataX, Float:dataY, Float:dataX2, Float:dataY2)
{
	new Float:Xtm, Float:Ytm, Float:Ztm;
	GetPlayerPos(playerid, Xtm, Ytm, Ztm);
	if(Xtm >= dataX && Xtm <= dataX2 && Ytm >= dataY && Ytm <= dataY2) {
		return 1;
	}
	return 0;
}

public CityAddingStat() {
	dini_IntSet("LVM/system/stats/addcitystat.ini",CityAddingStatNick,dini_Int("LVM/system/stats/addcitystat.ini",CityAddingStatNick)+1);
	return 1; }

public ZoneCheck(playerid, inter) {
	new num=0;
	CrashTest("[function] ZoneCheck");

	//if(IsPlayerInArea(playerid, 1937.920532, 2123.760742, 1985.499267, 2195.134277)) if(inter==0) num=1; // (0) Покраска:
	if(IsPlayerInArea(playerid, 607.5333,-10.9900, 627.5333,10.9900)) if(inter==1) num=1; // (0) Покраска:
	if(IsPlayerInArea(playerid, 284.053771, -86.434631, 303.019073, -76.682929)) if(inter==4) num=2; // (4) аммо возле 4 драконов:
	if(IsPlayerInArea(playerid, 1925.160522, 1005.247802, 2019.060791, 1029.790161)) if(inter==10) num=3; // (10) казино 4 дракона:
	if(IsPlayerInArea(playerid, 363.760650, -11.838967, 381.412353, -6.104654)) if(inter==9) num=4; // (9) пицерия1:
	if(IsPlayerInArea(playerid, 360.752349, -85.852134, 382.609954, -46.499233)) if(inter==10) num=5; // (10) пицерия2:
	if(IsPlayerInArea(playerid, 367.044921, -133.553665, 380.303680, -118.803321)) if(inter==5) num=6; // (5) пицерия5:
	if(IsPlayerInArea(playerid, 2357.421875, 963.158142, 2416.964111, 1062.937255)) if(inter==1) num=7; // (1) тюнингв3городе:
	if(IsPlayerInArea(playerid, -1451.315185, 879.002807, -1337.107543, 1088.607177)) if(inter==15) num=8; // (15) хотринг и блудринг:
	if(IsPlayerInArea(playerid, 2220.907714, 1573.647827, 2246.882568, 1713.930053)) if(inter==1) num=9; // (1) казино 2:
	if(IsPlayerInArea(playerid, -1497.258300, 1555.922485, -1347.969360, 1655.216308)) if(inter==14) num=10; // (14) ин5:
	if(IsPlayerInArea(playerid, -1425.646240, 81.368026, -1375.163085, 131.867095)) if(inter==1) num=11; // (1) ин6:
	if(IsPlayerInArea(playerid, -1463.531738, 1186.786499, -1350.416625, 1311.247802)) if(inter==16) num=12; // (16) ин7:
	if(IsPlayerInArea(playerid, -1412.336914, -268.367156, -1387.676147, -217.746276)) if(inter==7) num=13; // (7) хотринг (8трак):
	if(IsPlayerInArea(playerid, -1527.126342, -706.519592, -1277.548706, -612.435302)) if(inter==4) num=14; // (4) диртбайк:
	if(IsPlayerInArea(playerid, -36.634967, -57.130241, -18.065284, -49.007793)) if(inter==6) num=15; // (6) банк 24/7:
	if(IsPlayerInArea(playerid, 354.362640, 164.186691, 390.103820, 177.644958)) if(inter==3) num=16; // (3) банк, основной:
	if(IsPlayerInArea(playerid, 284.0850,-112.9388, 298.1964,-102.9367)) if(inter==6) num=17; // (6) аммо:

	return num;
}


public CountryAndCity(playerid, rus[1], city[256]) {
	new ip[256], ad1[3], t, tempstr[256], num1[4];
	GetPlayerIp(playerid,ip,sizeof(ip));
	for(new i = 0; i < strlen(ip); i++)
	if(ip[i] == 46) { ad1[t]=i; t++; }
	strmid(tempstr, ip, 0, ad1[0], sizeof(tempstr)); num1[0]=strval(tempstr);
	strmid(tempstr, ip, ad1[0]+1, ad1[1], sizeof(tempstr)); num1[1]=strval(tempstr);
	strmid(tempstr, ip, ad1[1]+1, ad1[2], sizeof(tempstr)); num1[2]=strval(tempstr);
	strmid(tempstr, ip, ad1[2]+1, strlen(ip), sizeof(tempstr)); num1[3]=strval(tempstr);
	new File:f, line[256];
	f = fopen("LVM/system/ips/iplist.ini", io_readwrite);
	new ad2[4], num2[5]; t=0;
	while(fread(f, line)) {

		new ips[256], idx;
		ip="none";
		ips=strtok(line,idx);
		for(new i = 0; i < strlen(ips); i++) {
			if(t==0) { if(ips[i] == 46) { ad2[t]=i; t++; }
			}else{ if(ad2[t-1]!=i && ips[i] == 46) { ad2[t]=i; t++; } }
			if(ips[i] == 47) ad2[3]=i; }
		strmid(tempstr, ips, 0, ad2[0], sizeof(tempstr)); num2[0]=strval(tempstr);
		strmid(tempstr, ips, ad2[0]+1, ad2[1], sizeof(tempstr)); num2[1]=strval(tempstr);
		strmid(tempstr, ips, ad2[1]+1, ad2[2], sizeof(tempstr)); num2[2]=strval(tempstr);
		strmid(tempstr, ips, ad2[2]+1, ad2[3], sizeof(tempstr)); num2[3]=strval(tempstr);
		strmid(tempstr, ips, ad2[3]+1, strlen(ips), sizeof(tempstr)); num2[4]=strval(tempstr);

		t=0;
		if(num1[0]==num2[0]) {
			if(num2[4]==8) t=3;

			if(num2[4]<=16) {
				if(num2[4]==16) if(num1[1]==num2[1]) t=3;
				if(num2[4]==15) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+1)) t=3;
				if(num2[4]==14) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+3)) t=3;
				if(num2[4]==13) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+7)) t=3;
				if(num2[4]==12) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+15)) t=3;
				if(num2[4]==11) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+31)) t=3;
				if(num2[4]==10) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+63)) t=3;
				if(num2[4]==9) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+127)) t=3;
			}else if(num1[1]==num2[1]) t++;

			if(t==1) {
				if(num2[4]<=24) {
					if(num2[4]==24) if(num1[2]==num2[2]) t+=2;
					if(num2[4]==23) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+1)) t+=2;
					if(num2[4]==22) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+3)) t+=2;
					if(num2[4]==21) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+7)) t+=2;
					if(num2[4]==20) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+15)) t+=2;
					if(num2[4]==19) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+31)) t+=2;
					if(num2[4]==18) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+63)) t+=2;
					if(num2[4]==17) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+127)) t+=2;
				}else if(num1[2]==num2[2]) t++;

				if(t==2) {
					if(num2[4]<=32) {
						if(num2[4]==32) if(num1[3]==num2[3]) t++;
						if(num2[4]==31) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+1)) t++;
						if(num2[4]==30) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+3)) t++;
						if(num2[4]==29) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+7)) t++;
						if(num2[4]==28) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+15)) t++;
						if(num2[4]==27) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+31)) t++;
						if(num2[4]==26) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+63)) t++;
						if(num2[4]==25) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+127)) t++;
					}

				}}

			if(t==3) {
				ip=strtok(line,idx);
				if(strlen(ip)!=0) format(ips,sizeof(ips),"%s",line[strlen(ips)+1]); else ips="";
				if(strlen(ips)!=0){
					for(new i = 0; i < 80; i++) if(ips[i]==13) { ips[i]=0; ips[i+1]=0; }
					for(new i = 0; i < 80; i++) if(ips[i]==10) { ips[i]=0; ips[i+1]=0; }
					format(city,sizeof(city),"%s",ips); }
				else format(city,sizeof(city),"none");
				rus[0]=1;
				fclose(f);
				return 1; }
		}}
	format(city,sizeof(city),"none");
	rus[0]=0;
	fclose(f);
	return 1;
}

public CountryAndCityIP(ip[], line[256]) {
	new ad1[3], t, tempstr[256], num1[4];
	for(new i = 0; i < strlen(ip); i++)
	if(ip[i] == 46) { ad1[t]=i; t++; }
	strmid(tempstr, ip, 0, ad1[0], sizeof(tempstr)); num1[0]=strval(tempstr);
	strmid(tempstr, ip, ad1[0]+1, ad1[1], sizeof(tempstr)); num1[1]=strval(tempstr);
	strmid(tempstr, ip, ad1[1]+1, ad1[2], sizeof(tempstr)); num1[2]=strval(tempstr);
	strmid(tempstr, ip, ad1[2]+1, strlen(ip), sizeof(tempstr)); num1[3]=strval(tempstr);
	new File:f;
	f = fopen("LVM/system/ips/iplist.ini", io_readwrite);
	new ad2[4], num2[5]; t=0;
	while(fread(f, line)) {

		new ips[256], idx;
		ips=strtok(line,idx);
		for(new i = 0; i < strlen(ips); i++) {
			if(t==0) { if(ips[i] == 46) { ad2[t]=i; t++; }
			}else{ if(ad2[t-1]!=i && ips[i] == 46) { ad2[t]=i; t++; } }
			if(ips[i] == 47) ad2[3]=i; }
		strmid(tempstr, ips, 0, ad2[0], sizeof(tempstr)); num2[0]=strval(tempstr);
		strmid(tempstr, ips, ad2[0]+1, ad2[1], sizeof(tempstr)); num2[1]=strval(tempstr);
		strmid(tempstr, ips, ad2[1]+1, ad2[2], sizeof(tempstr)); num2[2]=strval(tempstr);
		strmid(tempstr, ips, ad2[2]+1, ad2[3], sizeof(tempstr)); num2[3]=strval(tempstr);
		strmid(tempstr, ips, ad2[3]+1, strlen(ips), sizeof(tempstr)); num2[4]=strval(tempstr);
		//printf("%d %d %d %d",ad2[0],ad2[1],ad2[2],ad2[3]);
		//printf("%d %d",num1[2],num2[2]);

		t=0;
		if(num1[0]==num2[0]) {
			if(num2[4]==8) t=3;

			if(num2[4]<=16) {
				if(num2[4]==16) if(num1[1]==num2[1]) t=3;
				if(num2[4]==15) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+1)) t=3;
				if(num2[4]==14) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+3)) t=3;
				if(num2[4]==13) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+7)) t=3;
				if(num2[4]==12) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+15)) t=3;
				if(num2[4]==11) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+31)) t=3;
				if(num2[4]==10) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+63)) t=3;
				if(num2[4]==9) if(num1[1]>=num2[1] && num1[1]<=(num2[1]+127)) t=3;
			}else if(num1[1]==num2[1]) t++;

			if(t==1) {
				if(num2[4]<=24) {
					if(num2[4]==24) if(num1[2]==num2[2]) t+=2;
					if(num2[4]==23) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+1)) t+=2;
					if(num2[4]==22) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+3)) t+=2;
					if(num2[4]==21) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+7)) t+=2;
					if(num2[4]==20) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+15)) t+=2;
					if(num2[4]==19) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+31)) t+=2;
					if(num2[4]==18) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+63)) t+=2;
					if(num2[4]==17) if(num1[2]>=num2[2] && num1[2]<=(num2[2]+127)) t+=2;
				}else if(num1[2]==num2[2]) t++;

				if(t==2) {
					if(num2[4]<=32) {
						if(num2[4]==32) if(num1[3]==num2[3]) t++;
						if(num2[4]==31) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+1)) t++;
						if(num2[4]==30) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+3)) t++;
						if(num2[4]==29) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+7)) t++;
						if(num2[4]==28) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+15)) t++;
						if(num2[4]==27) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+31)) t++;
						if(num2[4]==26) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+63)) t++;
						if(num2[4]==25) if(num1[3]>=num2[3] && num1[3]<=(num2[3]+127)) t++;
					}

				}}

			if(t==3) {
				fclose(f);
				return 1; }
		}}
	format(line,sizeof(line),"none");
	fclose(f);
	return 1;
}

public ReadCity()
{
	new File:f, t[256];
	f = fopen("LVM/system/ips/addnew.ini", io_readwrite);
	fread(f, CityAddingLineNew);
	fclose(f);

	if(strlen(CityAddingLineNew)==0) {
		IRC_Say(EchoConnection2, EchoADMChan, "3Больше заявок пока нет.");
		CityAdding=0; return 1;}

	new idx; CityAddingLineNewIp=strtok(CityAddingLineNew,idx);
	t=strtok(CityAddingLineNew,idx);
	for(new i = 0; i < 180; i++) if(CityAddingLineNewIp[i]==13) { CityAddingLineNewIp[i]=0; CityAddingLineNewIp[i+1]=0; }
	for(new i = 0; i < 180; i++) if(CityAddingLineNewIp[i]==10) { CityAddingLineNewIp[i]=0; CityAddingLineNewIp[i+1]=0; }
	if(strlen(t)!=0) format(CityAddingLineNewCity,sizeof(CityAddingLineNewCity),"%s",CityAddingLineNew[strlen(CityAddingLineNewIp)+1]);
	else CityAddingLineNewCity="";
	for(new i = 0; i < 180; i++) if(CityAddingLineNewCity[i]==13) { CityAddingLineNewCity[i]=0; CityAddingLineNewCity[i+1]=0; }
	for(new i = 0; i < 180; i++) if(CityAddingLineNewCity[i]==10) { CityAddingLineNewCity[i]=0; CityAddingLineNewCity[i+1]=0; }

	CountryAndCityIP(CityAddingLineNewIp, CityAddingLineOld);

	if(strcmp(CityAddingLineOld,"none",true)!=0) { idx=0; CityAddingLineOldIp=strtok(CityAddingLineOld,idx);
		t=strtok(CityAddingLineOld,idx);
		for(new i = 0; i < 180; i++) if(CityAddingLineOldIp[i]==13) { CityAddingLineOldIp[i]=0; CityAddingLineOldIp[i+1]=0; }
		for(new i = 0; i < 180; i++) if(CityAddingLineOldIp[i]==10) { CityAddingLineOldIp[i]=0; CityAddingLineOldIp[i+1]=0; }
		if(strlen(t)!=0) format(CityAddingLineOldCity,sizeof(CityAddingLineOldCity),"%s",CityAddingLineOld[strlen(CityAddingLineOldIp)+1]);
		else CityAddingLineOldCity=""; }else{ CityAddingLineOldIp="none"; CityAddingLineOldCity=""; }
	for(new i = 0; i < 180; i++) if(CityAddingLineOldCity[i]==13) { CityAddingLineOldCity[i]=0; CityAddingLineOldCity[i+1]=0; }
	for(new i = 0; i < 180; i++) if(CityAddingLineOldCity[i]==10) { CityAddingLineOldCity[i]=0; CityAddingLineOldCity[i+1]=0; }

	format(t, sizeof(t), "IP игрока: %s, Предложенный город: %s, Найденная подсеть: %s, Установленный город: %s",CityAddingLineNewIp,CityAddingLineNewCity,CityAddingLineOldIp,CityAddingLineOldCity);
	IRC_Say(EchoConnection2, EchoADMChan, t);

	return 1; }





public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	CrashTest("[function] OnDialogResponse");
	if(strlen(inputtext) >= 120) return 0;
	fixchars(inputtext);

	for(new i = 0; i < strlen(inputtext); i++) if(inputtext[i] == 37) return 1;

	new idx;
	new name[32];
	new tmp[256];
	new string[256];
	GetPlayerName(playerid, name, 32);

	format(crashtext, sizeof(crashtext), "[dialog] [%s]: (%d,%d,%d) %s",name,dialogid,response,listitem,inputtext[0]);
	printf(crashtext);

	if(dialogid == 1) //Регистрация
	{
		if(!response) return 1;
		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
		if (!dini_Exists(PF)) {
			if (isnull(inputtext)) {
				if(Lang[playerid]==0)
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Регистрация", "Вы должны ввести пароль для регистрации.", "ОК", "Отмена");
				else ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Registration", "You must type password to register.", "ОК", "Cancel");
				return 1; }
			tmppass[playerid] = strtok(inputtext,idx);
			if ((strlen(tmppass[playerid]) <= 5) || (strlen(tmppass[playerid]) >= 20)) {
				if(Lang[playerid]==0)
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Регистрация", "Пароль слишком короткий. (Min: 5, Max: 20)", "ОК", "Отмена");
				else ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Registration", "Password is too short. (Min: 5, Max: 20)", "ОК", "Cancel");
				return 1;
			}
			if(Lang[playerid]==0)
			ShowPlayerDialog(playerid, 3, DIALOG_STYLE_INPUT, "Регистрация", "Теперь введите секретное слово.\nПри помощи него вы сможете восстановить забытый пароль.", "ОК", "Отмена");
			else ShowPlayerDialog(playerid, 3, DIALOG_STYLE_INPUT, "Registration", "Now type the secret word.\nYou can recover your password using it.", "ОК", "Cancel");
			return 1;
		}
	}

	if(dialogid == 2)//Логин
	{
		if(Login[playerid]==0) {
			if(!response) {
				if(Lang[playerid]==0)
				ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Опции входа", "Восстановление пароля\nВойти под другим логином", "ОК", "Назад");
				else ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Log in options", "Password recovery\nLog in with other nickname", "ОК", "Back");
				return 1;
			}
			tmp = strtok(inputtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0)
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Вход в аккаунт", "Вы должны ввести пароль для входа. Для выхода наберите /q", "ОК", "Опции");
				else ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Log in", "You must type password to log in. For quit type /q", "ОК", "Options");
				return 1; }
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
			if (dini_Exists(PF)) {
				if(dini_Int(PF,"password") == udb_hash(tmp)) {
					TogglePlayerControllable(playerid,1);
					Login[playerid] = 1;
					Alevel[playerid] = dini_Int(PF,"alevel");
					SetTimerEx("AfterLogin", 50, 0, "i", playerid);
					if(Alevel[playerid]==0) {
						if(Lang[playerid]==0) SendClientMessage(playerid,green," Вы вошли.");
						else SendClientMessage(playerid, green, " You logged in.");
					}else{
						if(Lang[playerid]==0) format(string,sizeof(string)," Вы вошли как Администратор. [Уровень %d]",Alevel[playerid]);
						else format(string,sizeof(string)," You logged in as Administrator. [Level %d]",Alevel[playerid]);
						SendClientMessage(playerid,green,string); }
				} else {
					LogTry[playerid] -= 1; new tries = LogTry[playerid];
					if (tries > 0) {
						if(Lang[playerid]==0) ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Вход в аккаунт", "Вы ввели неверный пароль. Для выхода наберите /q", "ОК", "Опции");
						else ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Log in", "You entered wrong password. For quit type /q", "ОК", "Options");
					}else{
						format(string,sizeof(string)," ([%d] %s) - Server: неверный пароль",playerid,name);
						SendMessageToAdmins(string);
						format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: неверный пароль",EchoChan,playerid,name);
						IRC_SendRaw(EchoConnection2, string);
						if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: неверный пароль");
						else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: incorrect password");
						SetTimerEx("PKick", 50, 0, "i",playerid); }
				}
			}
		}
	}
	if(dialogid == 3) //Секретное слово
	{
		if(!response) return 1;
		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
		if (!dini_Exists(PF)) {
			if (isnull(inputtext)) {
				if(Lang[playerid]==0)
				ShowPlayerDialog(playerid, 3, DIALOG_STYLE_INPUT, "Регистрация", "Вы должны ввести секретное слово для регистрации.", "ОК", "Опции");
				else ShowPlayerDialog(playerid, 3, DIALOG_STYLE_INPUT, "Registration", "You must type the secret word to register.", "ОК", "Options");
				return 1; }
			tmp = strtok(inputtext,idx);
			if(Lang[playerid]==0) {
				format(string,sizeof(string),"Регистрация успешно выполнена.\nНе забывайте ваш пароль: %s\nПриятной игры!",tmppass[playerid]);
				ShowPlayerDialog(playerid, 100, DIALOG_STYLE_MSGBOX, "Регистрация", string, "ОК", "Отмена");
			} else {
				format(string,sizeof(string),"Registration completed.\nDon't forget your password: %s\nHave a nice time!",tmppass[playerid]);
				ShowPlayerDialog(playerid, 100, DIALOG_STYLE_MSGBOX, "Registration", string, "ОК", "Cancel"); }
			dini_Create(PF);
			GlobalPlayers++;
			dini_IntSet(PF,"password",udb_hash(tmppass[playerid]));
			dini_Set(PF,"word", tmp);
			dini_IntSet(PF,"lang",Lang[playerid]);
			TogglePlayerControllable(playerid,1);
			Login[playerid] = 1;
			Registered[playerid]=1;
			Alevel[playerid]=0;
			if(Lang[playerid]==0) format(string,sizeof(string)," Имя %s успешно зарегистрировано. Приятной игры.",name);
			else format(string,sizeof(string)," Name %s successfully registered. You can play now.",name);
			SendClientMessage(playerid,green,string);
			SetTimerEx("CheckNewYearSponsor", 50, 0, "i", playerid);
		}else{
			if(Lang[playerid]==0) format(string,sizeof(string)," Имя %s уже зарегистрировано.",name);
			else format(string,sizeof(string)," Name %s is already registered.",name);
			SendClientMessage(playerid,yellow,string); }
		return 1;
	}
	if(dialogid == 4) //Опции входа
	{
		if(!response) {
			if(Lang[playerid]==0)
			ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Вход в аккаунт", "Введите ваш пароль и нажмите OK.", "ОК", "Опции");
			else ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Log in", "Enter your password and press OK.", "OK", "Options");
			return 1;
		}
		if(listitem == 0) {
			if(Lang[playerid]==0)
			ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Восстановление пароля", "Введите секретное слово, указанное в процессе регистрации.", "ОК", "Назад");
			else ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Password recovery", "Enter the secret word, defined while registration.", "ОК", "Back");
		}
		if(listitem == 1) {
			if(Lang[playerid]==0)
			ShowPlayerDialog(playerid, 6, DIALOG_STYLE_INPUT, "Смена логина", "Введите ник, под которым вы хотите войти", "ОК", "Назад");
			else ShowPlayerDialog(playerid, 6, DIALOG_STYLE_INPUT, "Switch login", "Enter new nickname to log in.", "ОК", "Back");
		}
		return 1;
	}
	if(dialogid == 5) //Восстановление пароля
	{
		if(Login[playerid]==0) {
			if(!response) {
				if(Lang[playerid]==0)
				ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Опции входа", "Восстановление пароля\nВойти под другим логином", "ОК", "Назад");
				else ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Log in options", "Password recovery\nLog in with other nickname", "ОК", "Back");
				return 1;
			}
			tmp = strtok(inputtext,idx);
			if (isnull(tmp)) {
				if(Lang[playerid]==0)
				ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Восстановление пароля", "Вы должны ввести секретное слово.", "ОК", "Назад");
				else ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Password recovery", "You must type the secret word.", "ОК", "Back");
				return 1; }
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
			if (dini_Exists(PF)) {
				if(strcmp(dini_Get(PF,"word"),tmp,true) == 0) {
					dini_IntSet(PF,"password",udb_hash("1234"));
					if(Lang[playerid]==0) ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "Восстановление пароля", "Ваш пароль изменен на 1234\nИспользуйте '/setpass' чтобы изменить на более надёжный.", "ОК", "Назад");
					else ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "Password recovery", "You password changed to 1234\nUse '/setpass' to change it to more secure.", "ОК", "Back");
				}else{
					format(string,sizeof(string)," ([%d] %s) - Server: cекретное слово неверное",playerid,name);
					SendMessageToAdmins(string);
					format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: cекретное слово неверное",EchoChan,playerid,name);
					IRC_SendRaw(EchoConnection2, string);
					if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кикнуты с сервера. Информация - Server: cекретное слово неверное");
					else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: confidential word is incorrect");
					SetTimerEx("PKick", 50, 0, "i",playerid); }
			}
		}
		return 1;
	}
	if(dialogid == 6) //Смена логина
	{
		if(Login[playerid]==0) {
			if(!response) {
				if(Lang[playerid]==0)
				ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Опции входа", "Восстановление пароля\nВойти под другим логином", "ОК", "Назад");
				else ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Log in options", "Password recovery\nLog in with other nickname", "ОК", "Back");
				return 1;
			}

			tmp = strtok(inputtext,idx);

			if (isnull(tmp)) {
				if(Lang[playerid]==0)
				ShowPlayerDialog(playerid, 6, DIALOG_STYLE_INPUT, "Смена логина", "Вы должны ввести ник.", "ОК", "Назад");
				else ShowPlayerDialog(playerid, 6, DIALOG_STYLE_INPUT, "Switch login", "You must type the nickname.", "ОК", "Back");
				return 1; }


			SetPlayerName(playerid,tmp);

			GetPlayerName(playerid,name,sizeof(name));

			if(IsNumeric(name)) {
				format(string,sizeof(string)," ([%d] %s) - Server: неверный никнайм",playerid,name);
				SendMessageToAdmins(string);
				format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - Server: неверный никнайм",EchoChan,playerid,name);
				IRC_SendRaw(EchoConnection2, string);
				if(Lang[playerid]==0) SendClientMessage(playerid, COLOR_ORANGE, " *** Вы были кинуты с сервера. Информация - Server: неверный никнайм (invalid nickname)");
				else SendClientMessage(playerid, COLOR_ORANGE, " *** You was kicked from the server. Information - Server: invalid nickname");
				SetTimerEx("PKick", 100, 0, "i",playerid); return 1; }

			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", name);
			if (!dini_Exists(PF)) { GoToStart(playerid); return 1; }

			Lang[playerid] = dini_Int(PF,"lang");
			if(Lang[playerid]==0)
			ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Вход в аккаунт", "Введите ваш пароль и нажмите OK.", "ОК", "Опции");
			else ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Log in", "Enter your password and press OK.", "OK", "Options");
		}
		return 1;
	}

	if(dialogid == 7)
	{
		if(Lang[playerid]==0)
		ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Вход в аккаунт", "Введите ваш пароль и нажмите OK.", "ОК", "Опции");
		else ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Log in", "Enter your password and press OK.", "OK", "Options");
		return 1;
	}
	if(dialogid == 8) //Меню игрока
	{
		if(!response) return 0;
		new s[128];
		new loginname[MAX_PLAYER_NAME];
		new plid = CurrReceiver[playerid];
		GetPlayerName(plid,loginname,MAX_PLAYER_NAME);
		if(Lang[playerid]==0) format(s,sizeof(s),"Действия над %s (id: %d):",loginname,CurrReceiver[playerid]);
		else format(s,sizeof(s),"Actions with %s (id: %d):",loginname,CurrReceiver[playerid]);
		if(listitem == 0) {
			if (Mute[playerid] == 0) {
				if(AFK[playerid]==1) {
					if(Lang[playerid]==0) ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,"Личные сообщения недоступны в режиме AFK (напишите /away).","ОК","Закрыть");
					else ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,"Private messages are not available in AFK mode (type /away).","ОК","Close");
					return 1; }
				if(Lang[playerid]==0) {
					format(s,sizeof(s),"Личное сообщение для %s:",loginname);
					ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,s,"Введите текст сообщения","Отправить","Отмена");
				} else {
					format(s,sizeof(s),"Privmsg to %s:",loginname);
					ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,s,"Enter message text","Send","Cancel"); }
				return 1;
			}
		} //приват
		if(listitem == 1) {
			Ignore(playerid, plid);
		}
		if(listitem == 2) {
			GetStats(playerid, plid);
		}
		if(listitem == 3) {
			if(Alevel[playerid] > 0) {
				TeleTo(playerid, plid, name);
			}else Errorm(playerid);
		}
		if(listitem == 4) {
			if(Alevel[playerid] > 0) {
				TeleHere(playerid, plid, name);
			}else Errorm(playerid);
		}
		if(listitem == 5) {
			if(Alevel[playerid] > 0) {
				SlapPl(playerid, plid);
			}else return 1;
		} //слап
		if(listitem == 6) {
			if(Alevel[playerid] > 0) {
				EjectPl(plid);
			}else return 1;
		} //eject
		if(listitem == 7) {
			if(Alevel[playerid] > 0) {
				ToBack(plid);
			}else return 1;
		} //toback
		if(listitem == 8) {
			if(Alevel[playerid] > 0) {
				MutePl(plid);
			} else return 1;
		} //мут
		if(listitem == 9) {
			if(Alevel[playerid] > 0) {
				UnMutePl(plid);
			} else return 1;
		} //анмут
		if(listitem == 10) {
			if(Alevel[playerid] > 0) {
				JailPl(plid);
			} else return 1;
		} //тюрьма
		if(listitem == 11) {
			if(Alevel[playerid] > 0) {
				UnJailPl(plid);
			} else return 1;
		} //освобождение из тюрьмы
		if(listitem == 12) {
			if(Alevel[playerid] > 0) {
				if(Lang[playerid]==0) ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, s, "Введите причину кика", "ОК", "Отмена");  //кик
				else ShowPlayerDialog(playerid, 9, DIALOG_STYLE_INPUT, s, "Type the reason for kick", "OK", "Cancel");
			}
		}
		if(listitem == 13) {
			if(Alevel[playerid] > 1) {
				if(Lang[playerid]==0) ShowPlayerDialog(playerid, 12, DIALOG_STYLE_INPUT, s, "Введите причину автоматического кика", "ОК", "Отмена");  //акик
				else ShowPlayerDialog(playerid, 12, DIALOG_STYLE_INPUT, s, "Type the reason for auto kick", "OK", "Cancel"); }
		}
		if(listitem == 14) {
			if(Alevel[playerid] > 1) {
				if(Lang[playerid]==0) ShowPlayerDialog(playerid, 11, DIALOG_STYLE_INPUT, s, "Введите причину бана", "ОК", "Отмена");  //забанить
				else ShowPlayerDialog(playerid, 11, DIALOG_STYLE_INPUT, s, "Type the reason for ban", "OK", "Cancel");
			}
		}
		if(listitem == 15) {
			if(Alevel[playerid] > 0) {
				if(Lang[playerid]==0) ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, s, "Введите причину минибана", "ОК", "Отмена"); //минибан
				else ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, s, "Type the reason for miniban", "OK", "Cancel");
			}
		}
		if(listitem == 16) {
			if(Alevel[playerid] > 1) {
				if(Lang[playerid]==0) ShowPlayerDialog(playerid, 13, DIALOG_STYLE_INPUT, s, "Введите причину автоматического бана", "ОК", "Отмена");  //абан
				else ShowPlayerDialog(playerid, 13, DIALOG_STYLE_INPUT, s, "Type the reason for auto ban", "OK", "Cancel");
			}
		}
		return 1;
	}
	if(dialogid == 9) //Ввод причины кика
	{
		if(!response) return 0;
		if(Alevel[playerid] == 0) { Errorm(playerid); return 0; }
		new pname[MAX_PLAYER_NAME]; GetPlayerName(playerid,pname,sizeof(pname));
		new s[128];
		new loginname[MAX_PLAYER_NAME];
		GetPlayerName(CurrReceiver[playerid],loginname,MAX_PLAYER_NAME);
		if(Lang[playerid]==0) format(s,sizeof(s),"Действия над %s (id: %d):",loginname,CurrReceiver[playerid]);
		else format(s,sizeof(s),"Actions with %s (id: %d):",loginname,CurrReceiver[playerid]);
		if(isnull(inputtext)) {
			format(string,sizeof(string)," ([%d] %s) - %s",CurrReceiver[playerid],loginname,pname);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s",EchoChan,CurrReceiver[playerid],loginname,pname);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[CurrReceiver[playerid]]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - %s",pname);
			else format(string,sizeof(string), " *** You was kicked from the server. Information - %s",pname);
			SendClientMessage(CurrReceiver[playerid], COLOR_ORANGE, string);
			if(Lang[playerid]==0) ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,"Игрок кикнут с сервера.","ОК","Закрыть");
			else ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,"Player was kicked from server.","OK","Cancel");
		}else{
			format(string,sizeof(string)," ([%d] %s) - %s: %s",CurrReceiver[playerid],loginname,pname,inputtext);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,CurrReceiver[playerid],loginname,pname,inputtext);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[CurrReceiver[playerid]]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - %s: %s",pname,inputtext);
			else format(string,sizeof(string), " *** You was kicked from the server. Information - %s: %s",pname,inputtext);
			SendClientMessage(CurrReceiver[playerid], COLOR_ORANGE, string);
			if(Lang[playerid]==0) format(string,sizeof(string), "Игрок кикнут с сервера (%s).",inputtext);
			else format(string,sizeof(string), "Player was kicked from server (%s).",inputtext);
			if(Lang[playerid]==0) ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"OK","Закрыть");
			else ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"OK","Close"); }
		SetTimerEx("PKick", 50, 0, "i",CurrReceiver[playerid]);
		return 1;
	}
	if(dialogid == 10) //Ввод причины минибана
	{
		if(!response) return 0;
		if(Alevel[playerid] == 0) { Errorm(playerid); return 0; }
		new pname[MAX_PLAYER_NAME]; GetPlayerName(playerid,pname,sizeof(pname));
		new s[128];
		new loginname[MAX_PLAYER_NAME];
		GetPlayerName(CurrReceiver[playerid],loginname,MAX_PLAYER_NAME);
		if(Lang[playerid]==0) format(s,sizeof(s),"Действия над %s (id: %d):",loginname,CurrReceiver[playerid]);
		else format(s,sizeof(s),"Actions with %s (id: %d):",loginname,CurrReceiver[playerid]);
		if(isnull(inputtext)) {
			if(Lang[playerid]==0) ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, s, "Вы должны ввести причину!", "ОК", "Отмена");
			else ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, s, "You must type reason!", "OK", "Cancel");
		}else{
			GetPlayerName(playerid,pname,sizeof(pname));
			format(string,sizeof(string)," ([%d] %s) - %s: %s",CurrReceiver[playerid],loginname,pname,inputtext);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,CurrReceiver[playerid],loginname,pname,inputtext);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[CurrReceiver[playerid]]==0) format(string,sizeof(string), " *** Вы были забанены с сервера на 30 минут. Информация - %s: %s",pname,inputtext);
			else format(string,sizeof(string), " *** You was banned from the server for 30 minutes. Information - %s: %s",pname,inputtext);
			SendClientMessage(CurrReceiver[playerid], COLOR_ORANGE, string);
			if(Lang[playerid]==0) format(string,sizeof(string), "Игрок забанен с сервера на 30 минут (%s).",inputtext);
			else format(string,sizeof(string), "Player was banned from the server for 30 minutes (%s).",inputtext);
			if(Lang[playerid]==0) ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"ОК","Закрыть");
			else ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"OK","Close");
			format(string,sizeof(string), "player: %s; admin: %s; reason: %s",loginname,pname,inputtext);
			format(BanString,sizeof(BanString), "%s",string);
			SetTimerEx("PBanM", 50, 0, "i",CurrReceiver[playerid]);
			return 1;
		}
	}
	if(dialogid == 11) //Ввод причины бана
	{
		if(!response) return 0;
		if(Alevel[playerid] == 0) { Errorm(playerid); return 0; }
		new pname[MAX_PLAYER_NAME]; GetPlayerName(playerid,pname,sizeof(pname));
		new s[128];
		new loginname[MAX_PLAYER_NAME];
		GetPlayerName(CurrReceiver[playerid],loginname,MAX_PLAYER_NAME);
		if(Lang[playerid]==0) format(s,sizeof(s),"Действия над %s (id: %d):",loginname,CurrReceiver[playerid]);
		else format(s,sizeof(s),"Actions with %s (id: %d):",loginname,CurrReceiver[playerid]);
		if(isnull(inputtext)) {
			if(Lang[playerid]==0) ShowPlayerDialog(playerid, 11, DIALOG_STYLE_INPUT, s, "Вы должны ввести причину!", "ОК", "Отмена");
			else ShowPlayerDialog(playerid, 11, DIALOG_STYLE_INPUT, s, "You must type reason!", "OK", "Cancel");
		}else{
			GetPlayerName(playerid,pname,sizeof(pname));
			format(string,sizeof(string)," ([%d] %s) - %s: %s",CurrReceiver[playerid],loginname,pname,inputtext);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,CurrReceiver[playerid],loginname,pname,inputtext);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[CurrReceiver[playerid]]==0) format(string,sizeof(string), " *** Вы были забанены с сервера. Информация - %s: %s",pname,inputtext);
			else format(string,sizeof(string), " *** You was banned from the server. Information - %s: %s",pname,inputtext);
			SendClientMessage(CurrReceiver[playerid], COLOR_ORANGE, string);
			format(string,sizeof(string), "player: %s; admin: %s; reason: %s",loginname,pname,inputtext);
			format(BanString,sizeof(BanString), "%s",string);
			SetTimerEx("PBan", 50, 0, "i",CurrReceiver[playerid]);
			if(Lang[playerid]==0) format(string,sizeof(string), "Игрок забанен с сервера (%s).",inputtext);
			else format(string,sizeof(string), "Player was banned from the server (%s).",inputtext);
			if(Lang[playerid]==0) ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"ОК","Закрыть");
			else ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"OK","Close");
			return 1;
		}
	}
	if(dialogid == 12) //Ввод причины акика
	{
		if(!response) return 0;
		if(Alevel[playerid] == 0) { Errorm(playerid); return 0; }
		new pname[MAX_PLAYER_NAME]; GetPlayerName(playerid,pname,sizeof(pname));
		new s[128];
		new loginname[MAX_PLAYER_NAME];
		GetPlayerName(CurrReceiver[playerid],loginname,MAX_PLAYER_NAME);
		if(Lang[playerid]==0) format(s,sizeof(s),"Действия над %s (id: %d):",loginname,CurrReceiver[playerid]);
		else format(s,sizeof(s),"Actions with %s (id: %d):",loginname,CurrReceiver[playerid]);
		if(isnull(inputtext)) {
			if(Lang[playerid]==0) ShowPlayerDialog(playerid, 12, DIALOG_STYLE_INPUT, s, "Вы должны ввести причину!", "ОК", "Отмена");
			else ShowPlayerDialog(playerid, 12, DIALOG_STYLE_INPUT, s, "You must type reason!", "OK", "Cancel");
		}else{
			format(string,sizeof(string)," ([%d] %s) - %s: %s",CurrReceiver[playerid],loginname,pname,inputtext);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,CurrReceiver[playerid],loginname,pname,inputtext);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[CurrReceiver[playerid]]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - %s: %s",pname,inputtext);
			else format(string,sizeof(string), " *** You was kicked from the server. Information - %s: %s",pname,inputtext);
			SendClientMessage(CurrReceiver[playerid], COLOR_ORANGE, string);

			format(string,sizeof(string), "%s: %s",pname,inputtext);

			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", loginname);
			dini_IntSet(PF,"akick", 1);
			dini_Set(PF,"akickreason", string);

			SetTimerEx("PKick", 50, 0, "i",CurrReceiver[playerid]);
			if(Lang[playerid]==0) format(string,sizeof(string), "Автоматический кик установлен (%s).",inputtext);
			else format(string,sizeof(string), "Auto kick setted (%s).",inputtext);
			if(Lang[playerid]==0) ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"OK","Закрыть");
			else ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"OK","Close");
			return 1;
		}
	}
	if(dialogid == 13) //Ввод причины абана
	{
		if(!response) return 0;
		if(Alevel[playerid] == 0) { Errorm(playerid); return 0; }
		new pname[MAX_PLAYER_NAME]; GetPlayerName(playerid,pname,sizeof(pname));
		new s[128];
		new loginname[MAX_PLAYER_NAME];
		GetPlayerName(CurrReceiver[playerid],loginname,MAX_PLAYER_NAME);
		if(Lang[playerid]==0) format(s,sizeof(s),"Действия над %s (id: %d):",loginname,CurrReceiver[playerid]);
		else format(s,sizeof(s),"Actions with %s (id: %d):",loginname,CurrReceiver[playerid]);
		if(isnull(inputtext)) {
			if(Lang[playerid]==0) ShowPlayerDialog(playerid, 13, DIALOG_STYLE_INPUT, s, "Вы должны ввести причину!", "ОК", "Отмена");
			else ShowPlayerDialog(playerid, 13, DIALOG_STYLE_INPUT, s, "You must type reason!", "OK", "Cancel");
		}else{
			format(string,sizeof(string)," ([%d] %s) - %s: %s",CurrReceiver[playerid],loginname,pname,inputtext);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: %s",EchoChan,CurrReceiver[playerid],loginname,pname,inputtext);
			IRC_SendRaw(EchoConnection2, string);
			if(Lang[CurrReceiver[playerid]]==0) format(string,sizeof(string), " *** Вы были забанены с сервера. Информация - %s: %s",pname,inputtext);
			else format(string,sizeof(string), " *** You was banned from the server. Information - %s: %s",pname,inputtext);
			SendClientMessage(CurrReceiver[playerid], COLOR_ORANGE, string);

			format(string,sizeof(string), "player: %s; admin: %s; reason: %s",loginname,pname,inputtext);

			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", loginname);
			dini_IntSet(PF,"aban", 1);
			dini_Set(PF,"abanreason", string);
			format(BanString,sizeof(BanString), "%s",string);

			SetTimerEx("PBan", 50, 0, "i",CurrReceiver[playerid]);
			if(Lang[playerid]==0) format(string,sizeof(string), "Автоматический бан установлен (%s).",inputtext);
			else format(string,sizeof(string), "Auto ban setted (%s).",inputtext);
			if(Lang[playerid]==0) ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"ОК","Закрыть");
			else ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,string,"OK","Close");
			return 1;
		}
	}
	if(dialogid == 14) // приватные сообщения
	{
		if(!response) return 0;
		new s[128];
		new loginname[MAX_PLAYER_NAME];
		GetPlayerName(playerid,loginname,MAX_PLAYER_NAME);
		new ref[MAX_PLAYER_NAME];
		GetPlayerName(CurrReceiver[playerid],ref,MAX_PLAYER_NAME);
		if(isnull(inputtext)) {
			if(Lang[playerid]==0) ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,s,"Вы должны ввести текст сообщения!","Отправить","Отмена");
			else ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,s,"You must type text of the message!","Send","Cancel");
			return 1; }
		if(Lang[playerid]==0) format(s,sizeof(s),"Личное сообщение для %s:",ref);
		else format(s,sizeof(s),"Private message for %s:",ref);
		if(Lang[playerid]==0) ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,"Сообщение отправлено","OK","Закрыть");
		else ShowPlayerDialog(playerid,100,DIALOG_STYLE_MSGBOX,s,"Private message was sent","OK","Close");
		if(Lang[playerid]==0) {
			format(string, sizeof(string), " PM отправлено к %s (%d): %s", ref, CurrReceiver[playerid], inputtext);
			SendClientMessage(playerid, yellow, string);
		}else{
			format(string, sizeof(string), " PM was sent to %s (%d): %s", ref, CurrReceiver[playerid], inputtext);
			SendClientMessage(playerid, yellow, string); }
		if(Ignor[CurrReceiver[playerid]]!=playerid) {
			// if(Lang[CurrReceiver[playerid]]==0) format(s,sizeof(s),"Личное сообщение от %s:",loginname);
			// else format(s,sizeof(s),"Private message from %s:",loginname);
			// if(Lang[CurrReceiver[playerid]]==0) ShowPlayerDialog(CurrReceiver[playerid],15,DIALOG_STYLE_MSGBOX,s,inputtext,"Ответить","Закрыть");
			// else ShowPlayerDialog(CurrReceiver[playerid],15,DIALOG_STYLE_MSGBOX,s,inputtext,"Answer","Close");
			if(Lang[CurrReceiver[playerid]]==0) {
				format(string, sizeof(string)," PM от %s (%d): %s", loginname, playerid, inputtext);
				SendClientMessage(CurrReceiver[playerid], yellow, string);
			}else{
				format(string, sizeof(string)," PM from %s (%d): %s", loginname, playerid, inputtext);
				SendClientMessage(CurrReceiver[playerid], yellow, string); }
			GameTextForPlayer(CurrReceiver[playerid],"~g~New PM",3000,1);
			CurrReceiver[CurrReceiver[playerid]] = playerid;
			//Sends to admin
			format(string,sizeof(string)," *** PM: %s (%d) to %s (%d): %s",loginname,playerid,ref,CurrReceiver[playerid],inputtext);
			SendMessageToAdminEx(playerid,string);
			format(string,sizeof(string),"NOTICE @%s :10*** PM: %s (%d) to %s (%d): %s",EchoChan,loginname,playerid,ref,CurrReceiver[playerid],inputtext);
			IRC_SendRaw(EchoConnection1, string); }
		return 1;
	}
	if(dialogid == 15)
	{
		if(!response) return 0;
		new s[128];
		new loginname[MAX_PLAYER_NAME];
		GetPlayerName(CurrReceiver[playerid],loginname,MAX_PLAYER_NAME);
		if(Lang[playerid]==0) format(s,sizeof(s),"Личное сообщение для %s:",loginname);
		else format(s,sizeof(s),"Private message for %s:",loginname);
		if(Lang[playerid]==0) ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,s,"Введите текст сообщения","Отправить","Отмена");
		else ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,s,"Type the message","Send","Cancel");
		return 1;
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(Login[playerid]==0) return 1;

	new s[128];
	new loginname[MAX_PLAYER_NAME];
	GetPlayerName(clickedplayerid,loginname,MAX_PLAYER_NAME);
	if(Alevel[playerid] > 0) {
		if(Lang[playerid]==0) {
			format(s,sizeof(s),"Действия над %s (id: %d):",loginname,clickedplayerid);
			ShowPlayerDialog(playerid,8,DIALOG_STYLE_LIST,s,"Приват\nИгнорировать\nСтатистика\nТелепортироваться к игроку\nТелепортировать игрока к себе\nПроверить игрока\nВыкинуть из транспорта\nТелепортировать на бэк\nЗаткнуть\nРазоткнуть\nПосадить в тюрьму\nОсвободить из тюрьмы\nКик\nАвтоматический кик\nБан\nБан на 30 минут\nАвтоматический бан","ОК","Закрыть");
		}
		else {
			format(s,sizeof(s),"Actions with %s (id: %d):",loginname,clickedplayerid);
			ShowPlayerDialog(playerid,8,DIALOG_STYLE_LIST,s,"Privmsg\nIgnore\nStats\nGo To\nGet Here\nSlap\nEject from vehicle\nTeleport to back\nMute\nUnmute\nJail\nUnjail\nKick\nAutomatic kick\nBan\nBan for 30 minutes\nAutomatic ban","ОК","Close");
		}
	} else {
		if(Lang[playerid]==0) {
			format(s,sizeof(s),"Действия над %s (id: %d):",loginname,clickedplayerid);
			ShowPlayerDialog(playerid,8,DIALOG_STYLE_LIST,s,"Приват\nИгнорировать\nСтатистика","ОК","Закрыть");
		}
		else {
			format(s,sizeof(s),"Actions with %s (id: %d):",loginname,clickedplayerid);
			ShowPlayerDialog(playerid,8,DIALOG_STYLE_LIST,s,"Privmsg\nIgnore\nStats","ОК","Close"); } }
	CurrReceiver[playerid] = clickedplayerid;
	return 1;
}

public ChCheckResult(playerid,id, irc) {
	new Float:NewHP,receiver[MAX_PLAYER_NAME],str[128];
	GetPlayerHealth(id,NewHP);
	if(NewHP >= CheckTmp[id][HP]-5) {
		GetPlayerName(id,receiver,sizeof(receiver));
		if(irc == 0) { format(str,sizeof(str)," Игрок %s (id: %d) использует читы здоровья",receiver,id);
			SendClientMessage(playerid, yellow, str); }
		else { format(str,sizeof(str),"3Игрок %s (id: %d) использует читы здоровья",receiver,id);
			IRC_Say(EchoConnection1, EchoChan, str); }
	}
	else {
		GetPlayerName(id,receiver,sizeof(receiver));
		if(irc == 0) { format(str,sizeof(str)," Игрок %s (id: %d) не читер",receiver,id);
			SendClientMessage(playerid, yellow, str); }
		else { format(str,sizeof(str),"3Игрок %s (id: %d) не читер",receiver,id);
			IRC_Say(EchoConnection1, EchoChan, str); }
	}
	SetPlayerPos(id,CheckTmp[id][psX],CheckTmp[id][psY],CheckTmp[id][psZ]);
	SetPlayerFacingAngle(id,CheckTmp[id][psA]);
	if(CheckTmp[id][VehID] != -1) PutPlayerInVehicle(id,CheckTmp[id][VehID],CheckTmp[id][VehSeat]);
	CheckTmp[id][VehID] = -1;
	CheckTmp[id][VehSeat] = 0;
	SetPlayerHealth(id, CheckTmp[id][HP]);
	CheckTmp[id][HP] = 0;
}

stock Ignore(playerid, plid) {
	new string[256];
	if(Ignor[playerid]==255) {
		Ignor[playerid]=plid;
		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		if(Lang[playerid]==0) format(string,sizeof(string)," Все PM сообщения от %s (%d) отключены.",ref,plid);
		else format(string,sizeof(string)," All PM messages from %s (%d) will be ignored.",ref,plid);
		SendClientMessage(playerid, yellow, string);

	}else{

		if(Lang[playerid]==0) SendClientMessage(playerid, yellow, " Функция игнорирования отключена.");
		else SendClientMessage(playerid, yellow, " Ignore function is off.");
		Ignor[playerid]=255; }

	return 1;
}

stock GetStats(playerid, plid) {
	new string[256];
	new scores = Kills[plid] - Deaths[plid];
	new Float:killz, Float:deathz, Float:ratio;
	killz = Kills[plid]; deathz = Deaths[plid];
	if(deathz!=0) ratio = killz / deathz; else ratio=0;

	new timeplh2 = 0;
	new timeplm2 = 0;

	if(Ingame[plid]>60) {
		timeplh2 = (Ingame[plid]/60);
		timeplm2 = Ingame[plid]-(timeplh2*60);
	}else{
		timeplm2 = Ingame[plid];
		timeplh2 = 0;
	}

	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
	new rus[1], city[256];
	CountryAndCity(plid, rus, city);
	new countytextrus[256];
	if(rus[0]==0) {
		format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[2], CountryCity[4]);
	}else{
		if(strcmp(city,"none",true)==0) {
			format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[0], CountryCity[4]);
		}else{
			format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[0], city); }}
	if(Registered[plid]==1) format(string,sizeof(string)," LV Maximum v%s | Cтатистика %s (%s): ",Version,ref, countytextrus);
	else format(string,sizeof(string)," LV Maximum v%s | Cтатистика %s [не зарегистрирован] (%s): ",Version,ref, countytextrus);
	SendClientMessage(playerid,green,string);
	format(string,sizeof(string)," Убийства: %d || Смерти: %d || Очки: %d || Ратио: %0.2f",Kills[plid],Deaths[plid],scores, ratio);
	SendClientMessage(playerid,yellow,string);
	format(string,sizeof(string)," Наличка: %d || В банке: %d || Время в игре: %d часов, %d минут",CCCash[plid],Bank[plid],timeplh2,timeplm2);
	SendClientMessage(playerid,yellow,string);
	format(string,sizeof(string)," Выиграно гонок: %d || Выиграно дефматчей: %d",RaceWIN[plid],DMWIN[plid]);
	SendClientMessage(playerid,yellow,string);
	if(Gang[plid]==1){
		if(GangTesting[plid]==1)
		format(string,sizeof(string)," Состоит в банде %s",PLGangName[plid]);
		else format(string,sizeof(string)," Состоит в банде (на тесте) %s",PLGangName[plid]);
		SendClientMessage(playerid,yellow,string); }
	if(Gang[plid]==2){
		format(string,sizeof(string)," Админ банды %s",PLGangName[plid]);
		SendClientMessage(playerid,yellow,string); }
	if(Gang[plid]==3){
		format(string,sizeof(string)," Владелец банды %s",PLGangName[plid]);
		SendClientMessage(playerid,yellow,string); }

	if(strlen(PlayerStatus[plid])!=0) {
		format(string,sizeof(string)," %s",PlayerStatus[plid]);
		SendClientMessage(playerid,yellow,string); }

	if(Alevel[plid]==1) SendClientMessage(playerid,yellow," Модератор сервера");
	if(Alevel[plid]==2) SendClientMessage(playerid,yellow," Администратор сервера");
	if(Alevel[plid]==3) SendClientMessage(playerid,yellow," Супер-Администратор сервера");
	if(Alevel[plid]==4) SendClientMessage(playerid,yellow," Владелец сервера");
	if(Sponsor[plid]==1) SendClientMessage(playerid,yellow," Спонсор сервера");
	if(IRCuser[plid]==1) SendClientMessage(playerid,yellow," IRC пользователь");
	if(MainNoob[plid]==1) SendClientMessage(playerid,yellow," Главный Нуб сервера");

	return 1;
}

stock TeleTo(playerid, plid, name[]) {
	new string[256];
	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Alevel[i]>0) {
		if(Lang[i]==0) format(string,sizeof(string), " Телепорт к игроку %s.",ref);
		else format(string,sizeof(string), " Teleport to player %s.",ref);
		SendClientMessage(i, yellow, string); }

	new Float:X1, Float:Y1, Float:Z1;
	if (IsPlayerInAnyVehicle(playerid)) { GetPlayerPos(plid,X1,Y1,Z1); SetVehiclePos(GetPlayerVehicleID(playerid),X1+5,Y1,Z1+1); SetPlayerInterior(playerid, GetPlayerInterior(plid)); }
	else { GetPlayerPos(plid,X1,Y1,Z1); SetPlayerPos(playerid,X1+5,Y1,Z1+1); SetPlayerInterior(playerid, GetPlayerInterior(plid)); }

	if(Lang[plid]==0) format(string,sizeof(string), " Админ/Модер %s телепортировался к вам.",name);
	else format(string,sizeof(string), " Admin/Moder %s was teleported to you.",name);
	SendClientMessage(plid, yellow, string);
	return 1;
}

stock TeleHere(playerid, plid, name[]) {
	new string[256];
	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Alevel[i]>0) {
		if(Lang[i]==0) format(string,sizeof(string), " Игрок %s телепортирован к Админу %s.",ref,name);
		else format(string,sizeof(string), " Player %s was teleported to Admin %s.",ref,name);
		SendClientMessage(i, yellow, string); }

	new Float:X1, Float:Y1, Float:Z1;
	if (IsPlayerInAnyVehicle(plid)) { GetPlayerPos(playerid,X1,Y1,Z1); SetVehiclePos(GetPlayerVehicleID(plid),X1+5,Y1,Z1+1);  SetPlayerInterior(plid, GetPlayerInterior(playerid)); }
	else { GetPlayerPos(playerid,X1,Y1,Z1); SetPlayerPos(plid,X1+5,Y1,Z1+1); SetPlayerInterior(plid, GetPlayerInterior(playerid)); }

	if(Lang[plid]==0) format(string,sizeof(string), " Админ/Модер %s телепортировал вас к себе.",name);
	else format(string,sizeof(string), " Admin/Moder %s was teleported you.",name);
	SendClientMessage(plid, yellow, string);
	return 1;
}

stock SlapPl(playerid, plid) {
	new string[256];
	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

	if(AFK[plid]==1 || !playerSpawned[plid] || (DuelMember[0]==plid && DuelStarted>0)|| (DuelMember[1]==plid && DuelStarted==2)|| GetPlayerState(plid) == PLAYER_STATE_SPECTATING || GetPlayerInterior(plid)!=0) {
		if(Lang[playerid]==0) SendClientMessage(playerid, yellow," В АФК или не заспаунен или в интерьере или на дуэли.");
		else SendClientMessage(playerid, yellow," In AFK mode or not spawned or in interior or on duel.");
		return 1; }

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Alevel[i]>0) {
		if(Lang[i]==0) format(string,sizeof(string), " Тестируем %s..",ref);
		else format(string,sizeof(string), " Testing %s..",ref);
		SendClientMessage(i, yellow, string); }

	if(Lang[plid]==0) ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Информация","Вы были проверены на читы Администрацией","ОК","Закрыть");
	else ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Information","You was checked for cheats by Administration","ОК","Close");

	if(IsPlayerInAnyVehicle(plid)) {
		CheckTmp[plid][VehID] = GetPlayerVehicleID(plid);
		CheckTmp[plid][VehSeat] = GetPlayerVehicleSeat(plid);
		RemovePlayerFromVehicle(plid);
	}
	GetPlayerPos(plid,CheckTmp[plid][psX],CheckTmp[plid][psY],CheckTmp[plid][psZ]);
	GetPlayerFacingAngle(plid,CheckTmp[plid][psA]);
	SetPlayerPos(plid,1026.9153,-2179.5796,50.4760);
	SetPlayerFacingAngle(plid,91.0452);
	GetPlayerHealth(plid,CheckTmp[plid][HP]);
	SetPlayerHealth(plid,CheckTmp[plid][HP]-5);
	SetTimerEx("ChCheckResult",3000,0,"iii",playerid,plid, 0);
	return 1;
}

stock EjectPl(plid) {
	new string[256];
	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Alevel[i]>0) {
		if(Lang[i]==0) format(string,sizeof(string), " Игрок %s выброшен из транспорта.",ref);
		else format(string,sizeof(string), " Player %s was ejected from vehicle.",ref);
		SendClientMessage(i, yellow, string); }

	if(Lang[plid]==0) ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Информация","Вы были выброшены из транспорта Администрацией","ОК","Закрыть");
	else ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Information","You was ejected from vehicle by Administration","ОК","Close");

	RemovePlayerFromVehicle(plid);
	return 1;
}

stock ToBack(plid) {
	new string[256];
	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Alevel[i]>0) {
		if(Lang[i]==0) format(string,sizeof(string), " Игрок %s телепортирован на back.",ref);
		else format(string,sizeof(string), " Player %s was teleported to back.",ref);
		SendClientMessage(i, yellow, string); }

	if(Lang[plid]==0) ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Информация","Вы были телепортированы на back Администрацией","ОК","Закрыть");
	else ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Information","You was teleported to back by Administration","ОК","Close");

	SetPlayerPos(plid,1958.3783,1343.1572,15.3746);
	SetPlayerInterior(plid, 0);
	SendClientMessage(plid, green, " Back");
	return 1;
}

stock MutePl(plid) {
	new string[256];
	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Alevel[i]>0) {
		if(Lang[i]==0) format(string,sizeof(string), " Игрок %s умолчен на 7 минут.",ref);
		else format(string,sizeof(string), " Player %s muted for 7 minutes.",ref);
		SendClientMessage(i, yellow, string); }

	if(Lang[plid]==0) ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Информация", " Вы были умолчаны Администрацией", "OK", "Закрыть");
	else ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Information", " You was muted by Administration", "OK", "Close");

	Mute[plid]=1;
	SetTimerEx("DestroyFloodEx", 420000, 0, "i", plid);
	return 1;
}

stock UnMutePl(plid) {
	new string[256];
	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Alevel[i]>0) {
		if(Lang[i]==0) format(string,sizeof(string), " Игрок %s может писать сообщения.",ref);
		else format(string,sizeof(string), " Player %s unmuted.",ref);
		SendClientMessage(i, yellow, string); }

	if(Lang[plid]==0) ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Информация", "Администрация разрешила вам писать сообщения", "OK", "Закрыть");
	else ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Information", "You was unmuted by Administration", "OK", "Close");

	Mute[plid]=0;
	return 1;
}

stock JailPl(plid) {
	new string[256];
	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Alevel[i]>0) {
		if(Lang[i]==0) format(string,sizeof(string), " Игрок %s отправлен в тюрьму на 7 минут.",ref);
		else format(string,sizeof(string), " Player %s jailed for 7 minutes.",ref);
		SendClientMessage(i, yellow, string); }


	if(Lang[plid]==0) ShowPlayerDialog(plid, 100,DIALOG_STYLE_MSGBOX, "Информация", " Вы были отправлены в тюрьму Администрацией", "OK", "Закрыть");
	else ShowPlayerDialog(plid, 100,DIALOG_STYLE_MSGBOX, "Information", " You was jailed by Administration", "OK", "Close");

	Jail[plid]=1;
	SetPlayerInterior(plid,6);
	SetPlayerPos(plid,265.1273,77.6823,1001.0391);
	JailTimer[plid]=SetTimerEx("DestroyJailEx", 420000, 0, "i", plid);
	return 1;
}

stock UnJailPl(plid) {
	new string[256];
	new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i))
	if(Alevel[i]>0) {
		if(Lang[i]==0) format(string,sizeof(string), " Игрок %s освобождён из тюрьмы.",ref);
		else format(string,sizeof(string), " Player %s unjailed.",ref);
		SendClientMessage(i, yellow, string); }


	if(Lang[plid]==0) ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Информация", "Вы были освобождены из тюрьмы Администрацией", "OK", "Закрыть");
	else ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Information", "You was unjailed by Administration", "OK", "Close");

	Jail[plid]=0;
	SpawnPlayer(plid);
	KillTimer(JailTimer[plid]);
	return 1;
}

stock SearchPl(tmp[]) {
	new found1=0;
	new temp=0;
	for(new i=0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) {
		new foundname1[MAX_PLAYER_NAME];
		GetPlayerName(i, foundname1, MAX_PLAYER_NAME);
		new namelen = strlen(foundname1);
		new bool:searched1=false;
		for(new pos=0; pos <= namelen; pos++)
		if(searched1 != true && temp != -1)
		if(strfind(foundname1,tmp,true) == pos) {
			found1++;
			temp=i;
			if(found1>1) { temp = -1; }
			searched1 = true; }
	}
	if(found1<1) { temp = -2; }
	return temp;
}

public CheckNewYearSponsor(playerid) {
	new year, month, day;
	getdate(year,month,day); // NEW YEAR FUNCTION
	if((month==12 && day >= 30) ||(month==1 && day <= 3)) {
		Sponsor[playerid] = 1;
		InvAllow[playerid] = 1;
		Cheat[playerid] = 1;
		LKills[playerid]=20;
		if(Lang[playerid]==0) { SendClientMessage(playerid, cyan, " Новогодний спонсорский аккаунт. Срок действия: с 30 декабря по 3 января.");
			SendClientMessage(playerid, yellow, " Seasparrow разблокирован.");
			SendClientMessage(playerid, yellow, " Rhino разблокирован."); }
		else { SendClientMessage(playerid, cyan, " New year sponsorship account. Validity: from 30 December to 3 January");
			SendClientMessage(playerid, yellow, " Rhino unlocked.");
			SendClientMessage(playerid, yellow, " Seasparrow unlocked."); } } }


public IRC_OnConnect(botid)
{
	CrashTest("[function] IRC_OnConnect");
	Connections++;                                  // save number of connections
	SetTimerEx("ircConnectTimer", 8000, 0, "i", botid);
	//IRC_JoinChannel(conn, "#Main");                    // join the echo channel
}

public ircConnectTimer(conn)
{
	CrashTest("[function] ircConnectTimer");
	new string[64];
	format(string,sizeof(string), "PRIVMSG NickServ :IDENTIFY %s",IRCpassword);
	IRC_SendRaw(conn, string);
	IRC_JoinChannel(conn, EchoChan);                    // join the echo channel
}


// ircIsOp stock
// This stock gets the user level in the requested channel, and compares with: ~, &, or @.
// If any of the levels match, stock returns true.  (else, stock return false)
// ----------------------------------------------

stock ircIsOwn(conn,user[])
{
	new ircLevel[4];
	IRC_GetUserChannelMode(conn, EchoChan, user, ircLevel);
	if(!strcmp(ircLevel, "~", true,1)) return 1;
	return 0;
}

stock ircIsSop(conn,user[])
{
	new ircLevel[4];
	IRC_GetUserChannelMode(conn, EchoChan, user, ircLevel);
	if(!strcmp(ircLevel, "~", true,1) || !strcmp(ircLevel, "&", true,1)) return 1;
	return 0;
}

stock ircIsOp(conn,user[])
{
	new ircLevel[4];
	IRC_GetUserChannelMode(conn, EchoChan, user, ircLevel);
	if(!strcmp(ircLevel, "~", true,1) || !strcmp(ircLevel, "&", true,1) || !strcmp(ircLevel, "@", true,1)) return 1;
	return 0;
}

stock ircIsHop(conn,user[])
{
	new ircLevel[4];
	IRC_GetUserChannelMode(conn, EchoChan, user, ircLevel);
	if(!strcmp(ircLevel, "~", true,1) || !strcmp(ircLevel, "&", true,1) || !strcmp(ircLevel, "@", true,1)) return 1;
	if(!strcmp(ircLevel, "%", true,1)) return 1;
	return 0;
}

stock ircIsUser(conn,user[])
{
	new ircLevel[256];
	IRC_GetUserChannelMode(conn, EchoChan, user, ircLevel);
	if (strcmp(ircLevel, "-", true)==0) return 1;
	return 0;
}

stock ircIsVoise(conn,user[])
{
	new ircLevel[4];
	IRC_GetUserChannelMode(conn, EchoChan, user, ircLevel);
	if(!strcmp(ircLevel, "+", true,1)) return 1;
	return 0;
}

// ircOnUserSay callback
// ----------------------------------------------

public IRC_OnUserJoinChannel(botid, channel[], user[], host[]) {
	CrashTest("[function] IRC_OnUserJoinChannel");
	if(botid==EchoConnection1) return 1;
	if(strfind(user, "Echo", true) != -1) return 1;
	if(strfind(user, "IRC", true) != -1) return 1;
	if(strcmp(channel,EchoADMChan,true)==0) return 1;
	dini_Set("LVM/IRCusers.ini",user,host);
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string, sizeof(string), " *** %s зашёл на канал. [IRC]",user);
		SendClientMessage(i, yellow, string);
	}else{
		format(string, sizeof(string), " *** %s joined the channel. [IRC]",user);
		SendClientMessage(i, yellow, string); }

	format(crashtext, sizeof(crashtext), "[irc] %s: joined the channel.", user);
	printf(crashtext);
	format(string, sizeof(string), "3*** %s зашёл на канал. [IRC]", user);
	//IRC_Say(EchoConnection1, channel, string);

	return 1; }

// ----------------------------------------------

public IRC_OnUserLeaveChannel(botid, channel[], user[], host[], message[]) {
	CrashTest("[function] IRC_OnUserLeaveChannel");
	if(botid==EchoConnection1) return 1;
	if(strfind(user, "Echo", true) != -1) return 1;
	if(strfind(user, "IRC", true) != -1) return 1;
	if(strcmp(channel,EchoADMChan,true)==0) return 1;
	dini_Unset("LVM/IRCusers.ini",user);
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string, sizeof(string), " *** %s покинул канал. [IRC]",user);
		SendClientMessage(i, yellow, string);
	}else{
		format(string, sizeof(string), " *** %s left the channel. [IRC]",user);
		SendClientMessage(i, yellow, string); }

	format(crashtext, sizeof(crashtext), "[irc] %s: left the channel.", user);
	printf(crashtext);

	format(string, sizeof(string), "3*** %s покинул канал. [IRC]", user);
	//IRC_Say(EchoConnection1, channel, string);

	return 1; }

// ----------------------------------------------


public IRC_OnUserDisconnect(botid, user[], host[], message[]) {
	CrashTest("[function] IRC_OnUserDisconnect");
	if(botid==EchoConnection1) return 1;
	if(strfind(user, "Echo", true) != -1) return 1;
	if(strfind(user, "IRC", true) != -1) return 1;
	dini_Unset("LVM/IRCusers.ini",user);
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i)) if(MTsys[i] == 0)
	if(Lang[i]==0) {
		format(string, sizeof(string), " *** %s покинул канал. [IRC]",user);
		SendClientMessage(i, yellow, string);
	}else{
		format(string, sizeof(string), " *** %s left the channel. [IRC]",user);
		SendClientMessage(i, yellow, string); }

	format(crashtext, sizeof(crashtext), "[irc] %s: left the channel.", user);
	printf(crashtext);

	format(string, sizeof(string), "3*** %s покинул канал. [IRC]", user);
	//IRC_Say(EchoConnection1, channel, string);

	return 1; }

// ----------------------------------------------
/*
public IRC_OnDisconnect(botid) {
CrashTest("[function] IRC_OnDisconnect");
if(botid==1) { SetTimer("IRC_ReconnectF", 30000, 0);
printf("[irc] AutoReconnect."); }
return 1; }
*/
// ----------------------------------------------
// IRCST
public IRC_OnUserSay(botid, recipient[], user[], host[], message[]) {
	CrashTest("[function] IRC_OnUserSay");

	if (message[0] == COMMAND_PREFIX) {
		new tmp[256],idx;
		tmp = strtok(message, idx);
		if(strcmp(tmp, "!join", true) == 0){
			IRC_JoinChannel(EchoConnection2, EchoADMChan);
			return 1; }
	}

	if(botid==EchoConnection1) return 1;
	if(!message[0]) return 1;

	//Connection check, if fail - reconnect func will be started
	if(strcmp(user,EchoBot1,true)==0) if(strcmp(message,"ping",true)==0) IRCconnetion=1;

	if(strfind(user, "Echo", true) != -1) return 1;
	printf("[irc] %s: %s", user, message);

	if (recipient[0] == CHANNEL_PREFIX && message[0] == COMMAND_PREFIX) {
		SetTimerEx("IRC_UserCommand", 10, 0, "dssss", botid, recipient, user, host, message);
		return 1;}

	SetTimerEx("IRC_UserSay", 10, 0, "dssss", botid, recipient, user, host, message);

	return 1; }

//---------------------------------------------------

public IRC_UserSay(conn, recipient[], user[], host[], message[]) {

	CrashTest("[function] IRC_UserSay");
	//print("[irc] IRC_NextOnUserSay");
	format(recipient2,128,"%s",recipient);
	format(user2,128,"%s",user);
	format(host2,128,"%s",host);
	format(message2,256,"%s",message);

	new string[256];

	if(strcmp(recipient2,EchoADMChan,true)!=0) {
		if (ircIsUser(conn,user2)) {
			format(string,sizeof(string), "%s (IRC): %s", user2, message2[0]);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, yellow, string);

			format(string, sizeof(string), "2[IRC]\2;2 %s2: %s", user2, message2[0]);
			return 1;
		}

		if (ircIsOp(conn,user2)) {
			format(string,sizeof(string), "* Admin %s (IRC): %s", user2, message2[0]);
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
			SendClientMessage(i, COLOR_ADSAY, string);

			format(string, sizeof(string), "12[IRC]\2; 12* Admin %s2: %s", user2, message2[0]);
			return 1;
		}

		format(string,sizeof(string), "* Moder %s (IRC): %s", user2, message2[0]);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		SendClientMessage(i, COLOR_ADSAY, string);

		format(string, sizeof(string), "12[IRC]\2; 12* Moder %s2: %s", user2, message2[0]);

		return 1;
	}

	return 1; }



public IRC_UserCommand(conn, recipient[], user[], host[], message[]) {

	CrashTest("[function] IRC_UserCommand");
	//print("[irc] IRC_UserSay");

	new string[256],tmp[256],tmp2[256],idx;

	format(recipient2,128,"%s",recipient);
	format(user2,128,"%s",user);
	format(host2,128,"%s",host);
	format(message2,256,"%s",message);

	//printf("%s %s %s %s", recipient, user, host, message);
	//printf("%d %d %d %d", strlen(recipient), strlen(user), strlen(host), strlen(message));


	tmp = strtok(message, idx);

	if(strcmp(tmp,"!start",true)==0) {
		if(CityAdding!=0) return 1;
		if(ircIsUser(EchoConnection2,user2)) return 1;
		IRC_JoinChannel(EchoConnection2, EchoADMChan);
		CityAdding=1;
		format(CityAddingNickName,sizeof(CityAddingNickName),"%s",user2);
		format(string,sizeof(string),"3Работу с городами начал: %s",CityAddingNickName);
		IRC_Say(EchoConnection2, EchoADMChan, string);
		ReadCity();
		return 1; }

	if(strcmp(tmp,"!stop",true)==0) {
		if(CityAdding!=1) return 1;
		if(ircIsUser(EchoConnection2,user2)) return 1;
		CityAddingNickName="";
		IRC_Say(EchoConnection2, EchoADMChan, "3Работа с городами завершена.");
		CityAdding=0;
		return 1; }


	if(strcmp(tmp,"!pm",true)==0) {
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if (isnull(tmp) || isnull(tmp2)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !PM <ID> <СООБЩЕНИЕ>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new namep[MAX_PLAYER_NAME];
		GetPlayerName(plid, namep, sizeof(namep));

		new lent=5;
		lent+=strlen(tmp);

		//PM recieved from...
		if(Lang[plid]==0) {
			format(string, sizeof(string)," PM от %s (IRC): %s", user2, message2[lent]);
			SendClientMessage(plid, yellow, string);
		}else{
			format(string, sizeof(string)," PM from %s (IRC): %s", user2, message2[lent]);
			SendClientMessage(plid, yellow, string); }

		GameTextForPlayer(plid,"~g~New PM",3000,1);

		//Pm is sent to...
		format(string, sizeof(string), "3PM отправлено к %s (%d): %s", namep, plid, message2[lent]);
		IRC_Say(EchoConnection1, recipient2, string);

		return 1; }

	if(strcmp(tmp,"!players",true)==0) {

		new players;

		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) players++;
		if(players==0) {
			IRC_Say(EchoConnection2, recipient2, "14Сервер пуст.");
			return 1; }

		format(string,sizeof(string),"3LV Max: %d/%d",ReturnPlayers(),GetMaxPlayers());
		IRC_Say(EchoConnection2, recipient2, string);

		new name[256];
		players=0;

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) {
			GetPlayerName(i,name,sizeof(name));

			if(players==0)
			format(string1,sizeof(string1),"3Игроки:14 %s", name);
			if(players>0 && players<20)
			format(string1,sizeof(string1),"%s, %s",string1, name);

			if(players==20)
			format(string2,sizeof(string2),"14%s", name);
			if(players>20 && players<40)
			format(string2,sizeof(string2),"%s, %s",string2, name);

			if(players==40)
			format(string3,sizeof(string3),"14%s", name);
			if(players>40 && players<60)
			format(string3,sizeof(string3),"%s, %s",string3, name);

			if(players==60)
			format(string4,sizeof(string4),"14%s", name);
			if(players>60 && players<80)
			format(string4,sizeof(string4),"%s, %s",string4, name);

			if(players==80)
			format(string5,sizeof(string5),"14%s", name);
			if(players>80 && players<100)
			format(string5,sizeof(string5),"%s, %s",string5, name);

			if(players==100)
			format(string6,sizeof(string6),"14%s", name);
			if(players>100 && players<120)
			format(string6,sizeof(string6),"%s, %s",string6, name);

			if(players==120)
			format(string7,sizeof(string7),"14%s", name);
			if(players>120 && players<140)
			format(string7,sizeof(string7),"%s, %s",string7, name);

			if(players==140)
			format(string8,sizeof(string8),"14%s", name);
			if(players>140 && players<160)
			format(string8,sizeof(string8),"%s, %s",string8, name);

			if(players==160)
			format(string9,sizeof(string9),"14%s", name);
			if(players>160 && players<180)
			format(string9,sizeof(string9),"%s, %s",string9, name);

			if(players==180)
			format(string10,sizeof(string10),"14%s", name);
			if(players>180 && players<200)
			format(string10,sizeof(string10),"%s, %s",string10, name);

			players++; }

		players--;

		if(players<20)
		IRC_Say(EchoConnection2, recipient2, string1);

		if(players>=20 && players<40) {
			IRC_Say(EchoConnection2, recipient2, string1);
			IRC_Say(EchoConnection2, recipient2, string2); }

		if(players>=40 && players<60) {
			IRC_Say(EchoConnection2, recipient2, string1);
			IRC_Say(EchoConnection2, recipient2, string2);
			IRC_Say(EchoConnection2, recipient2, string3); }

		if(players>=60 && players<80) {
			IRC_Say(EchoConnection2, recipient2, string1);
			IRC_Say(EchoConnection2, recipient2, string2);
			IRC_Say(EchoConnection2, recipient2, string3);
			IRC_Say(EchoConnection2, recipient2, string4); }

		if(players>=80 && players<100) {
			IRC_Say(EchoConnection2, recipient2, string1);
			IRC_Say(EchoConnection2, recipient2, string2);
			IRC_Say(EchoConnection2, recipient2, string3);
			IRC_Say(EchoConnection2, recipient2, string4);
			IRC_Say(EchoConnection2, recipient2, string5); }

		if(players>=100 && players<120) {
			IRC_Say(EchoConnection2, recipient2, string1);
			IRC_Say(EchoConnection2, recipient2, string2);
			IRC_Say(EchoConnection2, recipient2, string3);
			IRC_Say(EchoConnection2, recipient2, string4);
			IRC_Say(EchoConnection2, recipient2, string5);
			IRC_Say(EchoConnection2, recipient2, string6); }

		if(players>=120 && players<140) {
			IRC_Say(EchoConnection2, recipient2, string1);
			IRC_Say(EchoConnection2, recipient2, string2);
			IRC_Say(EchoConnection2, recipient2, string3);
			IRC_Say(EchoConnection2, recipient2, string4);
			IRC_Say(EchoConnection2, recipient2, string5);
			IRC_Say(EchoConnection2, recipient2, string6);
			IRC_Say(EchoConnection2, recipient2, string7); }

		if(players>=140 && players<160) {
			IRC_Say(EchoConnection2, recipient2, string1);
			IRC_Say(EchoConnection2, recipient2, string2);
			IRC_Say(EchoConnection2, recipient2, string3);
			IRC_Say(EchoConnection2, recipient2, string4);
			IRC_Say(EchoConnection2, recipient2, string5);
			IRC_Say(EchoConnection2, recipient2, string6);
			IRC_Say(EchoConnection2, recipient2, string7);
			IRC_Say(EchoConnection2, recipient2, string8); }

		if(players>=160 && players<80) {
			IRC_Say(EchoConnection2, recipient2, string1);
			IRC_Say(EchoConnection2, recipient2, string2);
			IRC_Say(EchoConnection2, recipient2, string3);
			IRC_Say(EchoConnection2, recipient2, string4);
			IRC_Say(EchoConnection2, recipient2, string5);
			IRC_Say(EchoConnection2, recipient2, string6);
			IRC_Say(EchoConnection2, recipient2, string7);
			IRC_Say(EchoConnection2, recipient2, string8);
			IRC_Say(EchoConnection2, recipient2, string9); }

		if(players>=180) {
			IRC_Say(EchoConnection2, recipient2, string1);
			IRC_Say(EchoConnection2, recipient2, string2);
			IRC_Say(EchoConnection2, recipient2, string3);
			IRC_Say(EchoConnection2, recipient2, string4);
			IRC_Say(EchoConnection2, recipient2, string5);
			IRC_Say(EchoConnection2, recipient2, string6);
			IRC_Say(EchoConnection2, recipient2, string7);
			IRC_Say(EchoConnection2, recipient2, string8);
			IRC_Say(EchoConnection2, recipient2, string9);
			IRC_Say(EchoConnection2, recipient2, string10); }


		return 1;
	}

	if(strcmp(tmp,"!pl",true)==0) {

		new players;
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) players++;
		if(players==0) {
			IRC_Say(EchoConnection2, recipient2, "14Сервер пуст.");
			return 1; }

		format(string,sizeof(string),"3LV Max: %d/%d",ReturnPlayers(),GetMaxPlayers());
		IRC_Say(EchoConnection2, recipient2, string);
		return 1;
	}


	if(strcmp(tmp,"!stats",true) == 0) {
		tmp = strtok(message2,idx);

		if (isnull(tmp)) { IRC_Say(conn, recipient2,"3Использование: !stats <id> (напр. !stats 6)"); return 1; }

		new plid=strval(tmp);

		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2, "3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2, "3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new scores = Kills[plid] - Deaths[plid];
		new Float:killz, Float:deathz, Float:ratio;
		killz = Kills[plid]; deathz = Deaths[plid];
		if(deathz!=0) ratio = killz / deathz; else ratio=0;

		new timeplh2 = 0;
		new timeplm2 = 0;

		if(Ingame[plid]>60) {
			timeplh2 = (Ingame[plid]/60);
			timeplm2 = Ingame[plid]-(timeplh2*60);
		}else{
			timeplm2 = Ingame[plid];
			timeplh2 = 0;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		new rus[1], city[256];
		CountryAndCity(plid, rus, city);
		new countytextrus[256];
		if(rus[0]==0) {
			format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[2], CountryCity[4]);
		}else{
			if(strcmp(city,"none",true)==0) {
				format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[0], CountryCity[4]);
			}else{
				format(countytextrus, sizeof(countytextrus), "%s, %s",CountryCity[0], city); }}

		if(Registered[plid]==1) format(string,sizeof(string),"3LV Maximum v%s | Cтатистика %s (%s): ",Version,ref,countytextrus);
		else format(string,sizeof(string),"3LV Maximum v%s | Cтатистика %s [не зарегистрирован] (%s): ",Version,ref,countytextrus);
		IRC_Say(EchoConnection2, recipient2, string);
		format(string,sizeof(string),"3Убийства: %d || Смерти: %d || Очки: %d || Ратио: %0.2f",Kills[plid],Deaths[plid],scores, ratio);
		IRC_Say(EchoConnection2, recipient2, string);
		format(string,sizeof(string),"3Наличка: %d || В банке: %d || Время в игре: %d часов, %d минут",CCCash[plid],Bank[plid],timeplh2,timeplm2);
		IRC_Say(EchoConnection2, recipient2, string);
		format(string,sizeof(string),"3Выиграно гонок: %d || Выиграно дефматчей: %d",RaceWIN[plid],DMWIN[plid]);
		IRC_Say(EchoConnection2, recipient2, string);
		if(Gang[plid]==1){
			if(GangTesting[plid]==1)
			format(string,sizeof(string),"3Состоит в банде %s",PLGangName[plid]);
			else format(string,sizeof(string),"3Состоит в банде (на тесте) %s",PLGangName[plid]);
			IRC_Say(EchoConnection2, recipient2, string); }
		if(Gang[plid]==2){
			format(string,sizeof(string),"3Админ банды %s",PLGangName[plid]);
			IRC_Say(EchoConnection2, recipient2, string); }
		if(Gang[plid]==3){
			format(string,sizeof(string),"3Владелец банды %s",PLGangName[plid]);
			IRC_Say(EchoConnection2, recipient2, string); }

		if(strlen(PlayerStatus[plid])!=0) {
			format(string,sizeof(string),"3%s",PlayerStatus[plid]);
			IRC_Say(EchoConnection2, recipient2, string); }

		if(Alevel[plid]==1) IRC_Say(EchoConnection2, recipient2,"3Модератор сервера");
		if(Alevel[plid]==2) IRC_Say(EchoConnection2, recipient2,"3Администратор сервера");
		if(Alevel[plid]==3) IRC_Say(EchoConnection2, recipient2,"3Супер-Администратор сервера");
		if(Alevel[plid]==4) IRC_Say(EchoConnection2, recipient2,"3Владелец сервера");
		if(Sponsor[plid]==1) IRC_Say(EchoConnection2, recipient2,"3Спонсор сервера");
		if(IRCuser[plid]==1) IRC_Say(EchoConnection2, recipient2,"3IRC пользователь");
		if(MainNoob[plid]==1) IRC_Say(EchoConnection2, recipient2,"3Главный Нуб сервера");


		return 1;
	}

	if(strcmp(tmp,"!text",true)==0) {
		if(!ircIsHop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !TEXT <ТЕКСТ> ");
			return 1; }
		format(string, sizeof(string), " *** %s",message2[6]);
		SendClientMessageToAll(COLOUR_WHITE, string);
		IRC_Say(EchoConnection1, EchoChan, string);
		return 1; }

	if(strcmp(tmp,"!weather",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !WEATHER <ID> ");
			return 1; }
		if(!IsNumeric(tmp)) return 1;
		SetWeather(strval(tmp));
		IRC_Say(EchoConnection2, recipient2,"3Погода была изменена.");
		return 1; }

	if(strcmp(tmp,"!time",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !TIME <ЧАС> ");
			return 1; }
		if(!IsNumeric(tmp)) return 1;
		if(strval(tmp)<0 || strval(tmp)>24) return 1;
		SetWorldTime(strval(tmp));
		IRC_Say(EchoConnection2, recipient2,"3Время было изменено.");
		return 1; }

	if(strcmp(tmp,"!announce",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !ANNOUNCE <ТЕКСТ>");
			return 1; }
		if ((strlen(message2[10]) >= 1) && (strlen(message2[10]) <= 50)) {
			format(string,sizeof(string),"~w~%s",message2[10]);
			GameTextForAll(string,5000,3);
		}else
		IRC_Say(EchoConnection2, recipient2,"3Сообщение должно содержать от 1 до 50 символов.");
		return 1; }

	if(strcmp(tmp,"!votekick",true)==0) {
		if(VoteKickTIMER==0) {
			tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
			if (isnull(tmp) || isnull(tmp2)) {
				IRC_Say(EchoConnection2, recipient2,"3Использование: !VOTEKICK <ID> (<ПРИЧИНА>)");
				return 1; }

			if(ReturnPlayers()<10) {
				IRC_Say(EchoConnection2, recipient2,"3Недостаточно игроков.");
				return 1; }

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
					return 1;
				}
				if(temp==-2){
					IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}

			new year, month, day;
			getdate(year, month, day);
			if(Sponsor[plid]==1 && !((month==12 && day >= 30) ||(month==1 && day <= 3))) {
				IRC_Say(EchoConnection2, recipient2,"3Вы не можете кикать спонсора.");
				return 1; }

			new namep[MAX_PLAYER_NAME];
			GetPlayerName(plid, namep, sizeof(namep));

			new lent=11;
			lent+=strlen(tmp);

			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Lang[i]==0) {
				format(string,sizeof(string)," *** %s (IRC) хочет кикнуть игрока %s (%d), причина: %s",user2, namep, plid, message2[lent]);
				SendClientMessage(i, yellow, string);
				SendClientMessage(i, yellow," Наберите '/votekick' для подтверждения.");
			}else{
				format(string,sizeof(string)," *** %s (IRC) want to kick player %s (%d), reason: %s",user2, namep, plid, message2[lent]);
				SendClientMessage(i, yellow, string);
				SendClientMessage(i, yellow," Type '/votekick' for confirmation."); }

			format(string,sizeof(string)," 13\2;%s (IRC)13 хочет кикнуть игрока\2; %s (%d)13, причина:\2; %s",user2, namep, plid, message2[lent]);
			IRC_Say(EchoConnection1, EchoChan, string);

			VoteKickID = plid;
			VoteKickNUM++;

			VoteKickT = SetTimer("VoteKick",60000,0);
			VoteKickTIMER=1;
		}
		return 1; }

	if(strcmp(tmp,"!bounties",true)==0) {
		new temp;
		new namep[MAX_PLAYER_NAME];

		format(string,sizeof(string),"3LV Maximum v%s | Вознаграждения: ",Version);
		IRC_Say(EchoConnection2, EchoChan,string);

		for(new i=0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(Hitman[i]!=0) {
			temp++;
			GetPlayerName(i, namep, sizeof(namep));
			format(string,sizeof(string),"3[%d] %s ($%d)", i, namep, Hitman[i]);
			IRC_Say(EchoConnection2, recipient2,string); }

		if(temp==0)
		IRC_Say(EchoConnection2, recipient2,"3Нет");

		return 1;
	}
	if(strcmp(tmp,"!getid",true)==0) {
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !GETID <ИМЯ>");
			return 1; }

		new plid;
		new temp;
		temp = SearchPl(tmp);
		if(temp==-1){
			IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
			return 1;
		}
		if(temp==-2){
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}
		plid=temp;

		new name1[MAX_PLAYER_NAME];
		GetPlayerName(plid, name1, MAX_PLAYER_NAME);
		format(string,sizeof(string), "3%s - id %d",name1,plid);
		IRC_Say(EchoConnection2, recipient2, string);
		return 1;
	}

	if(strcmp(tmp,"!tmoderhelp",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		IRC_Say(EchoConnection2, recipient2,"3Commands: !kick !jail !mute !unjail !unmute !getip !apm");
		return 1; }

	/*
if(strcmp(tmp, "!addrule", true) == 0){
if(ircIsUser(conn,user2)) return 1;
tmp = strtok(message2, idx);
tmp2 = strtok(message2, idx);
if (isnull(tmp) || isnull(tmp2)) {
IRC_Say(EchoConnection2, recipient2,"3Использование: !ADDRULE <RULE> <TEXT>");
return 1; }
if(strlen(tmp) > 15 || strlen(message2[strlen(tmp)+10]) > 20) return 1;

AddServerRule(tmp, message2[strlen(tmp)+10]);

IRC_Say(EchoConnection2, recipient2, "3OK");
return 1; }

if(strcmp(tmp, "!setrule", true) == 0){
if(ircIsUser(conn,user2)) return 1;
tmp = strtok(message2, idx);
tmp2 = strtok(message2, idx);
if (isnull(tmp) || isnull(tmp2)) {
IRC_Say(EchoConnection2, recipient2,"3Использование: !SETRULE <RULE> <TEXT>");
return 1; }
if(strlen(tmp) > 15 || strlen(message2[strlen(tmp)+10]) > 20) return 1;

SetServerRule(tmp, message2[strlen(tmp)+10]);

IRC_Say(EchoConnection2, recipient2, "3OK");
return 1; }
*/

	if(strcmp(tmp,"!apm",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		tmp = strtok(message2, idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !APM <ТЕКСТ>");
			return 1; }

		format(string, sizeof(string), "3(APM) %s (IRC): %s",user2,message2[5]);
		IRC_Say(EchoConnection2, recipient2, string);

		format(string, sizeof(string), " (APM) %s (IRC): %s",user2,message2[5]);
		SendMessageToAdmins(string);
		return 1; }

	if(strcmp(tmp,"!kick",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !KICK <ID> (<ПРИЧИНА>)");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}
		new lent=7;
		lent+=strlen(tmp);

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		if(isnull(tmp2)) {
			format(string,sizeof(string)," ([%d] %s) - %s",plid,ref,user2);
			SendMessageToAdmins(string);
			if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - %s",user2);
			else format(string,sizeof(string), " *** You was kicked from the server. Information - %s",user2);
			SendClientMessage(plid, COLOR_ORANGE, string);
		}else{
			format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,user2,message2[lent]);
			SendMessageToAdmins(string);
			if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - %s: %s",user2,message2[lent]);
			else format(string,sizeof(string), " *** You was kicked from the server. Information - %s: %s",user2,message2[lent]);
			SendClientMessage(plid, COLOR_ORANGE, string); }

		SetTimerEx("PKick", 50, 0, "i",plid);
		if(ircIsVoise(conn,user2)) dini_IntSet("LVM/system/stats/tmoderstat.ini",user2,dini_Int("LVM/system/stats/tmoderstat.ini",user2)+1);

		return 1;
	}

	if(strcmp(tmp,"!toback",true)==0) {
		if(!ircIsHop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !TOBACK <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Игрок %s телепортирован на back.",ref);
		IRC_Say(conn,recipient2,string);

		if(Lang[plid]==0) ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Информация","Вы были телепортированы на back Администрацией","ОК","Закрыть");
		else ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Information","You was teleported to back by Administration","ОК","Close");

		SetPlayerPos(plid,1958.3783,1343.1572,15.3746);
		SetPlayerInterior(plid, 0);
		SendClientMessage(plid, green, " Back");

		return 1;
	}


	if(strcmp(tmp,"!eject",true)==0) {
		if(!ircIsHop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !EJECT <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Игрок %s выброшен из транспорта.",ref);
		IRC_Say(conn,recipient2,string);

		if(Lang[plid]==0) ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Информация","Вы были выброшены из транспорта Администрацией","ОК","Закрыть");
		else ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Information","You was ejected from vehicle by Administration","ОК","Close");

		RemovePlayerFromVehicle(plid);

		return 1;
	}


	if(strcmp(tmp,"!slap",true)==0) {
		if(!ircIsHop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SLAP <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		if(AFK[plid]==1 || !playerSpawned[plid] || (DuelMember[0]==plid && DuelStarted>0)|| (DuelMember[1]==plid && DuelStarted==2)|| GetPlayerInterior(plid)!=0 || GetPlayerState(plid) == PLAYER_STATE_SPECTATING) {
			IRC_Say(EchoConnection2, recipient2,"3В АФК или не заспаунен или в интерьере или на дуэли.");
			return 1; }

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Тестируем %s..",ref);
		IRC_Say(conn,recipient2,string);

		if(Lang[plid]==0) ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Информация","Вы были проверены на читы Администрацией","ОК","Закрыть");
		else ShowPlayerDialog(plid,100,DIALOG_STYLE_MSGBOX,"Information","You was checked for cheats by Administration","ОК","Close");

		if(IsPlayerInAnyVehicle(plid)) {
			CheckTmp[plid][VehID] = GetPlayerVehicleID(plid);
			CheckTmp[plid][VehSeat] = GetPlayerVehicleSeat(plid);
			RemovePlayerFromVehicle(plid);
		}
		GetPlayerPos(plid,CheckTmp[plid][psX],CheckTmp[plid][psY],CheckTmp[plid][psZ]);
		GetPlayerFacingAngle(plid,CheckTmp[plid][psA]);
		SetPlayerPos(plid,1026.9153,-2179.5796,50.4760);
		SetPlayerFacingAngle(plid,91.0452);
		GetPlayerHealth(plid,CheckTmp[plid][HP]);
		SetPlayerHealth(plid,CheckTmp[plid][HP]-5);
		SetTimerEx("ChCheckResult",3000,0,"iii",-1,plid, 1);

		return 1;
	}


	if(strcmp(tmp,"!kickall",true)==0) {
		if(!ircIsSop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !KICKALL (<ПРИЧИНА>)");
			return 1; }

		new lent=9;

		format(string,sizeof(string)," (KickAll) - %s: %s",user2,message2[lent]);
		SendMessageToAdmins(string);

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) {
			if(Lang[i]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - (KickAll) %s: %s",user2,message2[lent]);
			else format(string,sizeof(string), " *** You was kicked from the server. Information - (KickAll) %s: %s",user2,message2[lent]);
			SendClientMessage(i, COLOR_ORANGE, string);
			SetTimerEx("PKick", 50, 0, "i",i); }

		return 1;
	}

	if(strcmp(tmp,"!mban",true)==0) {
		if(!ircIsHop(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if ((isnull(tmp)) || (isnull(tmp2))) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !MBAN <ID> (<ПРИЧИНА>)");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new lent=6;
		lent+=strlen(tmp);

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,user2,message2[lent]);
		SendMessageToAdmins(string);
		if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были забанены с сервера. Информация - %s: %s",user2,message2[lent]);
		else format(string,sizeof(string), " *** You was banned from the server. Information - %s: %s",user2,message2[lent]);
		SendClientMessage(plid, COLOR_ORANGE, string);

		format(string,sizeof(string), "player: %s; admin: %s; reason: %s",ref,user2,message2[lent]);
		format(BanString,sizeof(BanString), "%s",string); SetTimerEx("PBanM", 50, 0, "i",plid);

		return 1;
	}


	if(strcmp(tmp,"!ban",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if ((isnull(tmp)) || (isnull(tmp2))) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !BAN <ID> (<ПРИЧИНА>)");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new lent=6;
		lent+=strlen(tmp);

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,user2,message2[lent]);
		SendMessageToAdmins(string);
		if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были забанены с сервера. Информация - %s: %s",user2,message2[lent]);
		else format(string,sizeof(string), " *** You was banned from the server. Information - %s: %s",user2,message2[lent]);
		SendClientMessage(plid, COLOR_ORANGE, string);

		format(string,sizeof(string), "player: %s; admin: %s; reason: %s",ref,user2,message2[lent]);
		format(BanString,sizeof(BanString), "%s",string); SetTimerEx("PBan", 50, 0, "i",plid);

		return 1;
	}


	if(strcmp(tmp,"!mainnoob",true)==0) {
		if(!ircIsOwn(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if ((isnull(tmp)) || (isnull(tmp2))) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !MAINNOOB <ID> <NUM>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
		dini_IntSet(PF,"noob",strval(tmp2)); MainNoob[plid]=1;
		format(string,sizeof(string)," ([%d] %s) - %s: MainNoob",plid,ref,user2);
		SendMessageToAdmins(string);
		format(string,sizeof(string),"NOTICE +%s :4([%d] %s) - %s: MainNoob",EchoChan,plid,ref,user2);
		IRC_SendRaw(EchoConnection2, string);

		return 1;
	}


	if(strcmp(tmp,"!akick",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if ((isnull(tmp)) || (isnull(tmp2))) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !AKICK <NAME/ID> (<ПРИЧИНА>)");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
			if (!dini_Exists(PF)) {
				IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
				return 1; }

			new lent=8;
			lent+=strlen(tmp);
			format(string,sizeof(string)," ([offline] %s) - %s: %s",tmp,user2,message2[lent]);
			SendMessageToAdmins(string);
			format(string,sizeof(string), "%s: %s",user2,message2[lent]);
			dini_IntSet(PF,"akick", 1);
			dini_Set(PF,"akickreason", string);
			format(string,sizeof(string), "3Игрок заблокирован.");
			IRC_Say(EchoConnection2, recipient2, string);

			return 1; }

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new lent=8;
		lent+=strlen(tmp);

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,user2,message2[lent]);
		SendMessageToAdmins(string);
		if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были кикнуты с сервера. Информация - %s: %s",user2,message2[lent]);
		else format(string,sizeof(string), " *** You was kicked from the server. Information - %s: %s",user2,message2[lent]);
		SendClientMessage(plid, COLOR_ORANGE, string);

		format(string,sizeof(string), "%s: %s",user2,message2[lent]);

		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
		dini_IntSet(PF,"akick", 1);
		dini_Set(PF,"akickreason", string);

		SetTimerEx("PKick", 50, 0, "i",plid);

		return 1;
	}

	if(strcmp(tmp,"!unakick",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !UNAKICK <ИМЯ>");
			return 1; }

		if(IsNumeric(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !UNAKICK <ИМЯ>");
			return 1; }

		new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", tmp);
		if (!dini_Exists(PFp)) {
			IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
			return 1; }

		dini_IntSet(PFp,"akick", 0);

		format(string,sizeof(string), "3Ник %s разблокирован.",tmp);
		IRC_Say(EchoConnection2, recipient2, string);

		return 1;
	}

	if(strcmp(tmp,"!unaban",true)==0) {
		if(!ircIsSop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !UNABAN <ИМЯ>");
			return 1; }

		if(IsNumeric(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !UNABAN <ИМЯ>");
			return 1; }

		new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", tmp);
		if (!dini_Exists(PFp)) {
			IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
			return 1; }

		dini_IntSet(PFp,"aban", 0);

		format(string,sizeof(string), "3Ник %s разблокирован.",tmp);
		IRC_Say(EchoConnection2, recipient2, string);

		return 1;
	}

	if(strcmp(tmp,"!getreason",true)==0) {
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !GETREASON <IP>");
			return 1; }

		new war;
		for(new i = 0; i < strlen(tmp); i++) if(tmp[i] == 46) war++;
		if(war!=3){
			IRC_Say(EchoConnection2, recipient2,"3Неверный адрес.");
			return 1; }

		new TTTemp;
		for(new i=0; i<strlen(tmp); i++) {
			TTTemp=0;
			if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
			if (tmp[i] == 46 || tmp[i] == 42) TTTemp=1;
			if(TTTemp != 1){
				IRC_Say(EchoConnection2, recipient2,"3Неверный адрес.");
				return 1; }
		}

		new Fle[256]; format(Fle,sizeof(Fle),"LVM/bans.txt");
		if (!dini_Exists(Fle)) {
			IRC_Say(EchoConnection2, recipient2,"3Error.");
			return 1; }

		new File:fhandle;
		fhandle = fopen(Fle,io_read);

		new temp[256];
		while(fread(fhandle,temp,sizeof(temp),false)) {
			new index2;
			new temp2[256];
			temp2 = strtok(temp,index2);
			temp2 = strtok(temp,index2);
			if(strcmp(temp2,tmp,true)==0) {
				format(string,sizeof(string), "3 %s", temp[11]);
				IRC_Say(EchoConnection2, recipient2,string); return 1; } }

		IRC_Say(EchoConnection2, recipient2,"3Адрес не найден.");
		return 1; }


	if(strcmp(tmp,"!aban",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if ((isnull(tmp)) || (isnull(tmp2))) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !ABAN <NAME/ID> (<ПРИЧИНА>)");
			return 1; }


		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
			if (!dini_Exists(PF)) {
				IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
				return 1; }

			new lent=7;
			lent+=strlen(tmp);
			format(string,sizeof(string)," ([offline] %s) - %s: %s",tmp,user2,message2[lent]);
			SendMessageToAdmins(string);
			format(string,sizeof(string), "%s: %s",user2,message2[lent]);
			dini_IntSet(PF,"aban", 1);
			dini_Set(PF,"abanreason", string);
			format(string,sizeof(string), "3Игрок забанен.");
			IRC_Say(EchoConnection2, recipient2, string);

			return 1; }


		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new lent=7;
		lent+=strlen(tmp);

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		format(string,sizeof(string)," ([%d] %s) - %s: %s",plid,ref,user2,message2[lent]);
		SendMessageToAdmins(string);
		if(Lang[plid]==0) format(string,sizeof(string), " *** Вы были забанены с сервера. Информация - %s: %s",user2,message2[lent]);
		else format(string,sizeof(string), " *** You was banned from the server. Information - %s: %s",user2,message2[lent]);
		SendClientMessage(plid, COLOR_ORANGE, string);

		format(string,sizeof(string), "player: %s; admin: %s; reason: %s",ref,user2,message2[lent]);

		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
		dini_IntSet(PF,"aban", 1);
		dini_Set(PF,"abanreason", string);

		format(BanString,sizeof(BanString), "%s",string); SetTimerEx("PBan", 50, 0, "i",plid);

		return 1;
	}

	if(strcmp(tmp,"!giveplcash",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if (isnull(tmp) || isnull(tmp2)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !GIVEPLCASH <ID> <СУММА>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Игрок %s получил $%d.",ref,strval(tmp2));
		IRC_Say(EchoConnection2, recipient2, string);

		if(Lang[plid]==0) format(string,sizeof(string), " Вы получили $%d от Администрации.",strval(tmp2));
		else format(string,sizeof(string), " You received $%d from Adminstration.",strval(tmp2));
		SendClientMessage(plid, yellow, string);

		Givemoney(plid, strval(tmp2));

		return 1;
	}

	if(strcmp(tmp,"!giveallcash",true)==0) {
		if(!ircIsSop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !GIVEALLCASH <СУММА>");
			return 1; }

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) {
			if(Lang[i]==0) format(string,sizeof(string), " Все игроки получили $%d от Администрации.",strval(tmp));
			else format(string,sizeof(string), " All players received $%d from Administration.",strval(tmp));
			SendClientMessage(i, yellow, string);
			Givemoney(i, strval(tmp)); }

		format(string,sizeof(string), "3Все игроки получили $%d от Администрации.",strval(tmp));
		IRC_Say(EchoConnection2, recipient2, string);

		return 1;
	}


	if(strcmp(tmp,"!takecash",true)==0) {
		if(!ircIsHop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !TAKECASH <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3У игрока %s забрана вся наличка.",ref);
		IRC_Say(EchoConnection2, recipient2, string);

		if(Lang[plid]==0) format(string,sizeof(string), " Администрация забрала у вас всю наличку.");
		else format(string,sizeof(string), " Administration has taken away all your cash.");
		SendClientMessage(plid, yellow, string);

		CCCash[plid]=0;
		SetPlayerMoney(plid,0);

		Givemoney(plid, 2000);

		return 1;
	}

	if(strcmp(tmp,"!getlogin",true)==0) {
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !GETLOGIN  <ID> ");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3%s - %d",ref,Login[plid]);
		IRC_Say(EchoConnection2, recipient2, string);

		return 1;
	}


	if(strcmp(tmp,"!getip",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !GETIP <ID> ");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		GetPlayerIp(plid,string,sizeof(string));

		format(string,sizeof(string), "Адрес %s: %s",ref,string);
		IRC_Say(EchoConnection2, recipient2, string);

		return 1;
	}

	if(strcmp(tmp,"!banip",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if ((isnull(tmp)) || (isnull(tmp2))) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !BANIP <IP> <ПРИЧИНА> ");
			return 1; }

		if(strcmp(tmp,"*.*.*.*",true)==0) return 1;

		new war;
		for(new i = 0; i < strlen(tmp); i++) if(tmp[i] == 46) war++;
		if(war!=3){
			IRC_Say(EchoConnection2, recipient2,"3Неверный адрес.");
			return 1; }

		new TTTemp;
		for(new i=0; i<strlen(tmp); i++) {
			TTTemp=0;
			if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
			if (tmp[i] == 46 || tmp[i] == 42) TTTemp=1;
			if(TTTemp != 1){
				IRC_Say(EchoConnection2, recipient2,"3Неверный адрес.");
				return 1; }
		}

		format(string,sizeof(string), "3Адрес %s добавлен в бан лист.",tmp);
		IRC_Say(EchoConnection2, recipient2, string);

		new lent=8;
		lent+=strlen(tmp);

		format(string,sizeof(string), "player: IP; admin: %s; reason: %s",user2,message2[lent]);
		SetIpBan(tmp, 7, string);

		return 1;
	}

	if(strcmp(tmp,"!unbanip",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !UNBANIP <IP>");
			return 1; }

		new war;
		for(new i = 0; i < strlen(tmp); i++) if(tmp[i] == 46) war++;
		if(war!=3){
			IRC_Say(EchoConnection2, recipient2,"3Неверный адрес.");
			return 1; }

		new TTTemp;
		for(new i=0; i<strlen(tmp); i++) {
			TTTemp=0;
			if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
			if (tmp[i] == 46 || tmp[i] == 42) TTTemp=1;
			if(TTTemp != 1){
				IRC_Say(EchoConnection2, recipient2,"3Неверный адрес.");
				return 1; }
		}


		format(string,sizeof(string), "3Адрес %s удалён из бан листа.",tmp);
		IRC_Say(EchoConnection2, recipient2, string);

		Unban(tmp);

		return 1;
	}

	if(strcmp(tmp,"!lockserver",true)==0) {
		if(!ircIsSop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !LOCKSERVER <ПАРОЛЬ>");
			return 1; }

		format(string,sizeof(string), "3Сервер был заблокирован паролем %s.",message2[12]);
		IRC_Say(EchoConnection2, recipient2, string);

		format(string, sizeof(string), "password %s", message2[12]);
		SendRconCommand(string);

		return 1;
	}


	if(strcmp(tmp,"!fullrestart",true)==0) {
		if(!ircIsSop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !FULLRESTART <ПРИЧИНА>");
			return 1; }

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) {
			if(Lang[i]==0) format(string,sizeof(string), " Администрация отправила сервер на полный перезапуск. Причина: %s",message2[13]);
			else format(string,sizeof(string), " Administration rstarted server (full restart). Reason: %s",message2[13]);
			SendClientMessage(i, yellow, string); }

		SetTimer("GameModeExitFuncFULL", 1000, 0);

		return 1;
	}

	if(strcmp(tmp,"!restart",true)==0) {
		if(!ircIsSop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !RESTART <ПРИЧИНА>");
			return 1; }

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) {
			if(Lang[i]==0) format(string,sizeof(string), " Администрация отправила сервер на перезапуск. Причина: %s",message2[9]);
			else format(string,sizeof(string), " Administration rstarted server. Reason: %s",message2[9]);
			SendClientMessage(i, yellow, string); }

		SetTimer("GameModeExitFunc", 1000, 0);

		return 1;
	}


	if(strcmp(tmp,"!crashteston",true)==0) {
		//if(!ircIsSop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !CRASHTESTON <0 OR 1>");
			return 1; }

		CrashTestOn=strval(tmp);
		new sfile[256]; format(sfile,sizeof(sfile),"LVM/system/config.ini");
		dini_IntSet(sfile,"CrashTestOn", strval(tmp));
		IRC_Say(EchoConnection2, recipient2,"3OK");

		return 1; }



	if(strcmp(tmp,"!setalevel",true)==0) {
		if(!ircIsSop(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if ((isnull(tmp)) || (isnull(tmp2))) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SETALEVEL <NAME/ID> <0-4>");
			return 1; }

		if(strval(tmp2)<0 || strval(tmp2)>4){
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SETALEVEL <NAME/ID> <0-4>");
			return 1; }

		new plid=strval(tmp);

		if(!IsNumeric(tmp)) {
			new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", tmp);
			if (!dini_Exists(PFp)) {
				IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
				return 1;
			}

			format(string,sizeof(string), "3Админ уровень игрока %s изменён на %d.", tmp, strval(tmp2));
			IRC_Say(EchoConnection2, recipient2, string);

			dini_IntSet(PFp,"alevel",strval(tmp2));

			return 1;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Админ уровень игрока %s изменён на %d.", ref, strval(tmp2));
		IRC_Say(EchoConnection2, recipient2, string);

		new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", ref);
		if (!dini_Exists(PFp)) {
			IRC_Say(EchoConnection2, recipient2,"3Не зарегистрирован.");
			return 1;
		}
		dini_IntSet(PFp,"alevel",strval(tmp2));
		Alevel[plid]=strval(tmp2);

		if(Lang[plid]==0) format(string,sizeof(string), " Ваш Админ уровень был изменён на %d.",strval(tmp2));
		else format(string,sizeof(string), " Your Admin level was changed to %d.",strval(tmp2));
		SendClientMessage(plid, yellow, string);

		return 1;
	}


	if(strcmp(tmp,"!setstat",true)==0) {
		if(!ircIsSop(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if (isnull(tmp) || isnull(tmp2)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SETSTAT <ID> <KILLS> <DEATHS>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		Kills[plid]=strval(tmp2);

		tmp2 = strtok(message2,idx);
		if (isnull(tmp2)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SETSTAT <ID> <KILLS> <DEATHS>");
			return 1; }

		Deaths[plid]=strval(tmp2);

		IRC_Say(EchoConnection2, recipient2,"3Статистика обновлена.");

		return 1;
	}

	if(strcmp(tmp,"!getnreason",true)==0) {
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !GETNREASON <NAME>");
			return 1; }

		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
		if (!dini_Exists(PF)) {
			IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
			return 1; }

		if(dini_Int(PF,"akick")==1) {
			format(string, sizeof(string), "3AKICK: %s",dini_Get(PF,"akickreason"));
			IRC_Say(EchoConnection2, recipient2, string); return 1; }

		if(dini_Int(PF,"aban")==1) {
			format(string, sizeof(string), "3ABAN: %s",dini_Get(PF,"abanreason"));
			IRC_Say(EchoConnection2, recipient2, string); return 1; }

		IRC_Say(EchoConnection2, recipient2,"3Не забанен.");

		return 1;
	}

	if(strcmp(tmp,"!setadv",true)==0) {
		if(!ircIsOwn(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if (isnull(tmp) || isnull(tmp2) || strval(tmp)<0 || strval(tmp)>3) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SETADV <ID> <MESSAGE>");
			return 1; }

		new msg[256];
		format(string,sizeof(string),"ADV%d", strval(tmp));
		format(msg,sizeof(msg),"%s", message2[10]);
		dini_Set("LVM/system/config.ini", string, msg);

		new year,month,day;
		getdate(year,month,day);
		if(month!=2) {
			format(string,sizeof(string),"ADV%d_d", strval(tmp));
			dini_IntSet("LVM/system/config.ini",string, day);
			format(string,sizeof(string),"ADV%d_m", strval(tmp));
			dini_IntSet("LVM/system/config.ini",string, month+1);
		}else{
			format(string,sizeof(string),"ADV%d_d", strval(tmp));
			dini_IntSet("LVM/system/config.ini",string, day+2);
			format(string,sizeof(string),"ADV%d_m", strval(tmp));
			dini_IntSet("LVM/system/config.ini",string, month+1); }

		ADV[strval(tmp)]=msg;

		format(msg,sizeof(msg)," ***A*** %s", msg);
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		SendClientMessage(i, yellow, msg);

		format(string, sizeof(string), "14%s",msg);
		IRC_Say(EchoConnection2, EchoChan, string);

		return 1;
	}

	if(strcmp(tmp,"!setstatus",true)==0) {
		if(!ircIsOwn(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if (isnull(tmp) || isnull(tmp2)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SETSTATUS <NAME/ID> <TEXT>");
			return 1; }

		new lent=12;
		lent+=strlen(tmp);

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
				if (!dini_Exists(PF)) {
					IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
					return 1; }

				format(string,sizeof(string)," ([offline] %s) - %s - setstatus",tmp,user2);
				SendMessageToAdmins(string);
				format(string,sizeof(string), "3Статус назначен: %s",message2[lent]);
				IRC_Say(EchoConnection2, recipient2, string);

				dini_Set(PF,"playerstatus", message2[lent]);
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1; }

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		format(string,sizeof(string)," ([%d] %s) - %s - setstatus",plid,ref,user2);
		SendMessageToAdmins(string);
		if(Lang[plid]==0) format(string, sizeof(string), " Статус назначен: %s",message2[lent]);
		else format(string, sizeof(string), " Status set to: %s",message2[lent]);
		SendClientMessage(plid, cyan, string);
		Givemoney(plid, 1000000);
		format(string,sizeof(string), "3Статус назначен: %s",message2[lent]);
		IRC_Say(EchoConnection2, recipient2, string);
		format(string,sizeof(string), "%s",message2[lent]); PlayerStatus[plid]=string;
		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
		dini_Set(PF,"playerstatus", message2[lent]);

		return 1;
	}


	if(strcmp(tmp,"!setsponsor",true)==0) {
		if(!ircIsOwn(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SETSPONSOR <NAME/ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", tmp);
				if (!dini_Exists(PF)) {
					IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
					return 1; }

				format(string,sizeof(string)," ([offline] %s) - %s - sponsor",tmp,user2);
				SendMessageToAdmins(string);
				format(string,sizeof(string), "3Спонсор назначен.");
				IRC_Say(EchoConnection2, recipient2, string);

				dini_IntSet(PF,"sponsor", 1);
				dini_IntSet(PF,"cash", dini_Int(PF,"cash")+1000000);

				new year,month,day;
				getdate(year,month,day);
				if(month!=2) {
					dini_IntSet(PF,"sponsortimed", day);
					dini_IntSet(PF,"sponsortimem", month+1);
				}else{
					if(month!=12)
					{
						dini_IntSet(PF,"sponsortimed", day+2);
						dini_IntSet(PF,"sponsortimem", month+1);
					}
					else
					{
						dini_IntSet(PF,"sponsortimed", day+2);
						dini_IntSet(PF,"sponsortimem", 1); } }
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1; }

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));
		format(string,sizeof(string)," ([%d] %s) - %s - sponsor",plid,ref,user2);
		SendMessageToAdmins(string);
		if(Lang[plid]==0) format(string, sizeof(string), " Ваш аккаунт теперь имеет статус 'спонсор' в течении 30 дней.");
		else format(string, sizeof(string), " Your account now has the 'sponsor' status during next 30 days.");
		SendClientMessage(plid, cyan, string);
		Givemoney(plid, 1000000);
		format(string,sizeof(string), "3Спонсор назначен.");
		IRC_Say(EchoConnection2, recipient2, string);
		Sponsor[plid]=1;
		new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", ref);
		dini_IntSet(PF,"sponsor", 1);
		new year,month,day;
		getdate(year,month,day);
		if(month!=2) {
			dini_IntSet(PF,"sponsortimed", day);
			dini_IntSet(PF,"sponsortimem", month+1);
		}else{
			dini_IntSet(PF,"sponsortimed", day+2);
			dini_IntSet(PF,"sponsortimem", month+1); }

		return 1;
	}


	if(strcmp(tmp,"!sellunban",true)==0) {
		if(!ircIsOwn(conn,user2)) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SULLUNBAN <ИМЯ> <Yes>");
			return 1; }

		if(IsNumeric(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !SULLUNBAN <ИМЯ> <Yes>");
			return 1; }

		new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", tmp);
		if (!dini_Exists(PFp)) {
			IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
			return 1; }

		if (isnull(tmp2)) {
			if(dini_Int(PFp,"unbanned")==0)
			format(string,sizeof(string), "3Игрок не был разбанен (платно).", tmp);
			else format(string,sizeof(string), "3Игрок уже был разбанен (платно).", tmp);
			IRC_Say(EchoConnection2, recipient2, string);
		}else{
			dini_IntSet(PFp,"unbanned",1);
			format(string,sizeof(string), "3Отметка установлена.", tmp);
			IRC_Say(EchoConnection2, recipient2, string); }

		return 1;
	}



	if(strcmp(tmp,"!apassremove",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !APASSREMOVE <ИМЯ>");
			return 1; }

		if(IsNumeric(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !APASSREMOVE <ИМЯ>");
			return 1; }

		new PFp[256]; format(PFp,sizeof(PFp),"LVM/players/%s.ini", tmp);
		if (!dini_Exists(PFp)) {
			IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
			return 1;
		}

		format(string,sizeof(string), "3Пароль игрока %s изменён на 1234.", tmp);
		IRC_Say(EchoConnection2, recipient2, string);

		dini_IntSet(PFp,"password",udb_hash("1234"));

		return 1;
	}


	if(strcmp(tmp,"!unlockveh",true)==0) {
		if(!ircIsOp(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !UNLOCKVEH <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Транспорт разблокирован для игрока %s.",ref);
		IRC_Say(EchoConnection2, recipient2, string);


		if(Lang[plid]==0) format(string,sizeof(string), " Администрация разблокировала для вас весь транспорт.");
		else format(string,sizeof(string), " Administration unlocked all vehicles for you.");
		SendClientMessage(plid, yellow, string);

		LKills[plid]=100;
		SetVehicleParamsForPlayer(vehvorob,plid, 0, 0);
		SetVehicleParamsForPlayer(vehtank,plid, 0, 0);
		SetVehicleParamsForPlayer(vehhydra,plid, 0, 0);
		SetVehicleParamsForPlayer(vehhanter,plid, 0, 0);

		return 1;
	}


	if(strcmp(tmp,"!mute",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !MUTE <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Игрок %s умолчен на 7 минут.",ref);
		IRC_Say(EchoConnection2, recipient2, string);

		if(Lang[plid]==0) ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Информация", " Вы были умолчаны Администрацией", "OK", "Закрыть");
		else ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Information", " You was muted by Administration", "OK", "Close");

		Mute[plid]=1;
		SetTimerEx("DestroyFloodEx", 420000, 0, "i", plid);
		if(ircIsVoise(conn,user2)) dini_IntSet("LVM/system/stats/tmoderstat.ini",user2,dini_Int("LVM/system/stats/tmoderstat.ini",user2)+1);

		return 1;
	}

	if(strcmp(tmp,"!heal",true)==0) {
		if (!ircIsHop(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !HEAL <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Здоровье игрока %s восстановлено.",ref);
		IRC_Say(EchoConnection2, recipient2, string);

		if(Lang[plid]==0) format(string,sizeof(string), " Администрация восстановила ваше здоровье.");
		else format(string,sizeof(string), " You was healed by Administration.");
		SendClientMessage(plid, yellow, string);

		SetPlayerHealth(plid,100.0);

		return 1;
	}

	if(strcmp(tmp,"!unmute",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !UNMUTE <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Игрок %s может писать сообщения.",ref);
		IRC_Say(EchoConnection2, recipient2, string);

		if(Lang[plid]==0) ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Информация", "Администрация разрешила вам писать сообщения", "OK", "Закрыть");
		else ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Information", "You was unmuted by Administration", "OK", "Close");

		Mute[plid]=0;

		return 1;
	}

	if(strcmp(tmp,"!jail",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !JAIL <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Игрок %s отправлен в тюрьму на 7 минут.",ref);
		IRC_Say(EchoConnection2, recipient2, string);

		if(Lang[plid]==0) ShowPlayerDialog(plid, 100,DIALOG_STYLE_MSGBOX, "Информация", " Вы были отправлены в тюрьму Администрацией", "OK", "Закрыть");
		else ShowPlayerDialog(plid, 100,DIALOG_STYLE_MSGBOX, "Information", " You was jailed by Administration", "OK", "Close");

		Jail[plid]=1;
		SetPlayerInterior(strval(tmp),6);
		SetPlayerPos(strval(tmp),265.1273,77.6823,1001.0391);
		JailTimer[plid]=SetTimerEx("DestroyJailEx", 420000, 0, "i", plid);

		if(ircIsVoise(conn,user2)) dini_IntSet("LVM/system/stats/tmoderstat.ini",user2,dini_Int("LVM/system/stats/tmoderstat.ini",user2)+1);
		return 1;
	}

	if(strcmp(tmp,"!unjail",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !UNJAIL <ID>");
			return 1; }

		new plid=strval(tmp);
		if(!IsNumeric(tmp)) {
			new temp;
			temp = SearchPl(tmp);
			if(temp==-1){
				IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
				return 1;
			}
			if(temp==-2){
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}
			plid=temp;
		}

		if(!IsPlayerConnected(plid) || plid>=500) {
			IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
			return 1;
		}

		new ref[MAX_PLAYER_NAME]; GetPlayerName(plid,ref,sizeof(ref));

		format(string,sizeof(string), "3Игрок %s освобождён из тюрьмы.",ref);
		IRC_Say(EchoConnection2, recipient2, string);

		if(Lang[plid]==0) ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Информация", "Вы были освобождены из тюрьмы Администрацией", "OK", "Закрыть");
		else ShowPlayerDialog(plid, 100, DIALOG_STYLE_MSGBOX, "Information", "You was unjailed by Administration", "OK", "Close");

		Jail[plid]=0;
		SpawnPlayer(plid);
		KillTimer(JailTimer[plid]);

		return 1;
	}


	if(strcmp(tmp,"!rules",true)==0) {
		format(string,sizeof(string),"3LV Maximum v%s | Правила сервера: ",Version);
		IRC_Say(EchoConnection2, recipient2, string);
		IRC_Say(EchoConnection2, recipient2, "3Не флудить/спамить | Не использовать читы | Не рекламировать | Не использовать caps lock в чате | Не пытаться взломать сервер");
		IRC_Say(EchoConnection2, recipient2, "3Полный список правил на gta.bews.tk");
		return 1; }

	if(strcmp(tmp,"!adminhelp",true)==0) {
		if(ircIsUser(conn,user2)) return 1;
		format(string,sizeof(string),"3LV Maximum v%s | Admin commands: ",Version);
		IRC_Say(EchoConnection2, recipient2, string);
		IRC_Say(EchoConnection2, recipient2, "3/gang admcolor, admdel; /text; /rsay; /weather; /time; /announce; /kick; /kickall");
		IRC_Say(EchoConnection2, recipient2, "3/ban; /akick; /unakick; /unaban; /aban; /giveplcash; /giveallcash; /takecash; /getip");
		IRC_Say(EchoConnection2, recipient2, "3/banip; /unbanip; /lockserver; /fullrestart; /restart; /goto; /gethere; /setalevel; /apassremove");
		IRC_Say(EchoConnection2, recipient2, "3/mute; /heal; /unmute; /jail; /unjail; /reconnect; /unlockveh; /eject; /mban; /apm");
		return 1; }


	if(strcmp(tmp,"!reconnect",true)==0) {
		if(!ircIsSop(conn,user2)) return 1;
		IRC_Quit(EchoConnection1, "Reconnect");
		IRC_Quit(EchoConnection2, "Reconnect");
		return 1;
	}


	if(strcmp(tmp,"!top",true)==0) {
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2, "3Топ-статистика. Использование: !TOP CASH, KILLS, DEATHS, SCORE, DM, RACE");
			return 1; }

		if(strcmp(tmp, "cash", true) == 0){

			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(CCCash[i]>temp)
			temp=CCCash[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(CCCash[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string),"3%s ($%d)",name1,temp); }

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(CCCash[i]>temp2 && CCCash[i]!=temp)
				temp2=CCCash[i];

				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(CCCash[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s ($%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(CCCash[i]>temp3 && CCCash[i]!=temp && CCCash[i]!=temp2)
				temp3=CCCash[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(CCCash[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s ($%d)",string,name3,temp3);
				} }

			IRC_Say(EchoConnection2, recipient2,string); }

		if(strcmp(tmp, "kills", true) == 0){

			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Kills[i]>temp)
			temp=Kills[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Kills[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string),"3%s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Kills[i]>temp2 && Kills[i]!=temp)
				temp2=Kills[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Kills[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Kills[i]>temp3 && Kills[i]!=temp && Kills[i]!=temp2)
				temp3=Kills[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Kills[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }

			IRC_Say(EchoConnection2, recipient2,string); }


		if(strcmp(tmp, "deaths", true) == 0){

			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Deaths[i]>temp)
			temp=Deaths[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Deaths[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string),"3%s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Deaths[i]>temp2 && Deaths[i]!=temp)
				temp2=Deaths[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Deaths[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Deaths[i]>temp3 && Deaths[i]!=temp && Deaths[i]!=temp2)
				temp3=Deaths[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Deaths[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }

			IRC_Say(EchoConnection2, recipient2,string); }


		if(strcmp(tmp, "score", true) == 0){

			new Score[MAX_PLAYERS];
			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i)) {
				Score[i] = Kills[i] - Deaths[i];
				if(Score[i]>temp)
				temp=Score[i]; }
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(Score[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string),"3%s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)){
					Score[i] = Kills[i] - Deaths[i];
					if(Score[i]>temp2 && Score[i]!=temp)
					temp2=Score[i]; }
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Score[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i)){
					Score[i] = Kills[i] - Deaths[i];
					if(Score[i]>temp3 && Score[i]!=temp && Score[i]!=temp2)
					temp3=Score[i]; }
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(Score[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }

			IRC_Say(EchoConnection2, recipient2,string); }



		if(strcmp(tmp, "dm", true) == 0){
			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(DMWIN[i]>temp)
			temp=DMWIN[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(DMWIN[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string),"3%s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(DMWIN[i]>temp2 && DMWIN[i]!=temp)
				temp2=DMWIN[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(DMWIN[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(DMWIN[i]>temp3 && DMWIN[i]!=temp && DMWIN[i]!=temp2)
				temp3=DMWIN[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(DMWIN[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }
			IRC_Say(EchoConnection2, recipient2,string); }


		if(strcmp(tmp, "race", true) == 0){
			new temp=-500;
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(RaceWIN[i]>temp)
			temp=RaceWIN[i];
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			if(RaceWIN[i]==temp) {
				new name1[MAX_PLAYER_NAME]; GetPlayerName(i,name1,sizeof(name1));
				format(string,sizeof(string),"3%s (%d)",name1,temp);
			}

			new temp2=-500;
			if(ReturnPlayers()>=2) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(RaceWIN[i]>temp2 && RaceWIN[i]!=temp)
				temp2=RaceWIN[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(RaceWIN[i]==temp2) {
					new name2[MAX_PLAYER_NAME]; GetPlayerName(i,name2,sizeof(name2));
					format(string,sizeof(string),"%s, %s (%d)",string,name2,temp2);
				} }

			new temp3=-500;
			if(ReturnPlayers()>=3) {
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(RaceWIN[i]>temp3 && RaceWIN[i]!=temp && RaceWIN[i]!=temp2)
				temp3=RaceWIN[i];
				for(new i = 0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				if(RaceWIN[i]==temp3) {
					new name3[MAX_PLAYER_NAME]; GetPlayerName(i,name3,sizeof(name3));
					format(string,sizeof(string),"%s, %s (%d)",string,name3,temp3);
				} }
			IRC_Say(EchoConnection2, recipient2,string); }


		return 1;
	}

	if(strcmp(tmp,"!me",true)==0) {
		tmp = strtok(message2,idx);
		if(strlen(tmp) >= 110) return 0;

		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование: !ME <ТЕКСТ> ");
			return 1; }

		format(string, sizeof(string), " *** %s %s",user2, message2[4]);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) if(MTsys[i] == 0)
		SendClientMessage(i, COLOUR_LIGHTBLUE, string);
		format(string, sizeof(string), "11*** %s %s",user2, message2[4]);
		IRC_Say(EchoConnection1, EchoChan, string);

		return 1;
	}

	if(strcmp(tmp,"!admins",true)==0) {

		new AdminNum;
		new aname[MAX_PLAYER_NAME];

		format(string,sizeof(string),"3Администация (Онлайн): ",Version);
		IRC_Say(EchoConnection2, EchoChan, string);

		format(string1,sizeof(string1),"3Админы:");
		format(string2,sizeof(string2),"3Модеры:");
		format(string3,sizeof(string3),"3В IRC:");

		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] > 1) AdminNum++;
		if(AdminNum>0){
			AdminNum=0;
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] > 1){
				AdminNum++;
				GetPlayerName(i,aname,sizeof(aname));
				if(AdminNum==1) format(string1,sizeof(string1),"%s %s (%d)",string1,aname,i);
				else format(string1,sizeof(string1),"%s, %s (%d)",string1,aname,i); }
		}else{
			format(string1,sizeof(string1),"%s нет",string1); }

		AdminNum=0;

		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] == 1) AdminNum++;
		if(AdminNum>0){
			AdminNum=0;
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && Login[i] == 1 && Alevel[i] == 1){
				AdminNum++;
				GetPlayerName(i,aname,sizeof(aname));
				if(AdminNum==1) format(string2,sizeof(string2),"%s %s (%d)",string2,aname,i);
				else format(string2,sizeof(string2),"%s, %s (%d)",string2,aname,i); }
		}else{
			format(string2,sizeof(string2),"%s нет",string2); }

		AdminNum=0;

		idx=0;
		if(EchoConnection1) IRC_GetChannelUserList(EchoConnection1, EchoChan, string,sizeof(string));
		printf(" %s",string);
		//new tempt[10][256];
		for(new i=0; i < 30; i++) tempt[i] = strtok(string,idx);
		if(isnull(tempt[0])) format(string3,sizeof(string3),"%s нет",string3);
		else{
			new tempr=30;
			for(new i=1; i < 30; i++) if(tempr==30 && strcmp(tempt[0],tempt[i],true)==0) tempr=i;
			for(new i=0; i < tempr; i++)
			if(strfind(tempt[i], "Angel", true) == -1)
			if(strfind(tempt[i], "Echo", true) == -1)
			if(strfind(tempt[i], "Camel", true) == -1)
			if(strfind(tempt[i], "IRC[RUS]", true) == -1)
			if(tempt[i][0]==126 || tempt[i][0]==38 || tempt[i][0]==64 || tempt[i][0]==37 || tempt[i][0]==43) {
				//printf("%d",tempt[i][0]);
				AdminNum++;
				if(AdminNum==1) format(string3,sizeof(string3),"%s %s",string3,tempt[i][1]);
				else format(string3,sizeof(string3),"%s, %s",string3,tempt[i][1]); }
		}

		IRC_Say(EchoConnection2, recipient2,string1);
		IRC_Say(EchoConnection2, recipient2,string2);
		IRC_Say(EchoConnection2, recipient2,string3);

		return 1;
	}

	if(strcmp(tmp,"!global",true)==0) {
		format(string,sizeof(string),"3LV Maximum v%s | Глобальная статистика:", Version);
		IRC_Say(EchoConnection2, recipient2, string);

		format(string,sizeof(string),"3Сервер выдал денег: %d миллионов || Совершено убийств: %d",GlobalCash1,GlobalKills);
		IRC_Say(EchoConnection2, recipient2, string);

		format(string,sizeof(string),"3Сыграно гонок: %d || Сыграно дефматчей: %d",GlobalRace,GlobalDM);
		IRC_Say(EchoConnection2, recipient2, string);

		format(string,sizeof(string),"3На сервере зарегистрировано %d игроков.",GlobalPlayers);
		IRC_Say(EchoConnection2, recipient2, string);

		new stringt[256];
		new days,hours,minutes;
		if(mins>60) {
			hours = (mins/60);
			minutes = mins-(hours*60);
			if(hours>23) {
				days = (hours/24);
				hours = hours-(days*24);
			}else { days = 0; }
		}else{
			minutes = mins;
			hours = 0;
			days = 0; }
		format(stringt, sizeof(stringt), "%d дней, %d часов, %d минут", days, hours, minutes);

		format(string,sizeof(string),"3С момента последнего перезапуска прошло %s.",stringt);
		IRC_Say(EchoConnection2, recipient2, string);
		return 1;
	}

	if(strcmp(tmp,"!gangs",true)==0) {
		format(string,sizeof(string),"3LV Maximum v%s | На сервере находятся представители банд:", Version);
		IRC_Say(EchoConnection2, recipient2, string);

		new ttem=0;
		new Temp3;

		format(string,sizeof(string)," -");
		for(new j = 0; j< 10; j++) tempt[j]="-";

		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		if(Gang[i]!=0) {
			new Temp2;
			if(Temp3<10) {
				for(new j = 0; j< 10; j++)
				if(strcmp(PLGangName[i], tempt[j], true) == 0) Temp2++;
				if(Temp2==0) {
					if(ttem==0) format(string,sizeof(string),"3%s",PLGangName[i]);
					else format(string,sizeof(string),"%s, %s",string,PLGangName[i]);
					ttem=1;
					tempt[Temp3]=PLGangName[i];
					Temp3++;
				}}}

		IRC_Say(EchoConnection2, recipient2,string);
		return 1;
	}

	if(strcmp(tmp,"!scriptinfo",true)==0) {
		IRC_Say(EchoConnection2, recipient2, "3Gamemode script:");
		format(string,256,"3Las Venturas Maximum by Bews: version %s (fixed), revision %s, date %s", Version, Revision, Date);
		IRC_Say(EchoConnection2, recipient2,string);
		IRC_Say(EchoConnection2, recipient2, "3  Inclusions:");
		IRC_Say(EchoConnection2, recipient2, "3xAntiSwear by Boylett");
		IRC_Say(EchoConnection2, recipient2, "3Vehicle Names Display by Seif[CC]");
		IRC_Say(EchoConnection2, recipient2, "3Weapon Drop and Zones by mabako");
		IRC_Say(EchoConnection2, recipient2, "3Temporary ban system v1.1 by d.wine");
		IRC_Say(EchoConnection2, recipient2, "3Animation by Wooz1e");
		IRC_Say(EchoConnection2, recipient2, "3Vehicle Mod Anti-Crash by Crack, Davee and 0xF29323");
		IRC_Say(EchoConnection2, recipient2, "3Speedometer design by RyDeR");
		return 1; }


	if(strcmp(tmp,"!uptime",true)==0) {
		new stringo[256];
		new stringt[256];
		new year,month,day;
		getdate(year,month,day);
		new y, m;
		if(day<20) { day=day+30; day=day-20; m=1; } else day=day-20;
		month=month-m;
		if(month<7) { month=month+12; month=month-7; y=1; } else month=month-7;
		year=year-y;
		year=year-2007;
		if(year==1) format(stringo, sizeof(stringo), "%d год, %d месяцев, %d дней", year, month, day);
		else format(stringo, sizeof(stringo), "%d года, %d месяцев, %d дней", year, month, day);

		new days,hours,minutes;
		if(mins>60) {
			hours = (mins/60);
			minutes = mins-(hours*60);
			if(hours>23) {
				days = (hours/24);
				hours = hours-(days*24);
			}else { days = 0; }
		}else{
			minutes = mins;
			hours = 0;
			days = 0; }
		format(stringt, sizeof(stringt), "%d дней, %d часов, %d минут", days, hours, minutes);

		format(string, sizeof(string), "3Данный сервер существует уже %s. С момента последнего перезапуска прошло %s.", stringo, stringt);
		IRC_Say(EchoConnection2, recipient2, string);

		return 1; }




	if(strcmp(tmp,"!help",true)==0 || strcmp(tmp,"!info",true)==0) {
		format(string,sizeof(string),"3LV Maximum v%s | Краткая справка: ",Version);
		IRC_Say(EchoConnection2, recipient2, string);
		IRC_Say(EchoConnection2, recipient2, "3На данном сервере установлен свободный режим, целью которого является обогащение");
		IRC_Say(EchoConnection2, recipient2, "3Дополнительную информацию можно найти на форуме. Ресурсы проекта:");
		IRC_Say(EchoConnection2, recipient2, "3Форум сервера (предложения по скрипту, заявки на модеров, заявки на разбан и др.) - gta.bews.tk");
		IRC_Say(EchoConnection2, recipient2, "3IRC канал (игровой чат, прямая связь с администрацией, доп. возможности) - irc.bews.tk/rus");
		IRC_Say(EchoConnection2, recipient2, "3Информация о скрипте - !scriptinfo");
		return 1; }


	if(strcmp(tmp,"!gang",true)==0) {
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Банды. Использование: !GANG CREATE, DELETE, INVITE, COLOR, KICK, ADMIN, UNTEST, JOIN, QUIT, INFO");
			return 1; }

		if(strcmp(tmp, "info", true) == 0){
			tmp = strtok(message2, idx);
			if (isnull(tmp)) {
				IRC_Say(EchoConnection2, recipient2,"3Использование: !GANG INFO <ИМЯ>");
				return 1; }

			if(strlen(tmp) >= 5) return 1;
			if(strlen(tmp) <= 1) return 1;

			new TTTemp;
			for(new i=0; i<strlen(tmp); i++) {
				TTTemp=0;
				if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
				if (tmp[i] > 96 && tmp[i] < 123) TTTemp=1;
				if (tmp[i] > 64 && tmp[i] < 91) TTTemp=1;
				if (tmp[i] == 95) TTTemp=1;
				if (tmp[i] == 36) TTTemp=1;
				if (tmp[i] == 91) TTTemp=1;
				if (tmp[i] == 93) TTTemp=1;
				if(TTTemp != 1){
					IRC_Say(EchoConnection2, recipient2,"3Запрещённые символы в названии!");
					return 1; }
			}

			new file[256]; format(file,sizeof(file),"LVM/gangs/%s.ini",tmp);
			if(!dini_Exists(file)) {
				IRC_Say(EchoConnection2, recipient2,"3Такая банда не существует.");
				return 1; }

			format(string,sizeof(string),"3LV Maximum v%s | Банда '%s':", Version, tmp);
			IRC_Say(EchoConnection2, recipient2, string);

			format(string,sizeof(string),"3Владелец: %s || Админ: %s",dini_Get(file,"leader"),dini_Get(file,"admin"));
			IRC_Say(EchoConnection2, recipient2, string);

			format(string,sizeof(string),"3Игроков: %d || Денег в банке: $%d",dini_Int(file,"members"),dini_Int(file,"bank"));
			IRC_Say(EchoConnection2, recipient2, string);

			new scoresp = dini_Int(file,"kills") - dini_Int(file,"deaths");
			new Float:killzp, Float:deathzp, Float:ratiop;
			killzp = dini_Int(file,"kills"); deathzp = dini_Int(file,"deaths");
			if(deathzp!=0) ratiop = killzp / deathzp; else ratiop=0;

			format(string,sizeof(string),"3Убийства: %d || Смерти: %d || Очки: %d || Ратио: %0.2f",dini_Int(file,"kills"),dini_Int(file,"deaths"),scoresp,ratiop);
			IRC_Say(EchoConnection2, recipient2, string);
			return 1; }

		if(strcmp(tmp, "members", true) == 0){
			tmp = strtok(message2, idx);
			if (isnull(tmp)) {
				IRC_Say(EchoConnection2, recipient2,"3Использование: !GANG MEMBERS <ИМЯ>");
				return 1; }

			if(strlen(tmp) >= 5) return 1;
			if(strlen(tmp) <= 1) return 1;

			new TTTemp;
			for(new i=0; i<strlen(tmp); i++) {
				TTTemp=0;
				if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
				if (tmp[i] > 96 && tmp[i] < 123) TTTemp=1;
				if (tmp[i] > 64 && tmp[i] < 91) TTTemp=1;
				if (tmp[i] == 95) TTTemp=1;
				if (tmp[i] == 36) TTTemp=1;
				if (tmp[i] == 91) TTTemp=1;
				if (tmp[i] == 93) TTTemp=1;
				if(TTTemp != 1){
					IRC_Say(EchoConnection2, recipient2,"3Запрещённые символы в названии!");
					return 1; }
			}

			new file[256]; format(file,sizeof(file),"LVM/gangs/%s.ini",tmp);
			if(!dini_Exists(file)) {
				IRC_Say(EchoConnection2, recipient2,"3Такая банда не существует.");
				return 1; }

			format(string,sizeof(string),"3LV Maximum v%s | Игроки в банде '%s':", Version, tmp);
			IRC_Say(EchoConnection2, recipient2, string);

			new t;
			for(new i = 0; i < MAX_GANG_MEMBERS; i++) {
				format(string2, sizeof(string2),"player_%d",i);
				if(strlen(dini_Get(file,string2))!=1 && strlen(dini_Get(file,string2))!=0) { t++;
					if(t==1) format(string,sizeof(string),"3%s",dini_Get(file,string2));
					else format(string,sizeof(string),"%s, %s",string,dini_Get(file,string2)); }
				if(t==10) { IRC_Say(EchoConnection2, recipient2, string); format(string,sizeof(string)," "); t=0; } }
			if(strlen(string)!=0) IRC_Say(EchoConnection2, recipient2, string);
			return 1; }


		if(strcmp(tmp, "invite", true) == 0){
			if(ircIsUser(conn,user2)) return 1;
			tmp = strtok(message2, idx);
			if (isnull(tmp)) {
				IRC_Say(EchoConnection2, recipient2,"3Использование: !GANG INVITE <ID>");
				return 1; }

			if(strlen(tmp) > 9) return 1;

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
					return 1;
				}
				if(temp==-2){
					IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}

			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", user2);

			if(dini_Int(PF,"gang")<2) {
				IRC_Say(EchoConnection2, recipient2,"3Вы должны быть Админом банды, чтобы посылать приглашения.");
				return 1; }

			new namew[256]; GetPlayerName(plid,namew,sizeof(namew));

			format(string, sizeof(string),"3Вы послали приглашение к %s.", namew);
			IRC_Say(EchoConnection2, recipient2, string);


			if(Lang[plid]==0) format(string, sizeof(string)," Вы получили приглашение для вступления в банду '%s'.",dini_Get(PF,"gangname"));
			else format(string, sizeof(string)," You have received the invitation for joining gang '%s'.",dini_Get(PF,"gangname"));
			SendClientMessage(plid, yellow, string);

			Ganginv[plid]=dini_Get(PF,"gangname");
			return 1; }


		
		if(strcmp(tmp, "kick", true) == 0){
			if(ircIsUser(conn,user2)) return 1;
			tmp = strtok(message2, idx);
			if (isnull(tmp)) {
				IRC_Say(EchoConnection2, recipient2,"3Использование: !GANG KICK <NAME/ID>");
				return 1; }
			if(strlen(tmp) > 20) return 1;

			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", user2);

			if(dini_Int(PF,"gang")<2) {
				IRC_Say(EchoConnection2, recipient2,"3Вы должны быть Админом банды, чтобы отчислять игроков.");
				return 1; }


			if(!IsNumeric(tmp)) {
				new PF2[256]; format(PF2,sizeof(PF2),"LVM/players/%s.ini", tmp);
				if (!dini_Exists(PF2)) {
					IRC_Say(EchoConnection2, recipient2,"3Неверное имя.");
					return 1; }

				if(dini_Int(PF2,"gang")==0 || strcmp(dini_Get(PF,"gangname"), dini_Get(PF2,"gangname"), true) != 0) {
					IRC_Say(EchoConnection2, recipient2,"3Игрок не в вашей банде.");
					return 1; }

				if(dini_Int(PF2,"gang")==3) {
					IRC_Say(EchoConnection2, recipient2,"3Вы не можете выгнать владельца банды.");
					return 1; }

				new SplayerGang[256]; format(SplayerGang,sizeof(SplayerGang),"LVM/gangs/%s.ini",dini_Get(PF2,"gangname"));
				if(dini_Int(PF2,"gang")==2) dini_Set(SplayerGang,"admin","-");
				dini_IntSet(PF2,"gang",0);
				dini_Set(PF2,"gangname","None");
				dini_IntSet(PF2,"gangtesting",0);
				dini_IntSet(SplayerGang,"members",(dini_Int(SplayerGang,"members")-1));
				for(new i = 0; i < MAX_GANG_MEMBERS; i++) {
					format(string, sizeof(string),"player_%d",i);
					if(strlen(dini_Get(SplayerGang,string))!=0) if(strcmp(dini_Get(SplayerGang,string),tmp,true)==0) dini_IntSet(SplayerGang,string,0); }

				format(string, sizeof(string),"3Вы отчислили игрока %s.", tmp);
				IRC_Say(EchoConnection2, recipient2, string);

				return 1; }


			new plid=strval(tmp);

			if(!IsPlayerConnected(plid) || plid>=500) {
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}

			if(Gang[plid]==0 || strcmp(dini_Get(PF,"gangname"), PLGangName[plid], true) != 0) {
				IRC_Say(EchoConnection2, recipient2,"3Игрок не в вашей банде.");
				return 1; }

			if(Gang[plid]==3) {
				IRC_Say(EchoConnection2, recipient2,"3Вы не можете выгнать владельца банды.");
				return 1; }

			new namew[256]; GetPlayerName(plid,namew,sizeof(namew));

			format(string, sizeof(string),"3Вы отчислили игрока %s.", namew);
			IRC_Say(EchoConnection2, recipient2, string);

			if(Lang[plid]==0) format(string, sizeof(string)," Вы были отчислены из банды '%s'.",dini_Get(PF,"gangname"));
			else format(string, sizeof(string)," You have been deducted from gang '%s'.",dini_Get(PF,"gangname"));
			SendClientMessage(plid, yellow, string);

			SetTimerEx("SomeTemL", 50, 0, "i", plid);
			return 1; }

		if(strcmp(tmp, "admin", true) == 0){
			if(ircIsUser(conn,user2)) return 1;
			tmp = strtok(message2, idx);
			if (isnull(tmp)) {
				IRC_Say(EchoConnection2, recipient2,"3Использование: !GANG ADMIN <ID>");
				return 1; }
			if(strlen(tmp) > 9) return 1;

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
					return 1;
				}
				if(temp==-2){
					IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}

			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", user2);

			if(dini_Int(PF,"gang")<2) {
				IRC_Say(EchoConnection2, recipient2,"3Вы должны быть Владельцем банды, чтобы назначить Админа.");
				return 1; }

			if(Gang[plid]==0 || strcmp(dini_Get(PF,"gangname"), PLGangName[plid], true) != 0) {
				IRC_Say(EchoConnection2, recipient2,"3Игрок не в вашей банде.");
				return 1; }

			new namew[256]; GetPlayerName(plid,namew,sizeof(namew));

			format(string, sizeof(string),"3Вы назначили Админом игрока %s.", namew);
			IRC_Say(EchoConnection2, recipient2, string);

			if(Lang[plid]==0) format(string, sizeof(string)," Вы были назначены Админом банды '%s'.",dini_Get(PF,"gangname"));
			else format(string, sizeof(string)," You have been moved to Admin position of gang '%s'.",dini_Get(PF,"gangname"));
			SendClientMessage(plid, yellow, string);

			SetTimerEx("SomeTemAdm", 50, 0, "i", plid);
			return 1; }

		if(strcmp(tmp, "untest", true) == 0){
			if(ircIsUser(conn,user2)) return 1;
			tmp = strtok(message2, idx);
			if (isnull(tmp)) {
				IRC_Say(EchoConnection2, recipient2,"3Использование: !GANG UNTEST <ID>");
				return 1; }
			if(strlen(tmp) > 9) return 1;

			new plid=strval(tmp);
			if(!IsNumeric(tmp)) {
				new temp;
				temp = SearchPl(tmp);
				if(temp==-1){
					IRC_Say(EchoConnection2, recipient2,"3Найдено слишком много игроков, введите более точно.");
					return 1;
				}
				if(temp==-2){
					IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
					return 1;
				}
				plid=temp;
			}

			if(!IsPlayerConnected(plid) || plid>=500) {
				IRC_Say(EchoConnection2, recipient2,"3Игрок не найден.");
				return 1;
			}

			new PF[256]; format(PF,sizeof(PF),"LVM/players/%s.ini", user2);

			if(dini_Int(PF,"gang")<2) {
				IRC_Say(EchoConnection2, recipient2,"3Вы должны быть Админом банды, чтобы дать статус участника.");
				return 1; }

			if(Gang[plid]==0 || strcmp(dini_Get(PF,"gangname"), PLGangName[plid], true) != 0) {
				IRC_Say(EchoConnection2, recipient2,"3Игрок не в вашей банде.");
				return 1; }

			if(GangTesting[plid]!=0) {
				IRC_Say(EchoConnection2, recipient2,"3Игрок не находится на 'тестировании' в банде.");
				return 1; }

			new namew[256]; GetPlayerName(plid,namew,sizeof(namew));

			format(string, sizeof(string),"3Игрок %s теперь полноправный член банды.", namew);
			IRC_Say(EchoConnection2, recipient2, string);

			if(Lang[plid]==0) format(string, sizeof(string)," Вы получили статус игрока в банде '%s'.",dini_Get(PF,"gangname"));
			else format(string, sizeof(string)," You now member of gang '%s'.",dini_Get(PF,"gangname"));
			SendClientMessage(plid, yellow, string);

			SetTimerEx("SomeTemUntest", 50, 0, "i", plid);
			return 1; }


		if(strcmp(tmp, "admcolor", true) == 0){
			if(!ircIsOp(conn,user2)) return 1;

			tmp = strtok(message2, idx);
			if (isnull(tmp)) {
				IRC_Say(EchoConnection2, recipient2,"3Использование: !GANG COLOR <NAME>");
				return 1; }

			new Pnowgang[256]; format(Pnowgang,sizeof(Pnowgang),"LVM/gangs/%s.ini", tmp);
			if (!dini_Exists(Pnowgang)) {
				IRC_Say(EchoConnection2, recipient2,"3Такая банда не существует.");
				return 1; }

			dini_Set(Pnowgang,"color","0xFFFFFF");

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
			if(Gang[i]!=0) if(strcmp(PLGangName[i], tmp, true) == 0) {
				if(Color[i]==0) format(string, sizeof(string), "0xFFFFFFFF");
				else format(string, sizeof(string), "0xFFFFFF60");
				new Coloren=HexToInt(string);
				SetPlayerColor(i,Coloren); }
			IRC_Say(EchoConnection2, recipient2,"3Цвет изменён.");
			return 1; }

		if(strcmp(tmp, "admdel", true) == 0){
			if(!ircIsOp(conn,user2)) return 1;
			tmp = strtok(message2, idx);
			if (isnull(tmp)) {
				IRC_Say(EchoConnection2, recipient2,"3Использование: !ADMDEL <NAME>");
				return 1; }

			if(strcmp(GangDelName, "None", true) != 0) return 1;

			new file[256]; format(file,sizeof(file),"LVM/gangs/%s.ini",tmp);

			if (!dini_Exists(file)) {
				IRC_Say(EchoConnection2, recipient2,"3Такая банда не существует.");
				return 1; }

			format(GangDelName,sizeof(GangDelName),tmp);

			SetTimer("SomeTemDel", 9000, 0);

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
			if(Gang[i]!=0) if(strcmp(PLGangName[i], tmp, true) == 0) {
				if(Lang[i]==0) SendClientMessage(i, green, " Ваша банда полностью удалена.");
				else SendClientMessage(i, green, " Your gang is completely removed."); }

			IRC_Say(EchoConnection2, recipient2,"3Банда полностью удалена.");

			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
			if(Gang[i]!=0) if(strcmp(PLGangName[i], tmp, true) == 0)
			SetTimerEx("SomeTemL", 500, 0, "i", i);
			return 1; }

		return 1; }


	if(strcmp(tmp,"!addcitynick",true)==0) {
		if(CityAdding!=1) return 1;
		if(ircIsUser(conn,user2)) return 1;
		if(strcmp(recipient2, EchoADMChan, true) != 0) return 1;
		format(string,sizeof(string),"3Работу с городами ведёт: %s",CityAddingNickName);
		IRC_Say(EchoConnection2, recipient2, string);
		return 1; }


	if(strcmp(tmp, "!addcity", true) == 0){
		if(CityAdding!=1) return 1;
		if(ircIsUser(conn,user2)) return 1;
		if(strcmp(recipient2, EchoADMChan, true) != 0) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование:");
			IRC_Say(EchoConnection2, recipient2,"3               !addcity 0 - отказать в добавлении города");
			IRC_Say(EchoConnection2, recipient2,"3               !addcity 1 - добавить предложенный город на предложенную подсеть без изменений");
			IRC_Say(EchoConnection2, recipient2,"3               !addcity 1 Название Города - добавить переписанный город на предложенную подсеть");
			IRC_Say(EchoConnection2, recipient2,"3               !addcity подсеть Название Города - добавить переписанный город на новую подсеть");
			IRC_Say(EchoConnection2, recipient2,"Проверять адреса можно здесь (вкладка IP owner info (Whois)): http://ip-lookup.net/ http://ip-whois.net/ip_geo.php");
			return 1; }

		new tempstr1[256], filenew[256], filetemp[256], fileold[256];
		format(filenew,sizeof(filenew),"LVM/system/ips/addnew.ini");
		format(filetemp,sizeof(filetemp),"LVM/system/ips/temp.temp");
		format(fileold,sizeof(fileold),"LVM/system/ips/iplist.ini");

		new File:f, File:f2, lent; lent=9;

		if(strval(tmp)==0) {
			f = fopen(filenew, io_readwrite);
			f2 = fopen(filetemp, io_append);
			while(fread(f, tempstr1))
			if(strcmp(tempstr1,CityAddingLineNew,true)!=0) {
				fwrite(f2,tempstr1); }
			fclose(f2);
			fclose(f);
			fcopytextfile(filetemp,filenew);
			fremove(filetemp);
			IRC_Say(EchoConnection2, recipient2,"3Отказано.");
			format(CityAddingStatNick,sizeof(CityAddingStatNick),"%s",user2); SetTimer("CityAddingStat", 10, 0);
			ReadCity();
			return 1; }

		if(strval(tmp)==1) {
			if(strcmp(CityAddingLineOld,"none",true)==0) return 1;
			if (isnull(tmp2)) {
				f = fopen(filenew, io_readwrite);
				f2 = fopen(filetemp, io_append);
				while(fread(f, tempstr1))
				if(strcmp(tempstr1,CityAddingLineNew,true)!=0)
				fwrite(f2,tempstr1);
				fclose(f2);
				fclose(f);
				if(fcopytextfile(filetemp,filenew)) fremove(filetemp);
				f = fopen(fileold, io_readwrite);
				f2 = fopen(filetemp, io_write);
				while(fread(f, tempstr1))
				if(strcmp(tempstr1,CityAddingLineOld,true)!=0)
				fwrite(f2,tempstr1);
				else {
					format(tempstr1,sizeof(tempstr1),"%s %s",CityAddingLineOldIp, CityAddingLineNewCity);
					fwrite(f2,tempstr1);
					format(tempstr1,256, "\r\n");
					fwrite(f2,tempstr1); }
				fclose(f2);
				fclose(f);
				if(fcopytextfile(filetemp,fileold)) fremove(filetemp);
				format(string,sizeof(string),"3Заменена строка: %s %s",CityAddingLineOldIp, CityAddingLineNewCity);
				IRC_Say(EchoConnection2, recipient2, string);
				f2 = fopen("LVM/system/addcity.log", io_append);
				format(tempstr1,sizeof(tempstr1),"%s %s %s",user2,CityAddingLineOldIp, CityAddingLineNewCity);
				fwrite(f2,tempstr1);
				format(tempstr1,256, "\r\n");
				fwrite(f2,tempstr1);
				fclose(f2);
				format(CityAddingStatNick,sizeof(CityAddingStatNick),"%s",user2); SetTimer("CityAddingStat", 10, 0);
				ReadCity();
				return 1;
			}else{
				f = fopen(filenew, io_readwrite);
				f2 = fopen(filetemp, io_append);
				while(fread(f, tempstr1))
				if(strcmp(tempstr1,CityAddingLineNew,true)!=0)
				fwrite(f2,tempstr1);
				fclose(f2);
				fclose(f);
				if(fcopytextfile(filetemp,filenew)) fremove(filetemp);
				f = fopen(fileold, io_readwrite);
				f2 = fopen(filetemp, io_write);
				while(fread(f, tempstr1))
				if(strcmp(tempstr1,CityAddingLineOld,true)!=0)
				fwrite(f2,tempstr1);
				else{
					lent+=strlen(tmp)+1;
					format(tempstr1,sizeof(tempstr1),"%s %s",CityAddingLineOldIp, message2[lent]);
					fwrite(f2,tempstr1);
					format(tempstr1,256, "\r\n");
					fwrite(f2,tempstr1); }
				fclose(f2);
				fclose(f);
				if(fcopytextfile(filetemp,fileold)) fremove(filetemp);
				format(string,sizeof(string),"3Заменена строка: %s %s",CityAddingLineOldIp, message2[lent]);
				IRC_Say(EchoConnection2, recipient2, string); }
			f2 = fopen("LVM/system/addcity.log", io_append);
			format(tempstr1,sizeof(tempstr1),"%s %s %s",user2,CityAddingLineOldIp, message2[lent]);
			fwrite(f2,tempstr1);
			format(tempstr1,256, "\r\n");
			fwrite(f2,tempstr1);
			fclose(f2);
			format(CityAddingStatNick,sizeof(CityAddingStatNick),"%s",user2); SetTimer("CityAddingStat", 10, 0);
			ReadCity();
			return 1; }

		f = fopen(filenew, io_readwrite);
		f2 = fopen(filetemp, io_append);
		while(fread(f, tempstr1))
		if(strcmp(tempstr1,CityAddingLineNew,true)!=0)
		fwrite(f2,tempstr1);
		fclose(f2);
		fclose(f);
		if(fcopytextfile(filetemp,filenew)) fremove(filetemp);
		f = fopen(fileold, io_append);
		format(tempstr1,sizeof(tempstr1),"%s",message2[lent]);
		fwrite(f,tempstr1);
		format(tempstr1,256, "\r\n");
		fwrite(f,tempstr1);
		fclose(f);
		if(fcopytextfile(filetemp,fileold)) fremove(filetemp);
		format(string,sizeof(string),"3Добавлена строка: %s",message2[lent]);
		IRC_Say(EchoConnection2, recipient2, string);
		f2 = fopen("LVM/system/addcity.log", io_append);
		format(tempstr1,sizeof(tempstr1),"%s %s",user2,message2[lent]);
		fwrite(f2,tempstr1);
		format(tempstr1,256, "\r\n");
		fwrite(f2,tempstr1);
		fclose(f2);
		format(CityAddingStatNick,sizeof(CityAddingStatNick),"%s",user2); SetTimer("CityAddingStat", 10, 0);
		ReadCity();
		return 1; }


	if(strcmp(tmp, "!getnet", true) == 0){
		if(ircIsUser(conn,user2)) return 1;
		if(strcmp(recipient2, EchoADMChan, true) != 0) return 1;
		tmp = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование:");
			IRC_Say(EchoConnection2, recipient2,"3               !getnet ip");
			return 1; }

		new war;
		for(new i = 0; i < strlen(tmp); i++) if(tmp[i] == 46) war++;
		if(war!=3){
			IRC_Say(EchoConnection2, recipient2,"3Неверный адрес.");
			return 1; }

		new TTTemp;
		for(new i=0; i<strlen(tmp); i++) {
			TTTemp=0;
			if (tmp[i] > 47 && tmp[i] < 58) TTTemp=1;
			if (tmp[i] == 46 || tmp[i] == 42) TTTemp=1;
			if(TTTemp != 1){
				IRC_Say(EchoConnection2, recipient2,"3Неверный адрес.");
				return 1; } }

		new tempstr[256]; CountryAndCityIP(tmp, tempstr);
		format(tempstr, sizeof(tempstr), "3Найденная строка: %s",tempstr);
		IRC_Say(EchoConnection2, EchoADMChan, tempstr);

		return 1; }



	if(strcmp(tmp, "!addtextcity", true) == 0){
		if(ircIsUser(conn,user2)) return 1;
		if(strcmp(recipient2, EchoADMChan, true) != 0) return 1;
		tmp = strtok(message2,idx); tmp2 = strtok(message2,idx);
		if (isnull(tmp)) {
			IRC_Say(EchoConnection2, recipient2,"3Использование:");
			IRC_Say(EchoConnection2, recipient2,"3               !addtextcity подсеть Название Города - добавить или заменить строку");
			return 1; }

		new tempstr1[256], tempstr2[256], filetemp[256], fileold[256], t, idxc;
		format(filetemp,sizeof(filetemp),"LVM/system/ips/temp.temp");
		format(fileold,sizeof(fileold),"LVM/system/ips/iplist.ini");

		new File:f, File:f2, lent; lent=13;

		f = fopen(fileold, io_readwrite);
		f2 = fopen(filetemp, io_append);
		while(fread(f, tempstr1)) {
			idxc=0; tempstr2 = strtok(tempstr1,idxc);
			for(new i = 0; i < 180; i++) if(tempstr2[i]==13) { tempstr2[i]=0; tempstr2[i+1]=0; }
			for(new i = 0; i < 180; i++) if(tempstr2[i]==10) { tempstr2[i]=0; tempstr2[i+1]=0; }
			if(strcmp(tempstr2,tmp,true)==0) {
				format(tempstr1,sizeof(tempstr1),"%s",message2[lent]); t=1;
				fwrite(f2,tempstr1);
				format(tempstr1,256, "\r\n");
				fwrite(f2,tempstr1);
			}else fwrite(f2,tempstr1); }
		fclose(f2);
		fclose(f);
		if(fcopytextfile(filetemp,fileold)) fremove(filetemp);
		if(t==0) {
			f2 = fopen(fileold, io_append);
			format(tempstr1,sizeof(tempstr1),"%s",message2[lent]);
			fwrite(f2,tempstr1);
			format(tempstr1,256, "\r\n");
			fwrite(f2,tempstr1);
			fclose(f2);
			format(string,sizeof(string),"3Добавлена строка: %s",message2[lent]);
			IRC_Say(EchoConnection2, recipient2, string);
		}else{
			format(string,sizeof(string),"3Заменена строка: %s",message2[lent]);
			IRC_Say(EchoConnection2, recipient2, string); }

		f2 = fopen("LVM/system/addcity.log", io_append);
		format(tempstr1,sizeof(tempstr1),"%s %s",user2,message2[lent]);
		fwrite(f2,tempstr1);
		format(tempstr1,256, "\r\n");
		fwrite(f2,tempstr1);
		fclose(f2);
		format(CityAddingStatNick,sizeof(CityAddingStatNick),"%s",user2); SetTimer("CityAddingStat", 10, 0);

		return 1; }


	if(strcmp(tmp, "!unknowncity", true) == 0){
		if(ircIsUser(conn,user2)) return 1;
		if(strcmp(recipient2, EchoADMChan, true) != 0) return 1;

		new tempstr1[256], tempstr2[256], filetemp[256], fileun[256];
		format(filetemp,sizeof(filetemp),"LVM/system/ips/temp.temp");
		format(fileun,sizeof(fileun),"LVM/system/ips/addnotadded.ini");

		new File:f, File:f2;
		f = fopen(fileun, io_readwrite);
		fread(f, tempstr2);
		fclose(f);

		f2 = fopen(filetemp, io_append);
		f = fopen(fileun, io_readwrite);
		while(fread(f, tempstr1))
		if(strcmp(tempstr1,tempstr2,true)!=0) fwrite(f2,tempstr1);
		fclose(f);
		fclose(f2);
		fcopytextfile(filetemp,fileun);
		fremove(filetemp);

		for(new i = 0; i < 180; i++) if(tempstr2[i]==13) { tempstr2[i]=0; tempstr2[i+1]=0; }
		for(new i = 0; i < 180; i++) if(tempstr2[i]==10) { tempstr2[i]=0; tempstr2[i+1]=0; }
		IRC_Say(EchoConnection2, recipient2,tempstr2);

		return 1; }

	/*
if(strcmp(tmp, "!debug", true) == 0){
if(!ircIsOp(conn,user2)) return 1;
if(strcmp(recipient2, EchoADMChan, true) != 0) return 1;

new tempstr1[256], tempstr2[256], tempstr3[256], tempstr4[256], filetemp[256], fileold[256], filefin[256], t, idxc, idxc2, gl;

format(filetemp,sizeof(filetemp),"LVM/system/ips/temp2.temp");
format(fileold,sizeof(fileold),"LVM/system/ips/iplist.ini");
format(filefin,sizeof(filefin),"LVM/system/ips/fin.ini");

new File:f, File:f2, File:f3;

fcopy(fileold,filetemp);

f2 = fopen(filetemp, io_readwrite);
while(fread(f2, tempstr1)) {
idxc=0; tempstr2 = strtok(tempstr1,idxc);
for(new i = 0; i < 180; i++) if(tempstr2[i]==13) { tempstr2[i]=0; tempstr2[i+1]=0; }
for(new i = 0; i < 180; i++) if(tempstr2[i]==10) { tempstr2[i]=0; tempstr2[i+1]=0; }

t=0;
f = fopen(fileold, io_readwrite);
while(fread(f, tempstr3)) {
idxc2=0; tempstr4 = strtok(tempstr3,idxc2);
for(new i = 0; i < 180; i++) if(tempstr4[i]==13) { tempstr4[i]=0; tempstr4[i+1]=0; }
for(new i = 0; i < 180; i++) if(tempstr4[i]==10) { tempstr4[i]=0; tempstr4[i+1]=0; }
if(strcmp(tempstr2,tempstr4,true)==0) t++; }
fclose(f);

if(t>1) {
for(new i = 0; i < 1000; i++)
if(strlen(TestsedStr[i])!=0 && strcmp(TestsedStr[i],tempstr2,true)==0) t=99;
if(t!=99) {
TestsedStr[gl]=tempstr2;
gl++;
f3 = fopen(filefin, io_append);
fwrite(f3,tempstr2);
format(tempstr2,256, "\r\n");
fwrite(f3,tempstr2);
fclose(f3); } }

}

fclose(f2);
//fremove(filetemp);

format(string,sizeof(string),"3Найдено повторений: %d",gl);
IRC_Say(EchoConnection2, recipient2, string);

return 1; }

*/

	if(strcmp(tmp, "!part", true) == 0){
		if(ircIsUser(conn,user2)) return 1;
		if(strcmp(recipient2, EchoADMChan, true) != 0) return 1;
		IRC_PartChannel(EchoConnection2, EchoADMChan);
		return 1; }

	if(strcmp(tmp, "!join", true) == 0){
		if(ircIsUser(conn,user2)) return 1;
		IRC_JoinChannel(EchoConnection2, EchoADMChan);
		return 1; }

	return 1;
}



public IRC_ConnectionCheckEchoBased() {
	CrashTest("[function] IRC_ConnectionCheckEchoBased");

	IRC_Say(EchoConnection1, EchoBot2, "ping");

	if(IRCconnetion>4) {
		IRCconnetion=1;
		SetTimer("IRC_ReconnectF", 30000, 0);
		printf("[irc] AutoReconnect."); }
	IRCconnetion++;
	return 1; }


public IRC_ReconnectF() 
{
	CrashTest("[function] IRC_ReconnectF");
	IRC_Quit(EchoConnection1, "Reconnect");
	IRC_Quit(EchoConnection2, "Reconnect");
	EchoConnection1 = IRC_Connect("irc.bews.tk", 6667, EchoBot1, "Original Russian Server Bot", "original");
	EchoConnection2 = IRC_Connect("irc.bews.tk", 6667, EchoBot2, "Original Russian Server Bot", "original");
	IRCconnetion=1;
	return 1; 
}

